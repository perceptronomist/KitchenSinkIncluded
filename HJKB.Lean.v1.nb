(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1923950,      36506]
NotebookOptionsPosition[   1914242,      36336]
NotebookOutlinePosition[   1914665,      36353]
CellTagsIndexPosition[   1914622,      36350]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Misc Utilities", "Subsection",
 FontFamily->"Roboto Condensed",
 FontSize->18,
 FontWeight->"Regular",
 FontColor->GrayLevel[0],
 Background->RGBColor[0.87, 0.94, 1]]], "Section",
 CellChangeTimes->{
  3.880316680800722*^9, {3.912963553762158*^9, 3.9129636193224163`*^9}, {
   3.9136713478474216`*^9, 
   3.913671361461013*^9}},ExpressionUUID->"1c513c6f-8f87-4c9d-8451-\
96a35d878f1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"quickHist", "[", 
   RowBox[{"dataAsList_", ",", "plotLbls_", ",", " ", 
    RowBox[{"sz_", ":", "Medium"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Histogram", "[", 
     RowBox[{
     "dataAsList", ",", "Automatic", ",", "\"\<Probability\>\"", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "sz"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ChartStyle", "->", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"3", ",", 
           RowBox[{"2", "*", "n"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", " ", 
           RowBox[{"Length", "@", "dataAsList"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ChartLegends", "->", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"lbl", ",", 
           RowBox[{"FontFamily", "->", "\"\<Courier\>\""}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"lbl", ",", "plotLbls"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Rotate", "[", 
       RowBox[{"\"\<\>\"", ",", 
        RowBox[{"90", " ", "Degree"}]}], "]"}], ",", "\"\<\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Left", ",", "Bottom"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.879622445759871*^9, {3.879623872472273*^9, 3.879624127661941*^9}, {
   3.879624176251239*^9, 3.879624288966408*^9}, {3.87962431958632*^9, 
   3.8796244338553333`*^9}, {3.879624518308681*^9, 3.879624552853127*^9}, {
   3.880316813114393*^9, 3.880316827788492*^9}, {3.88031801087773*^9, 
   3.8803180443291473`*^9}, {3.880318128424247*^9, 3.880318149938306*^9}, {
   3.880325946833387*^9, 3.880325947244478*^9}, {3.880417914148448*^9, 
   3.880417914632545*^9}, {3.880417953832364*^9, 3.880418002026058*^9}, 
   3.9129631704155283`*^9, {3.913659002332658*^9, 3.913659007379369*^9}, {
   3.913659096723942*^9, 3.913659121420063*^9}, {3.913659177392354*^9, 
   3.91365919691298*^9}, {3.913659229670116*^9, 3.913659303653654*^9}, 
   3.9136595858243523`*^9, {3.913660027955263*^9, 3.913660125781249*^9}, {
   3.913660173922825*^9, 3.913660349567766*^9}, {3.913660399952759*^9, 
   3.913660402135791*^9}, {3.9136604349717083`*^9, 3.913660439188435*^9}, {
   3.913660631438171*^9, 3.913660679430121*^9}, {3.9136607185770197`*^9, 
   3.913660755237026*^9}, {3.913660813093162*^9, 3.913660875667108*^9}, 
   3.913661177250676*^9, {3.913661325055287*^9, 3.913661328403491*^9}, {
   3.913661365751657*^9, 3.913661368466434*^9}, {3.913661527889241*^9, 
   3.913661530446953*^9}, {3.913671258808655*^9, 3.913671260600808*^9}, 
   3.913671301660466*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"aa7f075b-ab19-462d-bc75-ebb506bb4b37"],

Cell[CellGroupData[{

Cell["Activation Functions", "Subsection",
 CellChangeTimes->{{3.913671405462894*^9, 
  3.9136714156813927`*^9}},ExpressionUUID->"bd555e99-4913-4692-bd7a-\
4a25d9397b86"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"swish", "=", 
   RowBox[{"ElementwiseLayer", "[", 
    RowBox[{
     RowBox[{"#", "*", 
      RowBox[{"LogisticSigmoid", "[", "#", "]"}]}], "&"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gauss", "[", "s_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"s", "^", "2"}]}], "/", "2"}], "]"}], "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"2", " ", "Pi"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", "s_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Erfc", "[", 
     RowBox[{"s", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}], "/", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]Inv", "[", "u_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Sqrt", "[", "2", "]"}], "*", " ", 
    RowBox[{"InverseErfc", "[", 
     RowBox[{"2", "*", "u"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CurlyPhi]", "[", "s_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"s", "*", 
     RowBox[{"\[Psi]", "[", 
      RowBox[{"-", "s"}], "]"}]}], " ", "+", " ", 
    RowBox[{"gauss", "[", 
     RowBox[{"-", "s"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"transducer\[CurlyPhi]", "[", "s_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"\[CurlyPhi]", "[", "s", "]"}], "-", 
    RowBox[{"\[CurlyPhi]", "[", "0", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"grelu", "=", 
   RowBox[{"ElementwiseLayer", "[", 
    RowBox[{
     RowBox[{"transducer\[CurlyPhi]", "[", "#", "]"}], "&"}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.879622445759871*^9, {3.879623872472273*^9, 3.879624127661941*^9}, {
   3.879624176251239*^9, 3.879624288966408*^9}, {3.87962431958632*^9, 
   3.8796244338553333`*^9}, {3.879624518308681*^9, 3.879624552853127*^9}, {
   3.880316813114393*^9, 3.880316827788492*^9}, {3.88031801087773*^9, 
   3.8803180443291473`*^9}, {3.880318128424247*^9, 3.880318149938306*^9}, {
   3.880325946833387*^9, 3.880325947244478*^9}, {3.880417914148448*^9, 
   3.880417914632545*^9}, {3.880417953832364*^9, 3.880418002026058*^9}, 
   3.9129631704155283`*^9, {3.913659002332658*^9, 3.913659007379369*^9}, {
   3.913659096723942*^9, 3.913659121420063*^9}, {3.913659177392354*^9, 
   3.91365919691298*^9}, {3.913659229670116*^9, 3.913659303653654*^9}, 
   3.9136595858243523`*^9, {3.913660027955263*^9, 3.913660125781249*^9}, {
   3.913660173922825*^9, 3.913660349567766*^9}, {3.913660399952759*^9, 
   3.913660402135791*^9}, {3.9136604349717083`*^9, 3.913660439188435*^9}, {
   3.913660631438171*^9, 3.913660679430121*^9}, {3.9136607185770197`*^9, 
   3.913660755237026*^9}, {3.913660813093162*^9, 3.913660875667108*^9}, 
   3.913661177250676*^9, {3.913661325055287*^9, 3.913661328403491*^9}, {
   3.913661365751657*^9, 3.913661368466434*^9}, {3.913661527889241*^9, 
   3.913661530446953*^9}, {3.913671268547683*^9, 3.9136712799201937`*^9}, {
   3.9136713695804977`*^9, 3.9136713843894873`*^9}, {3.91367150142918*^9, 
   3.913671502267199*^9}, {3.9138082717195807`*^9, 3.9138083052407217`*^9}, {
   3.913808425401174*^9, 3.9138084372766047`*^9}, {3.913808506068454*^9, 
   3.913808510077141*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"88c45977-87a6-43da-a472-1375e06de5e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions on Sequences", "Subsection",
 CellChangeTimes->{{3.913671429479459*^9, 
  3.913671448471736*^9}},ExpressionUUID->"0d603c21-39e5-4526-9903-\
b3e39be7c687"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"generateF3", ",", "normalizedF3", ",", "jacobiF3"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generateF3", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{"2", "*", "\[Eta]", "*", 
   RowBox[{"Sinh", "[", "\[Eta]", "]"}], "*", 
   RowBox[{"Divide", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[Eta]"}], "*", 
        RowBox[{"Sinh", "[", "\[Eta]", "]"}]}], "]"}], "-", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "\[Eta]"}], "]"}]}], ",", 
     RowBox[{"1", "-", 
      RowBox[{"Sinh", "[", "\[Eta]", "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normalizedF3", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"generateF3", "[", "\[Eta]", "]"}], "/", 
   RowBox[{"generateF3", "[", 
    RowBox[{"Sqrt", "[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jacobiF3", "[", "\[Eta]_", "]"}], ":=", 
  RowBox[{"normalizedF3", "[", 
   RowBox[{"\[Eta]", "+", 
    RowBox[{"Sqrt", "[", "2.", "]"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.879622445759871*^9, {3.879623872472273*^9, 3.879624127661941*^9}, {
   3.879624176251239*^9, 3.879624288966408*^9}, {3.87962431958632*^9, 
   3.8796244338553333`*^9}, {3.879624518308681*^9, 3.879624552853127*^9}, {
   3.880316813114393*^9, 3.880316827788492*^9}, {3.88031801087773*^9, 
   3.8803180443291473`*^9}, {3.880318128424247*^9, 3.880318149938306*^9}, {
   3.880325946833387*^9, 3.880325947244478*^9}, {3.880417914148448*^9, 
   3.880417914632545*^9}, {3.880417953832364*^9, 3.880418002026058*^9}, 
   3.9129631704155283`*^9, {3.913659002332658*^9, 3.913659007379369*^9}, {
   3.913659096723942*^9, 3.913659121420063*^9}, {3.913659177392354*^9, 
   3.91365919691298*^9}, {3.913659229670116*^9, 3.913659303653654*^9}, 
   3.9136595858243523`*^9, {3.913660027955263*^9, 3.913660125781249*^9}, {
   3.913660173922825*^9, 3.913660349567766*^9}, {3.913660399952759*^9, 
   3.913660402135791*^9}, {3.9136604349717083`*^9, 3.913660439188435*^9}, {
   3.913660631438171*^9, 3.913660679430121*^9}, {3.9136607185770197`*^9, 
   3.913660755237026*^9}, {3.913660813093162*^9, 3.913660875667108*^9}, 
   3.913661177250676*^9, {3.913661325055287*^9, 3.913661328403491*^9}, {
   3.913661365751657*^9, 3.913661368466434*^9}, {3.913661527889241*^9, 
   3.913661530446953*^9}, {3.913671288576667*^9, 3.913671294495791*^9}, {
   3.913671507732421*^9, 3.913671515142411*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"ae6c1a48-2adb-4a54-b5b5-bd787af31395"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"generateF3", "[", "\[Eta]", "]"}], ",", " ", 
         RowBox[{"jacobiF3", "[", "\[Eta]", "]"}], ",", 
         RowBox[{"LogisticSigmoid", "[", "\[Eta]", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Eta]", ",", " ", 
         RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", " ", 
       RowBox[{"PlotLabels", "->", "\"\<Expressions\>\""}], ",", " ", 
       RowBox[{"ImageSize", "->", "300"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"transducer\[CurlyPhi]", "[", "x", "]"}], ",", 
         RowBox[{"swish", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "6"}], ",", "4"}], "}"}], ",", " ", 
       RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}]}], "]"}]}], "}"}],
    ",", "2"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9136715335467176`*^9, 3.9136715996367693`*^9}, {
  3.913744539196375*^9, 3.913744565462803*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"f670372c-4baf-4acc-8092-4a308e3a58dc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
          Opacity[1.], LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ], 
        TagBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
          Opacity[1.], LineBox[CompressedData["
1:eJwt2Hk0ld/XAHCFRKZGXykhQ1SipJRslDEyNFCJZn40olBCpgyROVMhU5e4
ZjJtkVKGZCrjLblc46OkDKX3WOv9667Peta95+zn7LX3Plf8/HXTS0vZ2Ni4
lrCxLX7Kw7qRf/8YuNZDPZibjwnXZzf7zc4x8KL23V2ygkzIyVeUnppm4ECg
cLruaibs3GJ4fnCUgdUHvs34CjNhz0rvroZPDLTVstRcIs0E9W/f38fQGbiK
Eao/psYE0weNmbusGOgoc2Jj3A0mOH3wvmpd2Ye8jcvgaCsT2tpWjLw614v0
iIOxQmmDsLHq+po9G3owdmVAuf7lISi0e80p0NuF928qxXzYyIKzDxUnOz07
UfY/x4iKPhbMhN31Q/iMr9/Efr35cBiS+fuEo792IHVvt5WUxgjE6yvat/q3
o974nJ3pyAh4XjnnLKvXhv+ZVbjpeozCXfYMJ/vxFgy0Opr4SXgMznl8kOx4
/hHN7mlx6yaOQWQFMzrethnNvwg9sxQZh1LGFt4XEk24vvpvQlvUOGwWVNc8
9rQeg6BKTY9tAvLk/Gz7v9XhMi3DMyXWE8CozRVTVn6DnlprKgWqJ4C5LXIn
FtWghs2aHgVeCuTcUidYmTXYeVCn3oKPgmsfCjNWJdUgj4v6Ej9+CmZudkhc
DqzBFmUXjR5BCniKhVbzna3BSffsVa5rKVDQiJ06xV2DbI2509GiFNw9nlDw
63Q12ltilo4CBSvdaMryS17h60s+0c4mFPgWbakT/F2FAk3Why+ZUjA3kX5y
aqwKg7poFiZHKei3SnMt+VyF2aVGsTLHKcjTSK7WzKlClrqKZ4M5BaacT46Y
WVVh8O+znDNWFMgIizey3UX8Aw797Vcp2KZMbUudKkc+K027rAcUXJZ3d3/Z
W47Z/I2Snn4UJEgLtDS+LcfJZ3vFT/hTsEpoh9OvuHL8lV7bPx9Awe/f117p
HCpHuoCGv1owBdUvJ46PRJRhiMFBm8QICswPTLjtUC5Fl27eqI5ECsJ2u308
KFaKpvl7i8KTKKjfzi9pzlOKGLggbPyMAjVR+XcefS+xuNDhxZtkCjb/u7q6
xfclOtS//ZuRRsFE1Xi646cSFGqxMzd+QYHXofHml87F2Cmftpm/mKyvO2ak
dKEYJdVVa3KI2QxHm7INi7HpjFy2aQkFrseHG5IlitH5tsLliJcU3L7MrAtq
KMKmm61WAuUU2Pj1Vp0TK0KLh2L3v1VRYNDQmMNdV4AbOPXLOd5TENDcsMM7
rwCHrE0/hxDXtdVnL8QXIMfWXvUN9RRo9b57MXWzAHeyJ/9WaCDxTNQ+7xUp
wPzg1X9Nmsj5C1Ym5l7PxxfS7TfsWyhYeyw75KRQHrYl6Oht7yLnJx1YqsWe
hz1REbJxxMaz1gOKVC52vvh6bXk3Wf+p+F6et7koGJW85SvxAiuCUXo7FyWs
e04G9lIweO+u/IaOHOQ0/FVW/YXkp1FodIUsHRW7M95WDFLw/Kf+WOQSOlqt
7j393xDJnxgO9Wud2fgVrE7YE58YcBoS9c/GwzoebpIsCsDFUtmDlYVBm2/G
3x+mQDB5a5tm+gs0Yq0U3jRG9vurVqBOMgOr9yZYD01SEJzxrFptloaj5EiU
vlNgZ+l+q7CRhjb06ej7xJJv9nY/u03D2emvC//9oCAqMjPtXt1zdAx3s4Up
Cu4ohR7YdSUd89bzfbCdJvthXZ2kqaejK6/4+iziXfH6yWJr01Gq0jh/gniM
nYObvzINK0e0m6//osCy9XYbSyAN4w1ti/73mwJNewu7p/kpSNsWp6k6S4Go
tIroWr8U7Hpv7+RAPN+59mOgRQpK1N6ZpxEXaHxQduFMQV/m+e9r5iiQXqm5
9JhZMl5/5BfVT7y0VrTw/dZkvHjpk/aaeQoYzvPWGmzJ6KU0qK1FHP2loFGe
9gxTHz9UTiXmyZGJ4Z5PQi77v+0Wf8j5XOAw8PiQhHV0g2X+xDVCXxd+JSdh
JAflW0Ds6h57ccAgCecDnFy4/5J8P8KngE8T8YRKqlQmcWo3M2jY+ylOTnBn
Ni5Q0OW6LuHJrqe4cE+jdIyYX1Qnx6T/CY4Yn1Fc8Y/k99nnLS/hCXap3zfT
JtZm2goFzMWhJruKTyHxHd+4LWq0OIyXMGn/QJwt06DywywOpUIag4aJhWy3
W5wqjMXHAuvj+dgmgTVBJcrdiMHSISjdT7whRCyvTzQGxcarvLWJjRVNasIa
ozHVppDdhLjEIY85JxeNY++FN10iHlvz7Vd252P8qhlbdo1YrGj18gt+j/HE
UTqvM7H/jKNcPTMKd0aXNPgTV8ak7nePiMIHvhX7w4h/7Osw2HUwCnffd7aK
JT51b8/1uMRIVNXZWUsjDha18TAyisQ10xpcucTVGB3KvhCBex1lF4qJ5ZbO
5dudjsCh/iSeWmLLZLnaTTwRaNp7UKyeOOzQ6Y7WknCsqmSMNBO/YQYOPbAO
RyVhN9sO4jnf8pn968KxxEsmoZtYfss49+TrMDwaO+D3hfj8u40iKQ5huG6h
QoZJXL/C/QDvx1DU02d5jxOzZdGPVLmHYleQ/sHvxEpHvlg5yodiTdto0U9i
G0rw5pbeEOTrbGP8Jo4P0fDsCQzBopP8lXPEzYr24SH7QrBkfZLJX+LlaVp6
/i2P8N9AZOw/4husNLvvOx7hTd/p6CVLJuGz3PLgk0HBOPixzoCdWP3q/3Je
jQThtoT/ijiIn9Pft8jqBuH8+/E2TmLBH1unQ1MfIsceE9oyYhelIKG5pQ9x
4N3hXVzE/bcnVM6fDcRN1wftF63/0sjifUUAbhOSs1l03nyO206RALQt3rR6
0evVViXFOvujmH6zw+LveXo41Czt8MM7TYcCFtcbrW5j2u7yw2Bd3xOL+znG
qby8NeQBmr168nkpcbnOY7n9E76YqR0huBiPZMCMQfJhXzw8ar+wQOJ92HDy
+gqaD7a90Xz2h/gnf1mowzIfrJrm/TNLfMZkQ0H3BW+0ielasfg+x6amVW69
9sJPKin9U8SuUR+QX8oL7x69YD9JzKtC03ru44lqwWJlY4vvv9uzXmPwPnpH
DZSziLe5WZh0a99HyY0lTgPEZWLKnxzTPdD+U/Iog7igvqXW6KMbhrYMLrQT
twn6fvQMu4faEUZPF/Np6rhKb+FRV7wQOPXrPfHOLwk/RTpc0MFAsK2SmP7z
ymZWlyNGOUSoJRM3qYjtEIl3QB2RpudxxBNurfuOnLHH883+DeHE5qscU2zw
OnpJZKp7ER/dz790ybtLaBkT0mO5mM+1jsLWhy9gaFX76uOL+WPUrdDYeBbV
Bwc4DhPH1RnjzlQzvOLss0aZ2KNtS5tIzXa8U9o0snwxXoFeW87ta0DAobZ/
ltSDju+eCYIze6HFdfXFr8R3w7Xf2ykZQ76lXU02cY2Y/4Mngufh1JjAb01i
7yiJG3uCL0J/3NV06cX6w1tu/nGFNdQ+9GngJq77PSHLyXUFsij5W02kfllb
y10uWrAHt2pHTRNiXQmnU14HHEFWLzdWgXhLb80RY9dbIGWjZiNAPGJ6Zs/I
rBMo7I+6UE/q4xW1kOWi065glWTcq0r8kudue/UtL6Afoo9zkvqauH1tK13C
G7hOFW3oJPXZ15jeHP/BG0JDJmmZxMeivtXflvWFFx3nGEeIJ8UNquV6/YDd
9UdJ0GI/UNlIDzsUDE1sb1XHZyjgtSh+4f49GPyu4qki4ik3k4wrTx8B19S9
z27EZ/urTTe7hoDpo/wpPmL5Lb8N/7aHgr7dh0xJ0p/e5VsdyvWPAAfmWRUl
0s9Ua7fVyHyJgLy1TVZTPynI6ZjVeKocCV/uJAzlEkfNhkPgt0gQHPkksp34
ItTtu3TgMSgOeAhvIP3z33sFReHvMXCjq9+jh/Tj3f1LRO+bJ4Dr7bCyoVGy
fqnZdwVaAtgY00ejiaXDsl5/mU0A3+HHEXrEK5Je7E40TISQGSkT2ggFf4zN
e/5NJAIrKsPpPOn/vTl0WVR8BpGPhILLyDyRcMPy9YHiFPAX2OTB/ZWCeAvu
7EhGCkx9y5qmkfkjWrfg8ThXKrCzDQzqEYeI8dg9MU8F7dvJqn4MCjyaC1f+
nU2F0jcLxQtkfjmnwGdVrpoOO1RKl7aS+WfzZNnsvmoaJKmZBwu3kf7YeND7
5zgNRu2fQGIryceMev5s4QygvR4zlyYOuNS9WfxmBjjvkXqtQOarya45Qy6x
TFjIsvJQa6agslblWeu9F+B9aVvmATKfnYor1r+iQoekt9Gp9TUU6CV3Nh4x
zwOX2Z/S23PJ932yL9dezQPbsOaS0BwSj43Xv/1eedB3ZBin6RSwtm9XlM3O
AxVLI/nybAr8Sjwi2DnygSvn9CNNMp/WNcqcLqHnQ/j5P/d2p1OgM3OLJc5V
CDvYhEcL4sm8aLiKfbqwGOa1mrnFfSl4ZPXJQ6G4HK5wtAvGnKDg7ZGNfMar
XkGNzAMdTxEKxsXXurXE1sCMo/mmqt4JuOW49dyjdW9ANqA/0DVuAj71CJpe
rquD6jfKgfmGE3DWRXWIy6AeuhR3SK0n952arXsCajibIDg3jF0gfRykuctZ
KbrNMM4/bNtgNA4by+20OP0+QvHGLLmeX2PANreUZt/fAg0274rWh4/Bb5MK
y1qpNlgmx21xbtcYdCtZiUh5t8PIdbNxvXejcMNMcKVETwfY+VTIqFiNgnDE
gDnHxs8g6SioNj83AtmnE9OnnDvh75DkTt2gETA74K5bV9EFbw9O82pLj0Cu
5VWJfX+6QUTzYi33q2GY4TnI/vJ4Lywcyt6+/+gwmH7cr7wxug9SHW3T+cdZ
wLN/xavyJ31QpnPsqs4oC16ldB22SO6DZ2VeBzyGWaDg7HIuLrsPFNwW/nxn
soB/U/FD4do+cFt7ba6d3EffXdn5be0P8rzW9l9CMwvUl8uG8BswIEnTJ1e1
gNxXb86szzZhwGuXsm+381hA736bamjGAGN/V4ncHBaI0i+XPTzPACljZq1U
Fgv+HE8Z5HFhwKc9+9IE0lhQnLzpAFcaA069EephPmbBNT7qbVomA6qVNjHE
olgg7VRpqp3LAI34Wup0BAsi9M/Y+JST5wK79rWEsMD+e2w4eysD3L1sbqE/
C+RO24omf2aA0gwMzT1gwdfXKjTNPga8+6JqrezLAuPoz5X3hxkgFjUcmuXJ
guVLn+uJUwzwfFSqOuzBArRzaqv6yYCfx6emJd1ZcLtd2+rsHAPW2KRUnL3H
gv//fwHm9/WFx99lwf8BGoy1ag==
           "]]},
         Annotation[#, "Charting`Private`Tag#2"]& ], 
        TagBox[
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[2], 
          Opacity[1.], LineBox[CompressedData["
1:eJwtlHk41HkAxieTrYioVYkhRxdS1BKyrw5tisiTHT02Z47oWNNaym4nGkep
qLVqZR9UQyEds7bh68iVDrc5mN/M/BrnIpVdPJWdfZ79433e5/PX+/7xPq9J
8DHvUDUGg+Gh0n9ujcVDMzMUed942i93jRDHpsy4U9MUiWgNv/fKQojShzYr
309QJMPVmPnJUgjb1R7BfcMUsQieqt5vLYS9boL4RTdFQhmuiYs2COFCjz//
tYQiCsdLJtzNQnhfeFm0IYAimpe4RTGeQsS+TjgSXikl7FylKChGiI4OzaHq
oF5SmmmwbKBBCFbVsS/tDXtI3s+adt56IjyOeqa+oFdMjrNaQlKCRAhMs3kr
OicifD1/9pVHIkxejecSCAl74nnTATUx8rSl+lnyLnJwQF7JYItxc5cNpz25
k/gt1T8UUSjGucNBcWvcOsj2mbrMuEkx4pmFsZyRNrLPs1v7oIcEQWdem3fd
bSU5Gf37B25KcK1CmXUzsoW8G7rzQXdYgj+p1fPvmb4iKSeLzy916YGZjsvW
fTnNxH2L7bpb6T0os+BGKuhGMuZN1zP7ekDVPVhuZ1dP+L8vj2U49UJpdc2W
PKklK5qMMsJSeqF7imdnPauabI2qEdyW9cLKbsyq4L2A+FRxBrbZSHF++0hL
eRyfGK3Kvs/nSqG3r/jy/iVlhHZvd+BJpSj7u25Bo3khoYOVgUprCgUS5cXB
hByiFTrOG02kcGCv4SNJSAIxdS7y39RNoVwjvrMm5jyWaDuXxyyS4SvFLKOz
vregGxpdXfK1DGZvn0451vBQoD7jxwyXwS1P9HKPbxk8Tz46WHZVBlePhcyJ
x3ysMh+YTKuQIT2g+8x6vgDNJc6j8UoZGvawtLwWVkPWp59coSPHiIneqbbs
WsgctVJ1HOSI+cEyKH1xPUqbbIySA+Xo7tHxDmtsxIyDRtyuVDkCT2zun+Pe
jI6jZkXLHspRa2mfUqv+CryGumRLqRwr5wkG8ne2wGNwPNvtCwVYgihXdW4r
InqeeCauVYAxrcbjKNog/2vn5Qm2Av/srfCvW9GBYjh+5JxWQLIxwGBFQif0
p5PmGxQq8D1bR9e0pwso6fbpaldAP/ON72yWasellzi50woU++XeeR8nQnHV
9cYkcxps59M7GyvEmMmfl/XTbhoP/I+YOn6UYCLixZukaBqTGtuY5T69CBgZ
D8/JpuHd6mTHypKCt8qR21RFQ8NJs1rwmxQXUh2vHK+mUZ0v3v1dnhT2TuXX
WTU01sedCLpRLIWTx7pfomtpaBvz0/TrpOgfGD2iX0+j6bAtrfdOirArWzgR
zTRc5q65rO1O4aQ4pI3ZpcqPnlxWvJfC69nGkfdVXCJpKPBgU2ib/83nb7tp
GJWEPU0LphCXKjEoFNL46JPfp3GCwg7WHCsvCQ1+nrHznNsUPC6O3boho3FU
a6zhdhEFw8f2n7fLaayMrfTe8YCCaPEb31EVZ+46EJEooDAcGM7cQtPgjGdn
MNspWDPmre1T0rDwizTKE1L4oz/kaHofDfkzB95WKYW1AqN7m/ppeGUJK88O
qvK+KDNMHaAxV+2um8kYBZ9DyZ4bB2mQqNiOqg8UGJmVp3pV/GPnjoDAaVWf
T16FSUM0/v8vJBm4tK0bpvEvBoOF5w==
           "]]},
         Annotation[#, "Charting`Private`Tag#3"]& ]}, {{{}, {GraphicsGroupBox[{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{3, 0}, {0.5, 0.17855555058693648`}], 
               Offset[{2.9999998408528468`, -0.0009771810963794451}, {
                0.5408333333333334, 0.17855555058693648`}], 
               Offset[{0, 0}, {0.5704356536037021, 0.17853525194936234`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {0.5704356536037021, 
                0.17853525194936234`}], 
               Offset[{10., 2.220446049250313*^-15}, {0.5704356536037021, 
                0.17853525194936234`}], 
               Offset[{10., 2.220446049250313*^-15}, {0.5704356536037021, 
                0.17853525194936234`}]}]}, 
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25], 
             BSplineCurveBox[{
              Offset[{3, 0}, {0.5, 0.17855555058693648`}], 
               Offset[{2.9999998408528468`, -0.0009771810963794451}, {
                0.5408333333333334, 0.17855555058693648`}], 
               Offset[{0, 0}, {0.5704356536037021, 0.17853525194936234`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {0.5704356536037021, 
                0.17853525194936234`}], 
               Offset[{10., 2.220446049250313*^-15}, {0.5704356536037021, 
                0.17853525194936234`}], 
               Offset[{10., 2.220446049250313*^-15}, {0.5704356536037021, 
                0.17853525194936234`}]}]}, 
            {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
             PolygonBox[{
              Offset[{79., 9.500000000000018}, {0.5704356536037021, 
                0.17853525194936234`}], 
               Offset[{79., -9.499999999999982}, {0.5704356536037021, 
                0.17853525194936234`}], 
               Offset[{10., -9.499999999999996}, {0.5704356536037021, 
                0.17853525194936234`}], 
               Offset[{10., 9.500000000000004}, {0.5704356536037021, 
                0.17853525194936234`}]}]}, 
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
             StyleBox[
              RotationBox[
               TagBox[
                RowBox[{"generateF3", "(", 
                 TagBox["\[Eta]",
                  HoldForm], ")"}],
                HoldForm],
               BoxRotation->0.],
              StripOnInput->False,
              LineOpacity->1,
              FrontFaceOpacity->1,
              BackFaceOpacity->1,
              Opacity->1,
              FontOpacity->1], 
             Offset[{44.5, 9.880984919163893*^-15}, \
{0.5704356536037021, 0.17853525194936234}], NCache[
             ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{3, 0}, {0.5, 0.7650893104599555}], 
               Offset[{2.5708570830463837`, 1.546186876981641}, {
                0.5408333333333334, 0.7650893104599555}], 
               Offset[{0, 0}, {0.5704356536037021, 0.8025690973445414}], 
               Offset[{5., 1.1102230246251565`*^-15}, {0.5704356536037021, 
                0.8025690973445414}], 
               Offset[{10., 2.220446049250313*^-15}, {0.5704356536037021, 
                0.8025690973445414}], 
               Offset[{10., 2.220446049250313*^-15}, {0.5704356536037021, 
                0.8025690973445414}]}]}, 
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25], 
             BSplineCurveBox[{
              Offset[{3, 0}, {0.5, 0.7650893104599555}], 
               Offset[{2.5708570830463837`, 1.546186876981641}, {
                0.5408333333333334, 0.7650893104599555}], 
               Offset[{0, 0}, {0.5704356536037021, 0.8025690973445414}], 
               Offset[{5., 1.1102230246251565`*^-15}, {0.5704356536037021, 
                0.8025690973445414}], 
               Offset[{10., 2.220446049250313*^-15}, {0.5704356536037021, 
                0.8025690973445414}], 
               Offset[{10., 2.220446049250313*^-15}, {0.5704356536037021, 
                0.8025690973445414}]}]}, 
            {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
             PolygonBox[{
              Offset[{66., 9.500000000000016}, {0.5704356536037021, 
                0.8025690973445414}], 
               Offset[{66., -9.499999999999984}, {0.5704356536037021, 
                0.8025690973445414}], 
               Offset[{10.000000000000004`, -9.499999999999998}, {
                0.5704356536037021, 0.8025690973445414}], 
               Offset[{9.999999999999996, 9.500000000000002}, {
                0.5704356536037021, 0.8025690973445414}]}]}, 
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
             StyleBox[
              RotationBox[
               TagBox[
                RowBox[{"jacobiF3", "(", 
                 TagBox["\[Eta]",
                  HoldForm], ")"}],
                HoldForm],
               BoxRotation->0.],
              StripOnInput->False,
              LineOpacity->1,
              FrontFaceOpacity->1,
              BackFaceOpacity->1,
              Opacity->1,
              FontOpacity->1], 
             Offset[{38., 8.43769498715119*^-15}, \
{0.5704356536037021, 0.8025690973445414}], NCache[
             ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{3, 0}, {0.5, 0.6224593264058604}], 
               Offset[{2.5710554700205925`, -1.5458569694758921`}, {
                0.5408333333333334, 0.6224593264058604}], 
               Offset[{0, 0}, {0.5704356536037021, 0.5849904279119871}], 
               Offset[{5., 1.1102230246251565`*^-15}, {0.5704356536037021, 
                0.5849904279119871}], 
               Offset[{10., 2.220446049250313*^-15}, {0.5704356536037021, 
                0.5849904279119871}], 
               Offset[{10., 2.220446049250313*^-15}, {0.5704356536037021, 
                0.5849904279119871}]}]}, 
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25], 
             BSplineCurveBox[{
              Offset[{3, 0}, {0.5, 0.6224593264058604}], 
               Offset[{2.5710554700205925`, -1.5458569694758921`}, {
                0.5408333333333334, 0.6224593264058604}], 
               Offset[{0, 0}, {0.5704356536037021, 0.5849904279119871}], 
               Offset[{5., 1.1102230246251565`*^-15}, {0.5704356536037021, 
                0.5849904279119871}], 
               Offset[{10., 2.220446049250313*^-15}, {0.5704356536037021, 
                0.5849904279119871}], 
               Offset[{10., 2.220446049250313*^-15}, {0.5704356536037021, 
                0.5849904279119871}]}]}, 
            {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
             PolygonBox[{
              Offset[{35., 9.500000000000009}, {0.5704356536037021, 
                0.5849904279119871}], 
               Offset[{35., -9.499999999999991}, {0.5704356536037021, 
                0.5849904279119871}], 
               Offset[{10.000000000000002`, -9.499999999999998}, {
                0.5704356536037021, 0.5849904279119871}], 
               Offset[{9.999999999999998, 9.500000000000002}, {
                0.5704356536037021, 0.5849904279119871}]}]}, 
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
             StyleBox[
              RotationBox[
               TagBox[
                TemplateBox[{
                  TagBox["\[Eta]", HoldForm]},
                 "LogisticSigmoid"],
                HoldForm],
               BoxRotation->0.],
              StripOnInput->False,
              LineOpacity->1,
              FrontFaceOpacity->1,
              BackFaceOpacity->1,
              Opacity->1,
              FontOpacity->1], 
             Offset[{22.5, 4.9960036108132044*^-15}, \
{0.5704356536037021, 0.5849904279119871}], NCache[
             ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{All, 97.88069608111063}, {All, All}},
      ImageSize->300,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-0.5, 0.5}, {-0.30081578349233185`, 1.0002512443815659`}},
      PlotRangeClipping->False,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.08090169943749476]}},
      Ticks->{Automatic, Automatic}], 
     TemplateBox[{
       GraphicsBox[
        InterpretationBox[{
          TagBox[{{{{}, {}, 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]], 
                LineBox[CompressedData["
1:eJwd13k4Vc8fB3A71724iyVtiJCthZLIvYQQlZL6EiJKQrZKKipliYRQWYuS
pUUqSTEfJVtZst4biRDZSWX3m/P76zyv5znnzMznzHnPjJzzqX2uPFxcXMXc
XFzE9WK/5eTSkhRk6+ZoGodzULz/kV2XkqXgR8nV/zuP2+8Bl7YUhKYY/t+H
NO2HKDWS4OVWuokwv+vOTdL2khDaVrmRcFRaaL39PwlIP668gTCD/dEjI1YC
eq7tUSf8g35epdxRAkoLtqoSLrDcMNCnLgF3Zi8oE74S3vdQcF4ctt0fUiC8
70PS0XU14vBZxUSWcJfZ0PZVz8TBVXjTKsKeDbrLaPHiwM/MkiY8axM1yXdO
HBatYiUIh3/r+DxtLw4Gh79TCdfJ8hf77hWH2VAjUcISLuqPhg3x+16cIxM+
/OhA/LHN4mAXfV6IcMbgxctdSuKgGWXCT/iXepaX7XJxUOlr5Sa8wafOrpki
DsmxyotG2CX/Vm+pmmBAktfiH8KL7TSNdX0MuNRdNUGYBXyK19kMCIu2GCF8
5cG/VUOfGPBm4eoA4fLwQQkLxABeX88ewn2zPbHzRQxYKfO+i7CA5zeRJwUM
0Ovj6iRsatXAL5rFgAnebWzCn6UL/9RHMeDnodBPhEcin/lcCmVAaIlUFWHR
xeyRDZcYMKp3o5zw3h/JfbF+2KvkSgj7WCc4GXoy4HDR9jeE4yqiv00eY0Bf
57ZXhJtzL7fst2XA9n+Njwn/WXneis+aAXcHT2YTlrzpX/vSkgFlHt2ZhA/5
Hf8oYcAAk1r7JMIdupav2pQYYCNw4RphWkHRPg8FBgj/87tC2ERZYZxLjgH5
vQ7BhJ+Lz6moLGeAz3fKOcKhI9n3LlAYIMv6cJLw26Pi+jQSA5zJlm6ExznB
7Q/5GZAjWuVC2LbCRrJ+kQ5z1TH2hNen80XJTdCBZ+ux3YRdJLzXFY7QQWDU
15xwUmR7hfkgHdI6vEwI8wUUcPv30GF4r6Y+YfbeI2crWujwlv1T7f/fj+ed
88liOqxqLxQg/DpAiYvrNR2oOfHchIdH41LjX9Choefw/A5sm/YT7JLHdMg2
zJsgrPpSajc1nQ7KDZvbCR9RCRl6kEyHZm37FsKJ90bDde7QYeN6j3rCXDc+
fnCOpUPvDuYHws2ufjqvQuhwZvJpDmFSR2er2SU6/KwTzCSsv8/cv/MCHfK4
jVMI5+jLPRM8Q4fGZ+7RhIOk6hVs3eiw7o2ND2GlahXqkgUdOtaabiSsdzfs
QaYZHT4FtCkT3neid6upCR1cXhvJ/v95UppTLBPf/7NQlHCrGe2F/CY63NYY
+mVIjF/aa2eVBh0cyXZdhHkGa9o9VOnwIfhBK2GN61f5ChXoMNNZ9p5waM2/
A6ZSuF6fJe4STkmyHhxm0CGoxiCacIH786BYKh3SQw1DCHcKn3z0lUSHiQzk
QXjLrs5pj3kadH9I2E6471N5cmw3DYaMxVsNiHxIltuwpZMGLXY6VYSpHkHl
X7/SQOC5UjFhPcrWEflmGkS0H04lHG+Rp19YQYOeDpoT4dyVQk22H2gQ//iE
FWEYdjm+hGjwdjLEgPBw1OoY0zc08NsxL0vYqDa2+2seDU70d3ewiPmYOno6
OJsGd3w0PxH29twlrPCQBq6dzDeEU0T4NT3TaDBsfS2e8JRlwNWlGBoYpT/c
STizzkFJ4QwNbqaZpDOxp028gnj8aEAy2HWdsAW62NJ1igb2hnynCf99lhKS
egL3d/dNM8JmsV+/S9rTgGE5PKqPPbbf5g7JiAbl5z+vI2z02XWsn0WDpOcJ
YoTvGJ02qdhOAwMX7j/bsQ03x09d0aYBt/HbUsIJko1751VoYLs5wZKwLseS
NEajwcTywoN62DFW9kdqRWnQtJykTbi32uN1Hhm3VzYgQTi6ONLVjZ8GypM7
G3Wxu5Ory7qnqaBqbmtMOMzBOLD5OxVevXZibCPyo9X6S0EHFVrTSwd1iPzd
46Icy6GC+u0bZYS/MkNaLZuocH1voCdhdbmyTZUVVJic/K90K3ZTj97QmydU
4N95xlCbqJf02/vWuVQwMS4jE67YrXNoLIsKTGVm8xbsojebPyrco4K0SpUz
4bSbGuk346iQ//3d6c3Y7rqy+13PUkFJLshbkxifdxqJy58Kt5wjVQnbZ62E
JG8q0JTu9m0i8pYmrd5wggraitk2hLf00wR1D1NBp19DbSM29y3et1QDKvjW
RN/XwA6suuyTt50Kodx95oSnFpaUTLZRYbhzYVId+6fbfPx5TSrE7jrGJPxZ
/4/Xz7VUcCAnVqkS32/w55p3wri9b053lLHpsq4cG0EqNOaUqhKOPNBzc4KX
CqJOcSVK2POX0IzlrBicDYjoUMSuVHv+RP67GPiMrRZci+1wNV6iPlsM/BmT
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
2brk3qUlMdaPQsWF2ToK638ba3rG
                 "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
              TagBox[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[2]], 
                LineBox[CompressedData["
1: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
Sr2qZBZeWPWAt3nw9pmIOWL0PSsRLzvikm3M5ib06fc1vIJGs6VaCi0yc433
NfHU0v45uMPyA/azdn3HGzUyFo/2dWGcnG3n/XFVvUV1eq/Mgtm7PvMyBir9
zcL7cd5ovR7eU/3nDjcKBrF/h1cfz8ozcoFm4zDm52R/4/UEhGdMMx/F/hfW
DvP2ZvjfN18ox8jqpVX/8dTkLXxN2uVlZuLt5Zjle9fFG19WlFm6wUCB0X9o
sN9htrLM3FVNikzMwXOxi5rHyMxfcleZSdW4ucl6ryrmd+1UYTzuq2Q7D6vJ
LFimr8b8IR5nb5StIbOovk2duf647szsn7Ww/mCsJiNSde+Z54DmdFzTZNpX
ki2mbmjuRqEms+h5s5XdJjTDy9Vkqjra/vU5QutVxJpM75jRzYl30NIYFS3G
xcXUTHe6Nq53LFiLCYi6nzLJEC1sD9Ni4p9aac9YgJauidJipJuYzoVL0Yxx
khZzZM9K4cr1NP9FkRaTevFXjYho2s94QIupkXQej7lC8+NGtJguvX0friZR
jyhqM5ZJh8szstGchnHaTH1OyLHKauqAxdpMX49ix5N62r/ZUpuZZH5u7bMm
NJ/HaDPbS6NMWt+jBZqrtJnz8ro3PnXS/MOe2kyuY7xqTw9d77W3NtN4fuLR
wUH6PLZ+2sz3+sS20VG6Xqa/NvN/AFF/5Q==
                 "]]}, Annotation[#, "Charting`Private`Tag#2"]& ]}}, {}}, {
           "WolframDynamicHighlight", <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
          DynamicBox[
           (Charting`HighlightActionBox["DynamicHighlight", {}, 
            Slot["HighlightElements"], 
            Slot["LayoutOptions"], 
            Slot["Meta"], 
            Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
                Annotation[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  Line[CompressedData["
1:eJwd13k4Vc8fB3A71724iyVtiJCthZLIvYQQlZL6EiJKQrZKKipliYRQWYuS
pUUqSTEfJVtZst4biRDZSWX3m/P76zyv5znnzMznzHnPjJzzqX2uPFxcXMXc
XFzE9WK/5eTSkhRk6+ZoGodzULz/kV2XkqXgR8nV/zuP2+8Bl7YUhKYY/t+H
NO2HKDWS4OVWuokwv+vOTdL2khDaVrmRcFRaaL39PwlIP668gTCD/dEjI1YC
eq7tUSf8g35epdxRAkoLtqoSLrDcMNCnLgF3Zi8oE74S3vdQcF4ctt0fUiC8
70PS0XU14vBZxUSWcJfZ0PZVz8TBVXjTKsKeDbrLaPHiwM/MkiY8axM1yXdO
HBatYiUIh3/r+DxtLw4Gh79TCdfJ8hf77hWH2VAjUcISLuqPhg3x+16cIxM+
/OhA/LHN4mAXfV6IcMbgxctdSuKgGWXCT/iXepaX7XJxUOlr5Sa8wafOrpki
DsmxyotG2CX/Vm+pmmBAktfiH8KL7TSNdX0MuNRdNUGYBXyK19kMCIu2GCF8
5cG/VUOfGPBm4eoA4fLwQQkLxABeX88ewn2zPbHzRQxYKfO+i7CA5zeRJwUM
0Ovj6iRsatXAL5rFgAnebWzCn6UL/9RHMeDnodBPhEcin/lcCmVAaIlUFWHR
xeyRDZcYMKp3o5zw3h/JfbF+2KvkSgj7WCc4GXoy4HDR9jeE4yqiv00eY0Bf
57ZXhJtzL7fst2XA9n+Njwn/WXneis+aAXcHT2YTlrzpX/vSkgFlHt2ZhA/5
Hf8oYcAAk1r7JMIdupav2pQYYCNw4RphWkHRPg8FBgj/87tC2ERZYZxLjgH5
vQ7BhJ+Lz6moLGeAz3fKOcKhI9n3LlAYIMv6cJLw26Pi+jQSA5zJlm6ExznB
7Q/5GZAjWuVC2LbCRrJ+kQ5z1TH2hNen80XJTdCBZ+ux3YRdJLzXFY7QQWDU
15xwUmR7hfkgHdI6vEwI8wUUcPv30GF4r6Y+YfbeI2crWujwlv1T7f/fj+ed
88liOqxqLxQg/DpAiYvrNR2oOfHchIdH41LjX9Choefw/A5sm/YT7JLHdMg2
zJsgrPpSajc1nQ7KDZvbCR9RCRl6kEyHZm37FsKJ90bDde7QYeN6j3rCXDc+
fnCOpUPvDuYHws2ufjqvQuhwZvJpDmFSR2er2SU6/KwTzCSsv8/cv/MCHfK4
jVMI5+jLPRM8Q4fGZ+7RhIOk6hVs3eiw7o2ND2GlahXqkgUdOtaabiSsdzfs
QaYZHT4FtCkT3neid6upCR1cXhvJ/v95UppTLBPf/7NQlHCrGe2F/CY63NYY
+mVIjF/aa2eVBh0cyXZdhHkGa9o9VOnwIfhBK2GN61f5ChXoMNNZ9p5waM2/
A6ZSuF6fJe4STkmyHhxm0CGoxiCacIH786BYKh3SQw1DCHcKn3z0lUSHiQzk
QXjLrs5pj3kadH9I2E6471N5cmw3DYaMxVsNiHxIltuwpZMGLXY6VYSpHkHl
X7/SQOC5UjFhPcrWEflmGkS0H04lHG+Rp19YQYOeDpoT4dyVQk22H2gQ//iE
FWEYdjm+hGjwdjLEgPBw1OoY0zc08NsxL0vYqDa2+2seDU70d3ewiPmYOno6
OJsGd3w0PxH29twlrPCQBq6dzDeEU0T4NT3TaDBsfS2e8JRlwNWlGBoYpT/c
STizzkFJ4QwNbqaZpDOxp028gnj8aEAy2HWdsAW62NJ1igb2hnynCf99lhKS
egL3d/dNM8JmsV+/S9rTgGE5PKqPPbbf5g7JiAbl5z+vI2z02XWsn0WDpOcJ
YoTvGJ02qdhOAwMX7j/bsQ03x09d0aYBt/HbUsIJko1751VoYLs5wZKwLseS
NEajwcTywoN62DFW9kdqRWnQtJykTbi32uN1Hhm3VzYgQTi6ONLVjZ8GypM7
G3Wxu5Ory7qnqaBqbmtMOMzBOLD5OxVevXZibCPyo9X6S0EHFVrTSwd1iPzd
46Icy6GC+u0bZYS/MkNaLZuocH1voCdhdbmyTZUVVJic/K90K3ZTj97QmydU
4N95xlCbqJf02/vWuVQwMS4jE67YrXNoLIsKTGVm8xbsojebPyrco4K0SpUz
4bSbGuk346iQ//3d6c3Y7rqy+13PUkFJLshbkxifdxqJy58Kt5wjVQnbZ62E
JG8q0JTu9m0i8pYmrd5wggraitk2hLf00wR1D1NBp19DbSM29y3et1QDKvjW
RN/XwA6suuyTt50Kodx95oSnFpaUTLZRYbhzYVId+6fbfPx5TSrE7jrGJPxZ
/4/Xz7VUcCAnVqkS32/w55p3wri9b053lLHpsq4cG0EqNOaUqhKOPNBzc4KX
CqJOcSVK2POX0IzlrBicDYjoUMSuVHv+RP67GPiMrRZci+1wNV6iPlsM/BmT
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
2brk3qUlMdaPQsWF2ToK638ba3rG
                   "]]}, "Charting`Private`Tag#1"], 
                Annotation[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[2]], 
                  Line[CompressedData["
1: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
Sr2qZBZeWPWAt3nw9pmIOWL0PSsRLzvikm3M5ib06fc1vIJGs6VaCi0yc433
NfHU0v45uMPyA/azdn3HGzUyFo/2dWGcnG3n/XFVvUV1eq/Mgtm7PvMyBir9
zcL7cd5ovR7eU/3nDjcKBrF/h1cfz8ozcoFm4zDm52R/4/UEhGdMMx/F/hfW
DvP2ZvjfN18ox8jqpVX/8dTkLXxN2uVlZuLt5Zjle9fFG19WlFm6wUCB0X9o
sN9htrLM3FVNikzMwXOxi5rHyMxfcleZSdW4ucl6ryrmd+1UYTzuq2Q7D6vJ
LFimr8b8IR5nb5StIbOovk2duf647szsn7Ww/mCsJiNSde+Z54DmdFzTZNpX
ki2mbmjuRqEms+h5s5XdJjTDy9Vkqjra/vU5QutVxJpM75jRzYl30NIYFS3G
xcXUTHe6Nq53LFiLCYi6nzLJEC1sD9Ni4p9aac9YgJauidJipJuYzoVL0Yxx
khZzZM9K4cr1NP9FkRaTevFXjYho2s94QIupkXQej7lC8+NGtJguvX0friZR
jyhqM5ZJh8szstGchnHaTH1OyLHKauqAxdpMX49ix5N62r/ZUpuZZH5u7bMm
NJ/HaDPbS6NMWt+jBZqrtJnz8ro3PnXS/MOe2kyuY7xqTw9d77W3NtN4fuLR
wUH6PLZ+2sz3+sS20VG6Xqa/NvN/AFF/5Q==
                   "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
              "LayoutOptions" -> <|
               "PlotRange" -> {{-6, 4}, {-0.3989422802450755, 
                  3.9280548095703125`}}, 
                "Frame" -> {{False, False}, {False, False}}, 
                "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio},
                 "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                GoldenRatio^(-1), "DefaultStyle" -> {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.880722, 0.611041, 0.142051], 
                   AbsoluteThickness[2]], 
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
             "LayoutOptions" -> <|
              "PlotRange" -> {{-6, 4}, {-0.3989422802450755, 
                 3.9280548095703125`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.880722, 0.611041, 0.142051], 
                  AbsoluteThickness[2]], 
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[2]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> Plot, "GroupHighlight" -> False|>|>]]}, 
         Annotation[{{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1:eJwd13k4Vc8fB3A71724iyVtiJCthZLIvYQQlZL6EiJKQrZKKipliYRQWYuS
pUUqSTEfJVtZst4biRDZSWX3m/P76zyv5znnzMznzHnPjJzzqX2uPFxcXMXc
XFzE9WK/5eTSkhRk6+ZoGodzULz/kV2XkqXgR8nV/zuP2+8Bl7YUhKYY/t+H
NO2HKDWS4OVWuokwv+vOTdL2khDaVrmRcFRaaL39PwlIP668gTCD/dEjI1YC
eq7tUSf8g35epdxRAkoLtqoSLrDcMNCnLgF3Zi8oE74S3vdQcF4ctt0fUiC8
70PS0XU14vBZxUSWcJfZ0PZVz8TBVXjTKsKeDbrLaPHiwM/MkiY8axM1yXdO
HBatYiUIh3/r+DxtLw4Gh79TCdfJ8hf77hWH2VAjUcISLuqPhg3x+16cIxM+
/OhA/LHN4mAXfV6IcMbgxctdSuKgGWXCT/iXepaX7XJxUOlr5Sa8wafOrpki
DsmxyotG2CX/Vm+pmmBAktfiH8KL7TSNdX0MuNRdNUGYBXyK19kMCIu2GCF8
5cG/VUOfGPBm4eoA4fLwQQkLxABeX88ewn2zPbHzRQxYKfO+i7CA5zeRJwUM
0Ovj6iRsatXAL5rFgAnebWzCn6UL/9RHMeDnodBPhEcin/lcCmVAaIlUFWHR
xeyRDZcYMKp3o5zw3h/JfbF+2KvkSgj7WCc4GXoy4HDR9jeE4yqiv00eY0Bf
57ZXhJtzL7fst2XA9n+Njwn/WXneis+aAXcHT2YTlrzpX/vSkgFlHt2ZhA/5
Hf8oYcAAk1r7JMIdupav2pQYYCNw4RphWkHRPg8FBgj/87tC2ERZYZxLjgH5
vQ7BhJ+Lz6moLGeAz3fKOcKhI9n3LlAYIMv6cJLw26Pi+jQSA5zJlm6ExznB
7Q/5GZAjWuVC2LbCRrJ+kQ5z1TH2hNen80XJTdCBZ+ux3YRdJLzXFY7QQWDU
15xwUmR7hfkgHdI6vEwI8wUUcPv30GF4r6Y+YfbeI2crWujwlv1T7f/fj+ed
88liOqxqLxQg/DpAiYvrNR2oOfHchIdH41LjX9Choefw/A5sm/YT7JLHdMg2
zJsgrPpSajc1nQ7KDZvbCR9RCRl6kEyHZm37FsKJ90bDde7QYeN6j3rCXDc+
fnCOpUPvDuYHws2ufjqvQuhwZvJpDmFSR2er2SU6/KwTzCSsv8/cv/MCHfK4
jVMI5+jLPRM8Q4fGZ+7RhIOk6hVs3eiw7o2ND2GlahXqkgUdOtaabiSsdzfs
QaYZHT4FtCkT3neid6upCR1cXhvJ/v95UppTLBPf/7NQlHCrGe2F/CY63NYY
+mVIjF/aa2eVBh0cyXZdhHkGa9o9VOnwIfhBK2GN61f5ChXoMNNZ9p5waM2/
A6ZSuF6fJe4STkmyHhxm0CGoxiCacIH786BYKh3SQw1DCHcKn3z0lUSHiQzk
QXjLrs5pj3kadH9I2E6471N5cmw3DYaMxVsNiHxIltuwpZMGLXY6VYSpHkHl
X7/SQOC5UjFhPcrWEflmGkS0H04lHG+Rp19YQYOeDpoT4dyVQk22H2gQ//iE
FWEYdjm+hGjwdjLEgPBw1OoY0zc08NsxL0vYqDa2+2seDU70d3ewiPmYOno6
OJsGd3w0PxH29twlrPCQBq6dzDeEU0T4NT3TaDBsfS2e8JRlwNWlGBoYpT/c
STizzkFJ4QwNbqaZpDOxp028gnj8aEAy2HWdsAW62NJ1igb2hnynCf99lhKS
egL3d/dNM8JmsV+/S9rTgGE5PKqPPbbf5g7JiAbl5z+vI2z02XWsn0WDpOcJ
YoTvGJ02qdhOAwMX7j/bsQ03x09d0aYBt/HbUsIJko1751VoYLs5wZKwLseS
NEajwcTywoN62DFW9kdqRWnQtJykTbi32uN1Hhm3VzYgQTi6ONLVjZ8GypM7
G3Wxu5Ory7qnqaBqbmtMOMzBOLD5OxVevXZibCPyo9X6S0EHFVrTSwd1iPzd
46Icy6GC+u0bZYS/MkNaLZuocH1voCdhdbmyTZUVVJic/K90K3ZTj97QmydU
4N95xlCbqJf02/vWuVQwMS4jE67YrXNoLIsKTGVm8xbsojebPyrco4K0SpUz
4bSbGuk346iQ//3d6c3Y7rqy+13PUkFJLshbkxifdxqJy58Kt5wjVQnbZ62E
JG8q0JTu9m0i8pYmrd5wggraitk2hLf00wR1D1NBp19DbSM29y3et1QDKvjW
RN/XwA6suuyTt50Kodx95oSnFpaUTLZRYbhzYVId+6fbfPx5TSrE7jrGJPxZ
/4/Xz7VUcCAnVqkS32/w55p3wri9b053lLHpsq4cG0EqNOaUqhKOPNBzc4KX
CqJOcSVK2POX0IzlrBicDYjoUMSuVHv+RP67GPiMrRZci+1wNV6iPlsM/BmT
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
2brk3qUlMdaPQsWF2ToK638ba3rG
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1: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
Sr2qZBZeWPWAt3nw9pmIOWL0PSsRLzvikm3M5ib06fc1vIJGs6VaCi0yc433
NfHU0v45uMPyA/azdn3HGzUyFo/2dWGcnG3n/XFVvUV1eq/Mgtm7PvMyBir9
zcL7cd5ovR7eU/3nDjcKBrF/h1cfz8ozcoFm4zDm52R/4/UEhGdMMx/F/hfW
DvP2ZvjfN18ox8jqpVX/8dTkLXxN2uVlZuLt5Zjle9fFG19WlFm6wUCB0X9o
sN9htrLM3FVNikzMwXOxi5rHyMxfcleZSdW4ucl6ryrmd+1UYTzuq2Q7D6vJ
LFimr8b8IR5nb5StIbOovk2duf647szsn7Ww/mCsJiNSde+Z54DmdFzTZNpX
ki2mbmjuRqEms+h5s5XdJjTDy9Vkqjra/vU5QutVxJpM75jRzYl30NIYFS3G
xcXUTHe6Nq53LFiLCYi6nzLJEC1sD9Ni4p9aac9YgJauidJipJuYzoVL0Yxx
khZzZM9K4cr1NP9FkRaTevFXjYho2s94QIupkXQej7lC8+NGtJguvX0friZR
jyhqM5ZJh8szstGchnHaTH1OyLHKauqAxdpMX49ix5N62r/ZUpuZZH5u7bMm
NJ/HaDPbS6NMWt+jBZqrtJnz8ro3PnXS/MOe2kyuY7xqTw9d77W3NtN4fuLR
wUH6PLZ+2sz3+sS20VG6Xqa/NvN/AFF/5Q==
                "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PlotRange" -> {{-6, 4}, {-0.3989422802450755, 
               3.9280548095703125`}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>, 
          "DynamicHighlight"]], {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-6, 4}, {-0.3989422802450755, 3.9280548095703125`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
           RowBox[{"transducer\[CurlyPhi]", "(", 
             TagBox["x", HoldForm], ")"}], 
           RowBox[{"swish", "(", 
             TagBox["x", HoldForm], ")"}]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.914879710030875*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"53e49852-d7d7-4a47-8d38-c970a242d8ae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Data: all of Shakespeare\[CloseCurlyQuote]s plays \
tokenized and presented as lines of text", "Subsection",
 FontFamily->"Roboto Condensed",
 FontSize->18,
 FontWeight->"Regular",
 FontColor->GrayLevel[0],
 Background->RGBColor[0.87, 0.94, 1]]], "Subsection",
 CellChangeTimes->{
  3.880315553326378*^9, {3.8803164458532667`*^9, 3.880316452028352*^9}, {
   3.913405054126177*^9, 3.91340506189361*^9}, {3.913933151930375*^9, 
   3.913933166120874*^9}},ExpressionUUID->"051b5aaf-582e-44b2-bf55-\
071a79fe48e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lines", "=", 
     RowBox[{"linesOfShakespeare", "=", 
      RowBox[{
      "Import", "[", 
       "\"\</Users/kinjeketileii/Library/Mobile \
Documents/com~apple~CloudDocs/2024/Ouroboros/ProcessedShakespeareLines.wl\>\"\
", "]"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lines", "=", 
     RowBox[{"linesOfShakespeare", "=", 
      RowBox[{
      "Import", "[", 
       "\"\</Users/kinjeketile/Library/Mobile \
Documents/com~apple~CloudDocs/2024/Ouroboros/ProcessedShakespeareLines.wl\>\"\
", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vocabulary", "=", 
     RowBox[{"Union", "[", 
      RowBox[{"Flatten", "[", "lines", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lexicon", "=", "vocabulary"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"StringForm", "[", 
    RowBox[{"\"\<Shakespeare wrote a staggering `` lines\>\"", ",", 
     RowBox[{"Length", "@", "lines"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"StringForm", "[", 
    RowBox[{"\"\<nanoGPT experiences these lines in the form: ``!\>\"", ",", 
     RowBox[{"RandomSample", "[", 
      RowBox[{"lines", ",", "1"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"StringForm", "[", 
    RowBox[{
    "\"\<Shakespeare's plays constitute a vocabulary of size ``\>\"", ",", 
     RowBox[{"Length", "@", "vocabulary"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"\"\<random sample of vocabulary\>\"", "->", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"vocabulary", ",", "9"}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.913838543948409*^9, 3.913838568447401*^9}, {
   3.9139301160847893`*^9, 3.913930116476286*^9}, {3.9139301649380007`*^9, 
   3.91393025449578*^9}, {3.913930312988398*^9, 3.913930401714902*^9}, 
   3.9139304502760983`*^9, {3.913931010546443*^9, 3.913931016402335*^9}, {
   3.913936850379586*^9, 3.913936857535561*^9}, {3.913941173357547*^9, 
   3.9139411752003527`*^9}, {3.913941207603839*^9, 3.9139412076052017`*^9}, {
   3.9140998960378323`*^9, 3.914099914009181*^9}, 3.914099947305579*^9, {
   3.916354937260501*^9, 3.9163549446664457`*^9}, {3.916354986476451*^9, 
   3.916355039129929*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"3e3f1f12-06de-481f-bbaf-1187fb24eaac"],

Cell[BoxData[
 InterpretationBox["\<\"Shakespeare wrote a staggering \
\\!\\(\\*RowBox[{\\\"108755\\\"}]\\) lines\"\>",
  StringForm["Shakespeare wrote a staggering `` lines", 108755],
  Editable->False]], "Output",
 CellChangeTimes->{3.914879711140336*^9, 3.916354910824491*^9, 
  3.91635504295007*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"f5b940ec-4852-4043-9bcc-9cbc58e1cc71"],

Cell[BoxData[
 InterpretationBox["\<\"nanoGPT experiences these lines in the form: \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Now\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\", \\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"by\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\" \\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"the\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\" \\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"jealous\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\" \
\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"queen\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\
\" \\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"of\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\
\" \\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"heaven\\\\\\\"\\\", \\\",\\\", \\\"\\\
\\\\\", \\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"that\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\" \\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"kiss\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"$End\\\\\\\"\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\)!\"\>",
  StringForm[
  "nanoGPT experiences these lines in the form: ``!", {{
    "Now", ", ", "by", " ", "the", " ", "jealous", " ", "queen", " ", "of", 
     " ", "heaven", ", ", "that", " ", "kiss", "$End"}}],
  Editable->False]], "Output",
 CellChangeTimes->{3.914879711140336*^9, 3.916354910824491*^9, 
  3.9163550429537582`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"8d9a4981-b415-4de7-b55f-914ffd7b9c6d"],

Cell[BoxData[
 InterpretationBox["\<\"Shakespeare's plays constitute a vocabulary of size \
\\!\\(\\*RowBox[{\\\"27713\\\"}]\\)\"\>",
  StringForm["Shakespeare's plays constitute a vocabulary of size ``", 27713],
  
  Editable->False]], "Output",
 CellChangeTimes->{3.914879711140336*^9, 3.916354910824491*^9, 
  3.916355042954484*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"f8a6c327-a797-4695-b5a7-0a7c8358d971"],

Cell[BoxData[
 RowBox[{"\<\"random sample of vocabulary\"\>", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{"\<\"murkiest\"\>", ",", "\<\"basin\"\>", ",", "\<\"pyramides\"\>",
     ",", "\<\"gravely\"\>", ",", "\<\"Jovial\"\>", ",", "\<\"vaunter\"\>", 
    ",", "\<\"misapplied\"\>", ",", "\<\"extinct\"\>", 
    ",", "\<\"languish\"\>"}], "}"}]}]], "Output",
 CellChangeTimes->{3.914879711140336*^9, 3.916354910824491*^9, 
  3.916355042954949*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"ae85e5e1-ef23-4ddf-996a-c4eb1cbc4088"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Embed Token Sequences", "Subsection",
 CellChangeTimes->{{3.885552698517742*^9, 3.885552708278954*^9}, {
  3.8855529604493093`*^9, 3.885552974615345*^9}, {3.887171993587573*^9, 
  3.887172006768005*^9}, {3.913930022502514*^9, 
  3.913930037526425*^9}},ExpressionUUID->"476f85c1-ff94-4c98-af4a-\
277ffb8dbb1d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"encodeLexicon", "[", 
    RowBox[{"embdims_", ",", " ", "lexicon_"}], "]"}], " ", ":=", "\n", 
   "\t\t", 
   RowBox[{
    RowBox[{"FunctionLayer", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"emb1", ",", " ", "emb2", ",", " ", "posembed"}], "}"}], 
         ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"emb1", " ", "=", " ", 
           RowBox[{
            RowBox[{"EmbeddingLayer", "[", "embdims", "]"}], "[", "#Input", 
            "]"}]}], ";", "\n", "\t\t\t\t", 
          RowBox[{"posembed", " ", "=", " ", 
           RowBox[{
            RowBox[{"SequenceIndicesLayer", "[", 
             RowBox[{"2", "^", "6"}], "]"}], "[", "#Input", "]"}]}], ";", 
          "\n", "\t\t\t\t", 
          RowBox[{"emb2", " ", "=", " ", 
           RowBox[{
            RowBox[{"EmbeddingLayer", "[", "embdims", "]"}], "[", "posembed", 
            "]"}]}], ";", "\n", "\t\t\t\t", 
          RowBox[{"emb1", " ", "+", " ", "emb2"}]}]}], "\n", "\t\t\t", "]"}], 
       "&"}], "\n", "\t\t\t", ",", "\n", "\t\t\t", 
      RowBox[{"\"\<Input\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Varying\>\"", ",", " ", 
         RowBox[{"NetEncoder", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Class\>\"", ",", " ", "lexicon"}], "}"}], "]"}]}], 
        "}"}]}]}], "\n", "\t\t", "]"}], "//", "NetInitialize"}]}], "\n", 
  "\t\t"}], "\n", 
 RowBox[{"encodeLexicon", "[", 
  RowBox[{"2", ",", " ", "vocabulary"}], "]"}]}], "Code",
 CellChangeTimes->{{3.887174586035138*^9, 3.887174606394631*^9}, {
  3.887174773806775*^9, 3.887174783188447*^9}, {3.8871892365880136`*^9, 
  3.887189245158806*^9}, {3.901506154758437*^9, 3.9015061573960037`*^9}, {
  3.913930086957061*^9, 3.9139300893623466`*^9}, {3.913931252420453*^9, 
  3.913931319288371*^9}, {3.9148756310461187`*^9, 3.914875653221067*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"5cc5b71f-17c7-495f-a105-eae7dda9c795"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["FunctionLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  
                  GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {
                    1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" classes\""}, "RowDefault"], "SummaryItem"], 
                    "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]2\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"], 
                    "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[
                  
                  GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {
                    1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`FormattingLayers`opart, 
                    NeuralNetworks`Private`FormattingLayers`part, 
                    NeuralNetworks`Private`FormattingLayers`selection = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    StyleBox["Parameters", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{False -> 
                    FrameBox["\"Function\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Function\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Function"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Function\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Function"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    StyleBox[
                    RowBox[{
                    TagBox["Function", HoldForm], "[", "\"\[Ellipsis]\"", 
                    "]"}], FontFamily -> "Source Code Pro", StripOnInput -> 
                    False], "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{False -> 
                    FrameBox["\"Net\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Net\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Net"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Net\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Net"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    "SummaryItem"], 
                    Annotation[#, {"Parameters", "Net"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{False -> 
                    FrameBox["\"Input\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" classes\""}, "RowDefault"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{False -> 
                    FrameBox["\"Output\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]2\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`FormattingLayers`part = 
                    MouseAnnotation[]], 
                    If[NeuralNetworks`Private`FormattingLayers`opart === 
                    NeuralNetworks`Private`FormattingLayers`part, 
                    NeuralNetworks`Private`FormattingLayers`selection = Null; 
                    NeuralNetworks`Private`FormattingLayers`opart = Null, 
                    NeuralNetworks`Private`FormattingLayers`selection = 
                    NeuralNetworks`Private`FormattingLayers`part; 
                    NeuralNetworks`Private`FormattingLayers`opart = 
                    NeuralNetworks`Private`FormattingLayers`part; Null]; 
                    Null], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterLayer[
                    
                    Lookup[<|{"Parameters", "Net"} -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1367860822]}, <|
                    "Form" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]], "Type" -> 
                    "Class", "Labels" -> {"\"!\"", "\"-\"", 
                    Skeleton[27710], "\"$End\""}, "OutputForm" -> "Index", 
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 
                    27713, "$Version" -> "13.3.0"|>]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1367860822], 2}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "emb1$" -> <|"Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{27713, 2}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {2}, "ClassCount" -> 27713, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1367860822]}, "$OutputDimension" -> 
                    2|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1367860822]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1367860822], 2}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed$" -> <|
                    "Type" -> "SequenceIndices", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Maximum" -> 64, "$Length" -> 
                    NeuralNetworks`LengthVar[1367860822]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1367860822]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1367860822]}, 
                    NeuralNetworks`IndexIntegerT[1, 64]]|>|>, 
                    "emb2$" -> <|"Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 2}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {2}, "ClassCount" -> 64, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1367860822]}, "$OutputDimension" -> 
                    2|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1367860822]}, 
                    NeuralNetworks`IndexIntegerT[1, 64]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1367860822], 2}, 
                    NeuralNetworks`RealT]|>|>, 
                    "output" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"emb1$" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1367860822], 2}, 
                    NeuralNetworks`RealT], "emb2$" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1367860822], 2}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1367860822], 2}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "emb1$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "emb1$"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "emb1$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "emb2$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "emb2$"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "emb2$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Outputs", "Output"]}|>, {
                    "Inputs", "Input"} -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1367860822]}, <|
                    "Form" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]], "Type" -> 
                    "Class", "Labels" -> {"\"!\"", "\"-\"", 
                    Skeleton[27710], "\"$End\""}, "OutputForm" -> "Index", 
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 
                    27713, "$Version" -> "13.3.0"|>]|>, 
                    Key[NeuralNetworks`Private`FormattingLayers`selection], 
                    Null], NeuralNetworks`Private`FormattingLayers`part, \
<||>, {}]}, GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`FormattingLayers`selection}], 
                    Initialization :> {NetChain}], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[FunctionLayer, 2632584, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", FunctionLayer, 2632584, 
            6104534209124383545585913424668049603531046979030663349336, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("FunctionLayer[<>]"& )],
  False,
  BoxID -> 6104534209124383545585913424668049603531046979030663349336,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9148797122071447`*^9, 3.9163550482887163`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"a4925cd7-43a1-405d-8c25-52e49e8663c4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[TextData[StyleBox["Atoms", "Subsection",
 FontFamily->"Roboto Condensed",
 FontSize->18,
 FontWeight->"Regular",
 FontColor->GrayLevel[0],
 Background->RGBColor[0.87, 0.94, 1]]], "Section",
 CellChangeTimes->{
  3.880316680800722*^9, {3.912963553762158*^9, 
   3.9129636193224163`*^9}},ExpressionUUID->"c3556ca7-2ccc-495c-873e-\
091a1ed3b5e7"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["EntryPoint", "Subsection",
 FontFamily->"Roboto Condensed",
 FontSize->18,
 FontWeight->"Regular",
 FontColor->GrayLevel[0],
 Background->RGBColor[0.87, 0.94, 1]]], "Section",
 CellChangeTimes->{{3.880422888152101*^9, 3.880422895199772*^9}, {
  3.912963582203689*^9, 
  3.912963627529092*^9}},ExpressionUUID->"75c102e7-924f-43d0-9965-\
3bedcc61cbcc"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Basic Constructors", "Subsection",
 FontFamily->"Roboto Condensed",
 FontSize->18,
 FontWeight->"Regular",
 FontColor->GrayLevel[0],
 Background->RGBColor[0.87, 0.94, 1]]], "Subsection",
 CellChangeTimes->{
  3.880315553326378*^9, {3.8803164458532667`*^9, 3.880316452028352*^9}, {
   3.895797646577053*^9, 3.895797676787966*^9}, {3.912965110552781*^9, 
   3.912965114266554*^9}},ExpressionUUID->"ce4e79d6-61fd-4115-aa0a-\
c50ad893a249"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "delaySequence", ",", "oPlus", ",", "oDot", ",", " ", "scaling8r", ",", 
    " ", "mlp", ",", " ", "linearNetMap"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"delaySequence", " ", "=", 
   RowBox[{"PaddingLayer", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"advanceSequence", "=", 
    RowBox[{"PaddingLayer", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mlp", "[", "dout_", "]"}], ":=", 
   RowBox[{"LinearLayer", "[", 
    RowBox[{"dout", ",", 
     RowBox[{"\"\<Biases\>\"", "\[Rule]", "None"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"linearNetMap", "[", "dout_", "]"}], ":=", 
   RowBox[{"NetMapOperator", "[", 
    RowBox[{"mlp", "[", "dout", "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oPlus", ":=", 
   RowBox[{
    RowBox[{"FunctionLayer", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Identity", "[", "#Input1", "]"}], " ", "+", 
         RowBox[{"Identity", "[", "#Input2", "]"}]}]}], " ", 
       "\[IndentingNewLine]", "]"}], "&"}], "\[IndentingNewLine]", "]"}], "//",
     "NetInitialize"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oDot", ":=", 
   RowBox[{
    RowBox[{"FunctionLayer", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Identity", "[", "#Input1", "]"}], "*", 
         RowBox[{"Identity", "[", "#Input2", "]"}]}]}], " ", 
       "\[IndentingNewLine]", "]"}], "&"}], "\[IndentingNewLine]", "]"}], "//",
     "NetInitialize"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"scaling8r", "[", 
    RowBox[{"dims_", ",", 
     RowBox[{"scale_", ":", "Automatic"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"FunctionLayer", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NormalizationLayer", "[", 
          RowBox[{"2", ",", "\"\<Same\>\"", ",", 
           RowBox[{"\"\<Input\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Varying\>\"", ",", "dims"}], "}"}]}], ",", 
           RowBox[{"\"\<Scaling\>\"", "\[Rule]", "scale"}]}], "]"}], "[", 
         "#Input", "]"}]}], "\[IndentingNewLine]", "]"}], "&"}], 
     "\[IndentingNewLine]", "]"}], "//", "NetInitialize"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"multBy", "[", 
    RowBox[{"scale_", ":", "1."}], "]"}], ":=", 
   RowBox[{"FunctionLayer", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"scale", "*", 
        RowBox[{"Identity", "[", "#Input", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}], "&"}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"display", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{"display", ",", " ", "\[IndentingNewLine]", 
   RowBox[{"Multicolumn", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<delay\>\"", "->", "delaySequence"}], ",", 
       RowBox[{"\"\<oPlus\>\"", "->", "oPlus"}], ",", 
       RowBox[{"\"\<oDot\>\"", "->", "oDot"}], ",", " ", 
       RowBox[{"\"\<scaling8r\>\"", "->", 
        RowBox[{"scaling8r", "[", "4", "]"}]}]}], "}"}], ",", "2"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.879618935727693*^9, 3.879618981400366*^9}, {
   3.879619024449106*^9, 3.879619041424078*^9}, {3.88056321347469*^9, 
   3.88056322265786*^9}, {3.895797639751009*^9, 3.895797640200391*^9}, {
   3.895798802317971*^9, 3.8957988038849373`*^9}, {3.895801752173064*^9, 
   3.895801754876182*^9}, {3.895802213766551*^9, 3.8958022322213984`*^9}, {
   3.895802317911187*^9, 3.895802319101841*^9}, 3.912963178960381*^9, {
   3.91296499626401*^9, 3.912965104526207*^9}, {3.912966778932416*^9, 
   3.912966779689768*^9}, {3.912967369796021*^9, 3.912967426811397*^9}, {
   3.91304901076565*^9, 3.9130491308404207`*^9}, {3.9130527886958923`*^9, 
   3.91305279621443*^9}, 3.913052907075077*^9, {3.913053048580566*^9, 
   3.913053057134102*^9}, {3.913053166019958*^9, 3.913053176116022*^9}, {
   3.9130532654373426`*^9, 3.913053311020707*^9}, {3.913053346588648*^9, 
   3.913053352770603*^9}, {3.9130535848109703`*^9, 3.9130536624252453`*^9}, {
   3.9130610321619377`*^9, 3.9130611294505377`*^9}, {3.913067052033359*^9, 
   3.913067076224152*^9}, {3.913070087952582*^9, 3.913070097826488*^9}, {
   3.9130722602663527`*^9, 3.913072408018564*^9}, {3.9130765072768507`*^9, 
   3.9130765212044487`*^9}, {3.913146075045768*^9, 3.913146075764082*^9}, {
   3.913658758951193*^9, 3.9136587647458153`*^9}, {3.9136588107095957`*^9, 
   3.913658826415223*^9}, {3.9136593471215343`*^9, 3.913659376665525*^9}, {
   3.913659660772827*^9, 3.9136596827893047`*^9}, {3.913659719247149*^9, 
   3.913659739075941*^9}, {3.913664994906592*^9, 3.913665153564947*^9}, {
   3.9136652793622227`*^9, 3.913665315776037*^9}, {3.9136653688339977`*^9, 
   3.9136654468055687`*^9}, {3.9136654854058657`*^9, 3.913665550222027*^9}, {
   3.913665614430571*^9, 3.913665690937232*^9}, {3.9136657728912287`*^9, 
   3.913665775628158*^9}, {3.9136661848427143`*^9, 3.913666318504464*^9}, {
   3.9136664338502493`*^9, 3.913666526694277*^9}, {3.9136665648563128`*^9, 
   3.913666715115348*^9}, {3.9136669892263203`*^9, 3.913667087250997*^9}, {
   3.9136706897007437`*^9, 3.913670707158122*^9}, {3.913670995224971*^9, 
   3.913670998376501*^9}, {3.913671107015263*^9, 3.9136711102005167`*^9}, {
   3.913671156872315*^9, 3.913671195955597*^9}, {3.913746687843157*^9, 
   3.913746690162697*^9}, {3.913747728841475*^9, 3.913747748525442*^9}, {
   3.91441038159062*^9, 3.914410419441736*^9}, {3.914808350139604*^9, 
   3.914808350469562*^9}, {3.914875677199304*^9, 3.9148757118842783`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"343fed41-e445-4232-ac49-5d4bbf61a2a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[" Elaborate constructors", "Subsection",
 FontFamily->"Roboto Condensed",
 FontSize->18,
 FontWeight->"Regular",
 FontColor->GrayLevel[0],
 Background->RGBColor[0.87, 0.94, 1]]], "Subsection",
 CellChangeTimes->{{3.880422395159197*^9, 3.880422416206553*^9}, {
  3.880422835471499*^9, 3.880422847208639*^9}, {3.88042306322057*^9, 
  3.8804230661490088`*^9}, {3.912965118495061*^9, 
  3.9129651377031193`*^9}},ExpressionUUID->"7281ebac-3ea5-42cb-916b-\
86f089935623"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "moserSequence", ",", "seqvelocity", ",", "seqVelocity", ",", 
    "step\[Omega]QKseq\[Zeta]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seqVelocity", ":=", 
   RowBox[{
    RowBox[{"FunctionLayer", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"delayseq", ",", "advanceseq"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"delayseq", "=", 
           RowBox[{"delaySequence", "[", 
            RowBox[{"Most", "[", "#Input", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"advanceseq", "=", 
           RowBox[{"advanceSequence", "[", 
            RowBox[{"Rest", "[", 
             RowBox[{"#Input", "-", "delayseq"}], "]"}], "]"}]}]}]}], 
        "\[IndentingNewLine]", "]"}], "&"}], "\[IndentingNewLine]", ",", 
      RowBox[{"\"\<Input\>\"", " ", "->", " ", "Automatic"}]}], 
     "\[IndentingNewLine]", "]"}], "//", "NetInitialize"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pseudoCosQK", "[", 
    RowBox[{"nstates_", ",", " ", "dcell_"}], "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"FunctionLayer", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vel", ",", " ", "xWQ", ",", "xWK", ",", "\[Omega]QK"}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"vel", "=", 
           RowBox[{"seqVelocity", "[", "#Input", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"xWQ", "=", 
           RowBox[{
            RowBox[{"linearNetMap", "[", "nstates", "]"}], "[", "vel", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"xWK", "=", 
           RowBox[{
            RowBox[{"linearNetMap", "[", "nstates", "]"}], "[", "vel", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Omega]QK", "=", 
           RowBox[{
            RowBox[{"scaling8r", "[", "nstates", "]"}], "[", 
            RowBox[{
             RowBox[{"linearNetMap", "[", "dcell", "]"}], "[", 
             RowBox[{"xWQ", "*", "xWQ"}], "]"}], "]"}]}]}]}], 
        "\[IndentingNewLine]", "]"}], "&"}], "\[IndentingNewLine]", ",", 
      RowBox[{"\"\<Input\>\"", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Varying\>\"", ",", "dcell"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}], "//", "NetInitialize"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"moserSequence", "[", "dims_", "]"}], " ", ":=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"FunctionLayer", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "pseudocos", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"pseudocos", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Tanh", "[", 
                RowBox[{
                 RowBox[{"linearNetMap", "[", "dims", "]"}], "[", "#Input", 
                 "]"}], "]"}]}], ")"}], "/", "2"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"scaling8r", "[", "dims", "]"}], "[", 
            RowBox[{"jacobiF3", "[", 
             RowBox[{"-", "pseudocos"}], "]"}], "]"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"scaling8r", "[", "dims", "]"}], "[", "#Input", "]"}]}], 
        "\[IndentingNewLine]", "]"}], "&"}], " ", ",", 
      RowBox[{"\"\<Input\>\"", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Varying\>\"", ",", "dims"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"steplnZ", "[", "dcell_", "]"}], " ", ":=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"FunctionLayer", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"#State", "+", 
          RowBox[{"Log", "[", 
           RowBox[{"1", "+", 
            RowBox[{"Exp", "[", 
             RowBox[{"#Input", "-", "#State"}], "]"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], "&"}], " ", ",", 
      RowBox[{"\"\<Input\>\"", " ", "->", " ", 
       RowBox[{"{", "dcell", "}"}]}], ",", " ", 
      RowBox[{"\"\<State\>\"", " ", "->", " ", 
       RowBox[{"{", "dcell", "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pressureKac", "[", "dcell_", "]"}], ":=", 
   RowBox[{"NetFoldOperator", "[", 
    RowBox[{"steplnZ", "[", "dcell", "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stepHJKB", "[", "dcell_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"FunctionLayer", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "\[CapitalGamma]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[CapitalGamma]", "=", 
           RowBox[{"Divide", "[", 
            RowBox[{"1", ",", " ", 
             RowBox[{"1", "+", 
              RowBox[{"Exp", "[", 
               RowBox[{"#\[Delta]\[Nu]", "-", "#lnZ"}], "]"}]}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[CapitalGamma]", "*", "#State"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[CapitalGamma]"}], ")"}], "*", 
            "#Input"}]}]}]}], "\[IndentingNewLine]", "]"}], "&"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"\"\<Input\>\"", " ", "->", " ", 
       RowBox[{"{", "dcell", "}"}]}], ",", 
      RowBox[{"\"\<State\>\"", " ", "->", " ", 
       RowBox[{"{", "dcell", "}"}]}], ",", 
      RowBox[{"\"\<\[Delta]\[Nu]\>\"", "->", 
       RowBox[{"{", "dcell", "}"}]}], ",", " ", 
      RowBox[{"\"\<lnZ\>\"", "->", 
       RowBox[{"{", "dcell", "}"}]}]}], "\[IndentingNewLine]", "]"}], "//", 
    "NetInitialize"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gener8HJKBseq", "[", "dcell_", "]"}], ":=", 
   RowBox[{"NetFoldOperator", "[", 
    RowBox[{"stepHJKB", "[", "dcell", "]"}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"propg8rHJKB", "[", 
    RowBox[{"nstates_", ",", " ", "dcell_"}], "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"FunctionLayer", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "xWQ", ",", "xWK", ",", "WQxWKx", ",", "\[Omega]QK", ",", " ", 
           "softmax\[Omega]QK"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"xWQ", "=", 
           RowBox[{
            RowBox[{"linearNetMap", "[", "nstates", "]"}], "[", "#Input", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"xWK", "=", 
           RowBox[{
            RowBox[{"linearNetMap", "[", "nstates", "]"}], "[", "#Input", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"WQxWKx", "=", 
           RowBox[{
            RowBox[{"scaling8r", "[", "nstates", "]"}], "[", 
            RowBox[{"xWQ", "*", "xWQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"\[Omega]QK", "=", " ", 
           RowBox[{
            RowBox[{"linearNetMap", "[", "dcell", "]"}], "[", "WQxWKx", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"softmax\[Omega]QK", "=", 
           RowBox[{
            RowBox[{"SoftmaxLayer", "[", "1", "]"}], "[", 
            RowBox[{"-", "\[Omega]QK"}], "]"}]}]}]}], "\[IndentingNewLine]", 
        "]"}], "&"}], "\[IndentingNewLine]", ",", 
      RowBox[{"\"\<Input\>\"", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Varying\>\"", ",", "dcell"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}], "//", "NetInitialize"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"step\[Omega]QKseq\[Zeta]", "[", "dcell_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"FunctionLayer", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"propg8seq", ",", "seqlen", ",", " ", "seq\[Zeta]"}], "}"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"seqlen", "=", 
           RowBox[{"Log", "[", 
            RowBox[{"Length", "[", "#Input", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"seq\[Zeta]", "=", 
           RowBox[{
            RowBox[{"mlp", "[", "dcell", "]"}], "[", "#Input", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"propg8seq", "=", 
           RowBox[{
            RowBox[{"#softmax\[Omega]QK", "*", "#State"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "#softmax\[Omega]QK"}], ")"}], "*", 
             "seq\[Zeta]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"seqlen", "*", "propg8seq"}]}]}], "\[IndentingNewLine]", 
        "]"}], "&"}], "\[IndentingNewLine]", ",", 
      RowBox[{"\"\<Input\>\"", " ", "->", " ", 
       RowBox[{"{", "dcell", "}"}]}], ",", 
      RowBox[{"\"\<State\>\"", " ", "->", " ", 
       RowBox[{"{", "dcell", "}"}]}], ",", 
      RowBox[{"\"\<softmax\[Omega]QK\>\"", "->", 
       RowBox[{"{", "dcell", "}"}]}]}], "\[IndentingNewLine]", "]"}], "//", 
    "NetInitialize"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dims", "=", 
   RowBox[{"embdims", "=", 
    RowBox[{"celldims", "=", 
     RowBox[{"2", "^", "7"}]}]}]}], ";", " ", 
  RowBox[{"nstates", "=", 
   RowBox[{"2", "^", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tokseq", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"lines", ",", " ", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{"\"\<tokenseq=``\>\"", ",", " ", "tokseq"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"embseq", "=", 
    RowBox[{
     RowBox[{"encodeLexicon", "[", 
      RowBox[{"embdims", ",", " ", "vocabulary"}], "]"}], "[", "tokseq", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seqlen", "=", 
   RowBox[{"Length", "@", "embseq"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cosseq", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "seqlen"}], "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", "embdims"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cosseq", "=", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "*", 
      RowBox[{"N", "[", "Pi", "]"}], "*", 
      RowBox[{"(", 
       RowBox[{"cosseq", "/", "seqlen"}], ")"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"opHJKB", "=", 
      RowBox[{"NetFoldOperator", "[", 
       RowBox[{"step\[Omega]QKseq\[Zeta]", "[", "dims", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"propg8r", " ", "=", " ", 
      RowBox[{
       RowBox[{"propg8rHJKB", "[", 
        RowBox[{"nstates", ",", "dims"}], "]"}], "[", "seq", "]"}]}], " ", 
     ";", "\[IndentingNewLine]", 
     RowBox[{"pathIntegral", "=", 
      RowBox[{
       RowBox[{"scaling8r", "[", 
        RowBox[{"dims", ",", "1."}], "]"}], "@", 
       RowBox[{"opHJKB", "[", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<Input\>\"", " ", "->", "seq"}], ",", 
          RowBox[{"\"\<softmax\[Omega]QK\>\"", " ", "->", "propg8r"}]}], 
         "|>"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pathIntegralII", "=", 
      RowBox[{
       RowBox[{"moserSequence", "[", "dims", "]"}], "[", 
       RowBox[{"opHJKB", "[", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<Input\>\"", " ", "->", "seq"}], ",", 
          RowBox[{"\"\<softmax\[Omega]QK\>\"", " ", "->", "propg8r"}]}], " ", 
         "|>"}], "]"}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Multicolumn", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"quickHist", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Flatten", "@", 
             RowBox[{"N", "@", "seq"}]}], "}"}], ",", 
           RowBox[{"{", "\"\<embed[tokenseq]\>\"", "}"}], ",", " ", "200"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"quickHist", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Flatten", "@", "pathIntegral"}], "}"}], ",", 
           RowBox[{"{", "\"\<layerNorm@\[Integral]HJKB[embed]\>\"", "}"}], 
           ",", "200"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"quickHist", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Flatten", "@", "pathIntegralII"}], "}"}], ",", 
           RowBox[{"{", "\"\<F3Norm@\[Integral]HJKB[embed]\>\"", "}"}], ",", 
           "200"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
       "\[IndentingNewLine]", ",", "1"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"seq", ",", 
      RowBox[{"{", "embseq", "}"}]}], "}"}]}], "]"}], "//", 
  "First"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8804198490523033`*^9, 3.880419942797864*^9}, {
   3.880420016046451*^9, 3.880420020897811*^9}, {3.8804224330229893`*^9, 
   3.880422468505802*^9}, {3.8804225049220037`*^9, 3.880422748031844*^9}, {
   3.8957970462620487`*^9, 3.895797062767269*^9}, {3.895797098296274*^9, 
   3.89579718577549*^9}, {3.895798845879324*^9, 3.895798895360196*^9}, {
   3.895799111061022*^9, 3.8957991304630423`*^9}, {3.895801765180859*^9, 
   3.8958017671325083`*^9}, {3.895802333247905*^9, 3.8958023349312*^9}, {
   3.895806885041662*^9, 3.895806975798203*^9}, {3.895969134820375*^9, 
   3.8959694121850758`*^9}, 3.912963183672724*^9, {3.9129651393490868`*^9, 
   3.912965146576408*^9}, {3.9129657663375673`*^9, 3.912965775762925*^9}, {
   3.9129658168692408`*^9, 3.912966010456458*^9}, {3.9129660610075274`*^9, 
   3.912966409790848*^9}, 3.912966464100544*^9, {3.9129666206067047`*^9, 
   3.9129666631638927`*^9}, {3.912966770912942*^9, 3.91296684219197*^9}, {
   3.913047678537044*^9, 3.913047694732909*^9}, {3.913052667308793*^9, 
   3.913052669492028*^9}, {3.913052703358739*^9, 3.913052703936858*^9}, {
   3.913066950523164*^9, 3.913066963566125*^9}, {3.913067219254141*^9, 
   3.913067293775652*^9}, {3.913067339197261*^9, 3.913067404799506*^9}, {
   3.9130674411375017`*^9, 3.913067485370179*^9}, {3.913067585998623*^9, 
   3.913067600629283*^9}, {3.913068456413818*^9, 3.913068492424841*^9}, {
   3.913068611216483*^9, 3.9130686448768797`*^9}, {3.913070115945279*^9, 
   3.913070116392991*^9}, {3.9130714922072906`*^9, 3.913071529200465*^9}, {
   3.9130724494342012`*^9, 3.913072496864688*^9}, {3.913072530603499*^9, 
   3.913072544584259*^9}, {3.913074440286406*^9, 3.913074471165166*^9}, {
   3.913074532030349*^9, 3.913074544653269*^9}, {3.913076182392432*^9, 
   3.913076186514982*^9}, {3.9130765951100817`*^9, 3.9130766739236794`*^9}, {
   3.913076711494471*^9, 3.913076742968883*^9}, {3.913146102274374*^9, 
   3.913146149159629*^9}, {3.913146259835909*^9, 3.913146271254224*^9}, {
   3.9131463159185247`*^9, 3.913146456352747*^9}, {3.913587469564267*^9, 
   3.913587482327022*^9}, {3.913587515273181*^9, 3.913587738488142*^9}, {
   3.913657327186537*^9, 3.913657715097384*^9}, {3.913657912034038*^9, 
   3.913658029563414*^9}, {3.9136582672953157`*^9, 3.913658326158194*^9}, {
   3.9136583627607317`*^9, 3.913658378706711*^9}, {3.913658416349752*^9, 
   3.913658506160507*^9}, 3.91365854583876*^9, 3.913658839502684*^9, {
   3.9136717917334003`*^9, 3.913671869836347*^9}, {3.91367528081422*^9, 
   3.913675319977607*^9}, {3.913675364882662*^9, 3.913675371130858*^9}, {
   3.913743301761917*^9, 3.913743345073496*^9}, {3.91374338059652*^9, 
   3.913743383696375*^9}, {3.91374342837926*^9, 3.913743430308867*^9}, {
   3.913744751017715*^9, 3.913744971968762*^9}, {3.9137450040639353`*^9, 
   3.913745037122254*^9}, {3.9137450876572027`*^9, 3.913745445817445*^9}, {
   3.913745476662932*^9, 3.913745657278462*^9}, {3.913745701518537*^9, 
   3.913745781367757*^9}, {3.913745823149472*^9, 3.913745826457262*^9}, {
   3.913746631570846*^9, 3.9137466435500097`*^9}, {3.9137500093410482`*^9, 
   3.913750020885159*^9}, {3.913766511948735*^9, 3.9137665207059793`*^9}, {
   3.913807340474394*^9, 3.9138075483905163`*^9}, {3.913807580578422*^9, 
   3.913807608315514*^9}, {3.913807654235189*^9, 3.9138077624997663`*^9}, {
   3.913807875342333*^9, 3.913807922792756*^9}, {3.913808043011218*^9, 
   3.913808096721505*^9}, {3.913933377460537*^9, 3.913933412469809*^9}, {
   3.91397831685011*^9, 3.913978419661001*^9}, {3.913978529247108*^9, 
   3.913978533461563*^9}, {3.913993893443822*^9, 3.913994032291663*^9}, {
   3.914325459882571*^9, 3.914325485172271*^9}, {3.9144102458981867`*^9, 
   3.9144102835644903`*^9}, {3.9144103379833107`*^9, 3.914410375732332*^9}, {
   3.914410410049432*^9, 3.914410411352942*^9}, {3.914410447689492*^9, 
   3.914410505595807*^9}, {3.9144105393295383`*^9, 3.914410543514963*^9}, {
   3.9144106312125883`*^9, 3.914410664384162*^9}, {3.9144318254833727`*^9, 
   3.9144318946420317`*^9}, {3.914431928259903*^9, 3.914431997273261*^9}, {
   3.914432070500523*^9, 3.914432241868148*^9}, {3.91443228415241*^9, 
   3.914432286526909*^9}, {3.914432421967951*^9, 3.9144324244196*^9}, {
   3.91443246718537*^9, 3.914432472094316*^9}, {3.914432512963786*^9, 
   3.914432514608657*^9}, {3.914432556639235*^9, 3.914432595297332*^9}, {
   3.9144328254640903`*^9, 3.914432842186583*^9}, {3.9144328740976562`*^9, 
   3.914432910206298*^9}, {3.914432942531578*^9, 3.914432952582322*^9}, {
   3.9144330181145067`*^9, 3.914433025885755*^9}, {3.914808251184586*^9, 
   3.914808251981143*^9}, {3.914808391594111*^9, 3.9148085329432364`*^9}, {
   3.9148086141675663`*^9, 3.914808652758654*^9}, {3.914808685077635*^9, 
   3.914808687107939*^9}, {3.914808718941625*^9, 3.9148088047763577`*^9}, {
   3.914808887777607*^9, 3.9148088880052223`*^9}, {3.914809024146289*^9, 
   3.9148092501836777`*^9}, {3.914809295786826*^9, 3.9148093585037613`*^9}, {
   3.914809455768518*^9, 3.914809493210574*^9}, {3.914809716072094*^9, 
   3.9148097751118937`*^9}, {3.914809963689151*^9, 3.914809963955228*^9}, {
   3.914810012210799*^9, 3.91481004030098*^9}, {3.914810093644354*^9, 
   3.914810147372179*^9}, {3.9148134617189302`*^9, 3.914813463343898*^9}, {
   3.914813509954773*^9, 3.9148135725899754`*^9}, {3.914814236765381*^9, 
   3.914814477422971*^9}, {3.914844042757264*^9, 3.914844048833322*^9}, {
   3.914844085171833*^9, 3.9148440877917433`*^9}, {3.9148441179455767`*^9, 
   3.914844154452648*^9}, {3.914844212723414*^9, 3.9148442130895452`*^9}, {
   3.9148442774722233`*^9, 3.91484427781745*^9}, {3.914844312468988*^9, 
   3.914844411316711*^9}, {3.914844472408902*^9, 3.914844511964923*^9}, {
   3.914860847058291*^9, 3.9148608483242292`*^9}, {3.914860882441502*^9, 
   3.914860888513267*^9}, {3.9148609193285627`*^9, 3.9148609217252398`*^9}, {
   3.914861098464552*^9, 3.91486111903528*^9}, {3.9148611751409483`*^9, 
   3.914861215171043*^9}, {3.914861323577096*^9, 3.914861334691401*^9}, {
   3.914861454747978*^9, 3.914861475818871*^9}, {3.91486153210841*^9, 
   3.91486153471103*^9}, {3.914864090985557*^9, 3.914864141798051*^9}, {
   3.914864185467362*^9, 3.914864189541959*^9}, 3.914864223649253*^9, {
   3.9148642573206673`*^9, 3.914864265553802*^9}, {3.91486613155197*^9, 
   3.914866207119936*^9}, {3.9148662939613943`*^9, 3.9148662970714493`*^9}, {
   3.914866329825487*^9, 3.9148664170188713`*^9}, {3.914866497566969*^9, 
   3.914866513488331*^9}, {3.914866562445734*^9, 3.914866564958346*^9}, {
   3.914866595452314*^9, 3.9148665977514467`*^9}, {3.914866689161004*^9, 
   3.9148666977947817`*^9}, {3.914867914151511*^9, 3.914867983949603*^9}, {
   3.914873302062393*^9, 3.914873369882135*^9}, {3.9148734057838573`*^9, 
   3.914873461813426*^9}, {3.914873784477415*^9, 3.9148737859914837`*^9}, {
   3.91487575994835*^9, 3.91487576148328*^9}, {3.9148758148156643`*^9, 
   3.914876035862163*^9}, {3.9148761403335457`*^9, 3.914876184036585*^9}, {
   3.9148762317596817`*^9, 3.914876313624732*^9}, {3.914876349769567*^9, 
   3.914876366880171*^9}, 3.9148764178449507`*^9, {3.914876459523322*^9, 
   3.914876483160948*^9}, {3.914876517538259*^9, 3.9148765263176613`*^9}, 
   3.914878793975957*^9, {3.914879176678671*^9, 3.9148791991811647`*^9}, {
   3.9148796352899218`*^9, 3.91487963666917*^9}, {3.914879733175606*^9, 
   3.914879757382957*^9}, {3.915234692604726*^9, 3.915234718097849*^9}, {
   3.9152347509838257`*^9, 3.9152349571466084`*^9}, {3.915235006808239*^9, 
   3.915235380062937*^9}, {3.915235417659758*^9, 3.9152354326443453`*^9}, {
   3.915235464979083*^9, 3.9152355307650967`*^9}, {3.915236025096703*^9, 
   3.915236175932493*^9}, {3.915236254425005*^9, 3.9152362725708103`*^9}, {
   3.9152363057891903`*^9, 3.9152363537764797`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"6570253d-2ec5-46d5-bd9c-878710b67e95"],

Cell[BoxData[
 InterpretationBox["\<\"tokenseq=\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"Cordelia\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\", \\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Cordelia\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"! \\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"stay\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\" \\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"a\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\" \\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"little\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\". \
\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Ha\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"!\
\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"$End\\\\\\\"\\\"}], \\\"}\\\"}], \\\"}\\\
\"}]\\)\"\>",
  StringForm[
  "tokenseq=``", {{
    "Cordelia", ", ", "Cordelia", "! ", "stay", " ", "a", " ", "little", ". ",
      "Ha", "!", "$End"}}],
  Editable->False]], "Output",
 CellChangeTimes->{3.914879712261273*^9, 3.9163550622237263`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"28eae4e3-d534-4044-930b-10f3c2b8e0de"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       TemplateBox[{
         GraphicsBox[{{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.567]]], 
             RGBColor[
             0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
                Directive[
                 Opacity[0.5], 
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.567]]], 
                  RGBColor[
                  0.987148, 0.8073604000000001, 0.49470040000000004`]], 
                 Directive[
                  RGBColor[
                  0.996078431372549, 0.3607843137254902, 
                   0.027450980392156862`]]], {{
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{-0.4, 0.}, {-0.35, 0.0030048076923076925`}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.0030048076923076925`]& , TagBoxNote -> 
                    "0.0030048076923076925"], 
                    StyleBox[
                    "0.0030048076923076925`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.0030048076923076925`, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{-0.35, 0.}, {-0.3, 0.0030048076923076925`}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.0030048076923076925`]& , TagBoxNote -> 
                    "0.0030048076923076925"], 
                    StyleBox[
                    "0.0030048076923076925`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.0030048076923076925`, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{-0.3, 0.}, {-0.25, 0.013221153846153846`}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.013221153846153846`]& , TagBoxNote -> 
                    "0.013221153846153846"], 
                    StyleBox[
                    "0.013221153846153846`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.013221153846153846`, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{-0.25, 0.}, {-0.2, 0.036057692307692304`}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.036057692307692304`]& , TagBoxNote -> 
                    "0.036057692307692304"], 
                    StyleBox[
                    "0.036057692307692304`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.036057692307692304`, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{-0.2, 0.}, {-0.15, 0.06009615384615385}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.06009615384615385]& , TagBoxNote -> 
                    "0.06009615384615385"], 
                    StyleBox[
                    "0.06009615384615385`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.06009615384615385, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{-0.15, 0.}, {-0.1, 0.09735576923076923}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.09735576923076923]& , TagBoxNote -> 
                    "0.09735576923076923"], 
                    StyleBox[
                    "0.09735576923076923`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.09735576923076923, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{-0.1, 0.}, {-0.05, 0.13641826923076922`}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.13641826923076922`]& , TagBoxNote -> 
                    "0.13641826923076922"], 
                    StyleBox[
                    "0.13641826923076922`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.13641826923076922`, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{-0.05, 0.}, {0., 0.15564903846153846`}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.15564903846153846`]& , TagBoxNote -> 
                    "0.15564903846153846"], 
                    StyleBox[
                    "0.15564903846153846`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.15564903846153846`, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0., 0.}, {0.05, 0.15564903846153846`}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.15564903846153846`]& , TagBoxNote -> 
                    "0.15564903846153846"], 
                    StyleBox[
                    "0.15564903846153846`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.15564903846153846`, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.05, 0.}, {0.1, 0.13341346153846154`}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.13341346153846154`]& , TagBoxNote -> 
                    "0.13341346153846154"], 
                    StyleBox[
                    "0.13341346153846154`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.13341346153846154`, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.1, 0.}, {0.15, 0.10036057692307693`}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.10036057692307693`]& , TagBoxNote -> 
                    "0.10036057692307693"], 
                    StyleBox[
                    "0.10036057692307693`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.10036057692307693`, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.15, 0.}, {0.2, 0.05348557692307692}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.05348557692307692]& , TagBoxNote -> 
                    "0.05348557692307692"], 
                    StyleBox[
                    "0.05348557692307692`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.05348557692307692, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.2, 0.}, {0.25, 0.027644230769230768`}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.027644230769230768`]& , TagBoxNote -> 
                    "0.027644230769230768"], 
                    StyleBox[
                    "0.027644230769230768`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.027644230769230768`, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.25, 0.}, {0.3, 0.014423076923076924`}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.014423076923076924`]& , TagBoxNote -> 
                    "0.014423076923076924"], 
                    StyleBox[
                    "0.014423076923076924`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.014423076923076924`, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.3, 0.}, {0.35, 0.0078125}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.0078125]& , TagBoxNote -> "0.0078125"], 
                    StyleBox["0.0078125`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.0078125, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.35, 0.}, {0.4, 0.001201923076923077}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.001201923076923077]& , TagBoxNote -> 
                    "0.001201923076923077"], 
                    StyleBox[
                    "0.001201923076923077`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.001201923076923077, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[
                    TagBox[{
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.4, 0.}, {0.45, 0.001201923076923077}, 
                    "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"]}, 
                    StatusArea[#, 0.001201923076923077]& , TagBoxNote -> 
                    "0.001201923076923077"], 
                    StyleBox[
                    "0.001201923076923077`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.001201923076923077, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
          AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {True, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {-0.41700000000000004`, 0.}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 200, 
           PlotRange -> {{-0.4, 0.45}, {All, All}}, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         FormBox[
          FormBox[
           TemplateBox[{
             StyleBox[
             "\"embed[tokenseq]\"", FontFamily -> "Courier", StripOnInput -> 
              False]}, "SwatchLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.567]]], 
                    RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`]|>, "RGBColorSwatchTemplate"]}], 
                    "]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.567`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "Automatic", "}"}], ",", 
                    RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ), 
        InterpretationFunction -> (RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
        True], 
       RotationBox["\"\"", BoxRotation -> 1.5707963267948966`], "\"\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {"", 
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 2}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]& )]},
    {
     TemplateBox[{
       TemplateBox[{
         GraphicsBox[{{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.45499999999999996`]]], 
             RGBColor[
             0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
                Directive[
                 Opacity[0.5], 
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.45499999999999996`]]], 
                  RGBColor[
                  0.987148, 0.8073604000000001, 0.49470040000000004`]], 
                 Directive[
                  RGBColor[
                  0.996078431372549, 0.3607843137254902, 
                   0.027450980392156862`]]], {{{
                   
                   RectangleBox[{-3.6, 0.}, {-3.4, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-2.6, 0.}, {-2.4, 0.001201923076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-2.4, 0.}, {-2.2, 0.0030048076923076925`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-2.2, 0.}, {-2., 0.0030048076923076925`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-2., 0.}, {-1.8, 0.005408653846153846}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-1.8, 0.}, {-1.6, 0.01622596153846154}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-1.6, 0.}, {-1.4, 0.021634615384615384`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-1.4, 0.}, {-1.2, 0.025841346153846152`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-1.2, 0.}, {-1., 0.04026442307692308}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-1., 0.}, {-0.8, 0.06490384615384616}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-0.8, 0.}, {-0.6, 0.06670673076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-0.6, 0.}, {-0.4, 0.07992788461538461}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-0.4, 0.}, {-0.2, 0.09975961538461539}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-0.2, 0.}, {0., 0.10096153846153846`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{0., 0.}, {0.2, 0.09014423076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{0.2, 0.}, {0.4, 0.08834134615384616}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{0.4, 0.}, {0.6, 0.08774038461538461}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{0.6, 0.}, {0.8, 0.05889423076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   RectangleBox[{0.8, 0.}, {1., 0.046875}, "RoundingRadius" -> 
                    0]}}, {{
                   
                   RectangleBox[{1., 0.}, {1.2, 0.03665865384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{1.2, 0.}, {1.4, 0.015625}, "RoundingRadius" -> 
                    0]}}, {{
                   
                   RectangleBox[{1.4, 0.}, {1.6, 0.013221153846153846`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{1.6, 0.}, {1.8, 0.008413461538461538}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{1.8, 0.}, {2., 0.0030048076923076925`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{2., 0.}, {2.2, 0.0018028846153846155`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{2.2, 0.}, {2.4, 0.003605769230769231}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{2.4, 0.}, {2.6, 0.001201923076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{2.6, 0.}, {2.8, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{3., 0.}, {3.2, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{3.6, 0.}, {3.8, 0.001201923076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{3.8, 0.}, {4., 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{4., 0.}, {4.2, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{4.2, 0.}, {4.4, 0.0018028846153846155`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{4.4, 0.}, {4.6, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{4.6, 0.}, {4.8, 0.0018028846153846155`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{4.8, 0.}, {5., 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{5., 0.}, {5.2, 0.001201923076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{5.4, 0.}, {5.6, 0.0018028846153846155`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{5.6, 0.}, {5.8, 0.001201923076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{6., 0.}, {6.2, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{6.2, 0.}, {6.4, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{6.4, 0.}, {6.6, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{6.6, 0.}, {6.8, 0.0006009615384615385}, 
                    "RoundingRadius" -> 
                    0]}}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
          AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {True, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {-3.732, 0.}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 200, PlotRange -> NCache[{{
               Rational[-18, 5], 3}, {All, All}}, {{-3.6, 3}, {All, All}}], 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         FormBox[
          FormBox[
           TemplateBox[{
             StyleBox[
             "\"layerNorm@\[Integral]HJKB[embed]\"", FontFamily -> "Courier", 
              StripOnInput -> False]}, "SwatchLegend", 
            DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.45499999999999996`]]], 
                    RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`]|>, "RGBColorSwatchTemplate"]}], 
                    "]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "Automatic", "}"}], ",", 
                    RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ), 
        InterpretationFunction -> (RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
        True], 
       RotationBox["\"\"", BoxRotation -> 1.5707963267948966`], "\"\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {"", 
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 2}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]& )]},
    {
     TemplateBox[{
       TemplateBox[{
         GraphicsBox[{{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.45499999999999996`]]], 
             RGBColor[
             0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
                Directive[
                 Opacity[0.5], 
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.45499999999999996`]]], 
                  RGBColor[
                  0.987148, 0.8073604000000001, 0.49470040000000004`]], 
                 Directive[
                  RGBColor[
                  0.996078431372549, 0.3607843137254902, 
                   0.027450980392156862`]]], {{{
                   
                   RectangleBox[{-3.6, 0.}, {-3.4, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-2.6, 0.}, {-2.4, 0.001201923076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-2.4, 0.}, {-2.2, 0.0030048076923076925`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-2.2, 0.}, {-2., 0.0030048076923076925`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-2., 0.}, {-1.8, 0.005408653846153846}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-1.8, 0.}, {-1.6, 0.01622596153846154}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-1.6, 0.}, {-1.4, 0.021634615384615384`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-1.4, 0.}, {-1.2, 0.025841346153846152`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-1.2, 0.}, {-1., 0.04026442307692308}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-1., 0.}, {-0.8, 0.06490384615384616}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-0.8, 0.}, {-0.6, 0.06670673076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-0.6, 0.}, {-0.4, 0.07992788461538461}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-0.4, 0.}, {-0.2, 0.09975961538461539}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{-0.2, 0.}, {0., 0.10096153846153846`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{0., 0.}, {0.2, 0.09014423076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{0.2, 0.}, {0.4, 0.08834134615384616}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{0.4, 0.}, {0.6, 0.08774038461538461}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{0.6, 0.}, {0.8, 0.05889423076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{0.8, 0.}, {1., 0.046875}, "RoundingRadius" -> 
                    0]}}, {{
                   
                   RectangleBox[{1., 0.}, {1.2, 0.03665865384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{1.2, 0.}, {1.4, 0.015625}, "RoundingRadius" -> 
                    0]}}, {{
                   
                   RectangleBox[{1.4, 0.}, {1.6, 0.013221153846153846`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{1.6, 0.}, {1.8, 0.008413461538461538}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{1.8, 0.}, {2., 0.0030048076923076925`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{2., 0.}, {2.2, 0.0018028846153846155`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{2.2, 0.}, {2.4, 0.003605769230769231}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{2.4, 0.}, {2.6, 0.001201923076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{2.6, 0.}, {2.8, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{3., 0.}, {3.2, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{3.6, 0.}, {3.8, 0.001201923076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{3.8, 0.}, {4., 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{4., 0.}, {4.2, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{4.2, 0.}, {4.4, 0.0018028846153846155`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{4.4, 0.}, {4.6, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{4.6, 0.}, {4.8, 0.0018028846153846155`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{4.8, 0.}, {5., 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{5., 0.}, {5.2, 0.001201923076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{5.4, 0.}, {5.6, 0.0018028846153846155`}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{5.6, 0.}, {5.8, 0.001201923076923077}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{6., 0.}, {6.2, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{6.2, 0.}, {6.4, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{6.4, 0.}, {6.6, 0.0006009615384615385}, 
                    "RoundingRadius" -> 0]}}, {{
                   
                   RectangleBox[{6.6, 0.}, {6.8, 0.0006009615384615385}, 
                    "RoundingRadius" -> 
                    0]}}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
          AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {True, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {-3.732, 0.}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 200, PlotRange -> NCache[{{
               Rational[-18, 5], 3}, {All, All}}, {{-3.6, 3}, {All, All}}], 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         FormBox[
          FormBox[
           TemplateBox[{
             StyleBox[
             "\"F3Norm@\[Integral]HJKB[embed]\"", FontFamily -> "Courier", 
              StripOnInput -> False]}, "SwatchLegend", 
            DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.45499999999999996`]]], 
                    RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[
                    0.996078431372549, 0.3607843137254902, 
                    0.027450980392156862`]|>, "RGBColorSwatchTemplate"]}], 
                    "]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.45499999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "Automatic", "}"}], ",", 
                    RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ), 
        InterpretationFunction -> (RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
        True], 
       RotationBox["\"\"", BoxRotation -> 1.5707963267948966`], "\"\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {"", 
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 2}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.914879712261273*^9, 3.916355063849393*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"02e098fd-3bb4-4607-a9e3-6695087a714a"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.914863354497555*^9, 
  3.914863362679847*^9}},ExpressionUUID->"892b07ff-6eea-45d2-b21e-\
e0aeef6e8e33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["HJKB Cell", "Subsection",
 FontFamily->"Roboto Condensed",
 FontSize->18,
 FontWeight->"Regular",
 FontColor->GrayLevel[0],
 Background->RGBColor[0.87, 0.94, 1]]], "Subsection",
 CellChangeTimes->{{3.8804230384022493`*^9, 3.880423057697451*^9}, {
  3.9129669947213783`*^9, 3.9129670125166483`*^9}, {3.912967098920965*^9, 
  3.91296710119341*^9}, {3.914876616468124*^9, 
  3.914876622780119*^9}},ExpressionUUID->"23f3c714-ae8f-4f3d-a1ae-\
aeabaf66d828"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"embseq", "=", 
     RowBox[{
      RowBox[{"encodeLexicon", "[", 
       RowBox[{"embdims", ",", " ", "vocabulary"}], "]"}], "[", 
      RowBox[{"RandomSample", "[", 
       RowBox[{"lines", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"incoming", "=", "embseq"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ref", " ", "=", " ", 
     RowBox[{
      RowBox[{"moserSequence", "[", "dcell", "]"}], "[", "incoming", "]"}]}], 
    ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"input", " ", "->", 
      RowBox[{"{", 
       RowBox[{"Nseq", ",", " ", "embdims"}], "}"}]}], ",", " ", 
     RowBox[{"output", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Nseq", ",", " ", "dcell"}], "}"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"softmax\[Omega]QK", "=", 
     RowBox[{
      RowBox[{"propg8rHJKB", "[", 
       RowBox[{"nstates", ",", "dcell"}], "]"}], "[", "ref", " ", "]"}]}], 
    ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "nstates", " ", "is", " ", "internal", " ", "to", " ", "propg8rHJKB", " ",
      "\[IndentingNewLine]", "and", " ", "softmax\[Omega]QK", " ", "always", 
     " ", "has", " ", "shape", " ", 
     RowBox[{"{", 
      RowBox[{"Nseq", ",", " ", "dcell"}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HJKB\[Florin]dt", "=", 
     RowBox[{
      RowBox[{"NetFoldOperator", "[", 
       RowBox[{"step\[Omega]QKseq\[Zeta]", "[", "dcell", "]"}], "]"}], "[", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Input\>\"", " ", "->", "ref"}], ",", 
        RowBox[{
        "\"\<softmax\[Omega]QK\>\"", " ", "->", "softmax\[Omega]QK"}]}], " ", 
       "|>"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moserSequence", "[", "dcell", "]"}], "[", 
     RowBox[{"ref", "+", "HJKB\[Florin]dt"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.914862861589656*^9, 3.914862909286235*^9}, {
  3.914862955193994*^9, 3.914862956158742*^9}, {3.914863019311081*^9, 
  3.9148630699121723`*^9}, {3.914863112974441*^9, 3.914863167056877*^9}, {
  3.9148632394245777`*^9, 3.914863545253479*^9}, {3.9148635820227327`*^9, 
  3.914863881518146*^9}, {3.914863914782918*^9, 3.914864002673698*^9}, {
  3.9148642907258263`*^9, 3.914864305639485*^9}, {3.914864361738048*^9, 
  3.914864365679611*^9}, {3.9148657514899817`*^9, 3.914865783512493*^9}, {
  3.914865819113626*^9, 3.914865821626556*^9}, {3.9148658549352837`*^9, 
  3.914865903684554*^9}, {3.9148678572489347`*^9, 3.914867866514073*^9}, {
  3.91487661178095*^9, 
  3.914876612292348*^9}},ExpressionUUID->"706edbfe-fe5c-4603-930a-\
a2c191ebcc5a"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"HJKBCell", ",", " ", "interposer", ",", " ", "interposerNorm"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"HJKBCell", "[", 
   RowBox[{"nstates_", ",", "dcell_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<ref\>\"", "->", 
        RowBox[{"linearNetMap", "[", "dcell", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<\[Zeta]\>\"", "->", " ", 
        RowBox[{
         RowBox[{"scaling8r", "[", "dcell", "]"}], "[", 
         RowBox[{"linearNetMap", "[", "dcell", "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<\[Delta]\[Nu]\>\"", "->", 
        RowBox[{"pseudoCosQK", "[", 
         RowBox[{"nstates", ",", "dcell"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<lnZ\>\"", " ", "->", " ", 
        RowBox[{"pressureKac", "[", "dcell", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<\[Integral]HJKB\>\"", "->", 
        RowBox[{"gener8HJKBseq", "[", "dcell", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<\[Sum]\>\"", "->", "oPlus"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"\"\<remastered\>\"", "->", 
        RowBox[{"scaling8r", "[", "dcell", "]"}]}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "->", 
        "\"\<\[Zeta]\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "->", 
        "\"\<\[Omega]QK\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "->", "\"\<lnZ\>\""}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<\[Delta]\[Nu]\>\"", "->", "\"\<\[Integral]HJKB\>\""}], 
       ",", 
       RowBox[{"\"\<lnZ\>\"", "->", "\"\<\[Integral]HJKB\>\""}], ",", 
       RowBox[{"\"\<\[Zeta]\>\"", "->", "\"\<\[Integral]HJKB\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<\[Integral]HJKB\>\"", "->", "\"\<\[Sum]\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<ref\>\"", "->", "\"\<\[Sum]\>\""}], ",", 
       RowBox[{"\"\<\[Sum]\>\"", "->", "\"\<remastered\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<remastered\>\"", "->", 
        RowBox[{"NetPort", "[", "\"\<Output\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Varying\>\"", ",", "Automatic"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], "//", "NetInitialize"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.915235594408375*^9, 3.915235866148183*^9}, {
  3.915235897955306*^9, 3.9152359812507763`*^9}, {3.915236386724587*^9, 
  3.9152365337305107`*^9}, {3.915236571504847*^9, 3.9152368756343613`*^9}, {
  3.91523691288678*^9, 3.915236922833049*^9}, {3.915236956822483*^9, 
  3.915236987080626*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"fa40c500-1355-4243-b538-f6382fcce81e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"HJKBCell", ",", " ", "interposer", ",", " ", "interposerNorm"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HJKBCell", "[", 
    RowBox[{"nstates_", ",", "dims_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<ref\>\"", "->", 
         RowBox[{"moserSequence", "[", "dims", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<softmax\[Omega]QK\>\"", "->", 
         RowBox[{"propg8rHJKB", "[", 
          RowBox[{"nstates", ",", "dims"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<\[Integral]dt\>\"", "->", 
         RowBox[{"NetFoldOperator", "[", 
          RowBox[{"step\[Omega]QKseq\[Zeta]", "[", "dims", "]"}], "]"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<\[Sum]\>\"", "->", "oPlus"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<remastered\>\"", "->", 
         RowBox[{"moserSequence", "[", "dims", "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "->", 
         "\"\<ref\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<ref\>\"", "->", "\"\<softmax\[Omega]QK\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ref\>\"", "->", "\"\<\[Integral]dt\>\""}], ",", 
        RowBox[{"\"\<softmax\[Omega]QK\>\"", "->", "\"\<\[Integral]dt\>\""}], 
        ",", 
        RowBox[{"\"\<\[Integral]dt\>\"", "->", "\"\<\[Sum]\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ref\>\"", "->", "\"\<\[Sum]\>\""}], ",", 
        RowBox[{"\"\<\[Sum]\>\"", "->", "\"\<remastered\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<remastered\>\"", "->", 
         RowBox[{"NetPort", "[", "\"\<Output\>\"", "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Input\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Varying\>\"", ",", "Automatic"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}], "//", "NetInitialize"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interposerNorm", "[", "dims_", "]"}], " ", ":=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"FunctionLayer", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"scaling8r", "[", "dims", "]"}], "[", 
           RowBox[{"jacobiF3", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Tanh", "[", "#Input", "]"}]}], ")"}]}], "/", "2"}], 
            "]"}], "]"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"scaling8r", "[", "dims", "]"}], "[", "#Input", "]"}]}], 
        "\[IndentingNewLine]", "]"}], "&"}], " ", ",", 
      RowBox[{"\"\<Input\>\"", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Varying\>\"", ",", "dims"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interposer", "[", "dims_", "]"}], " ", ":=", " ", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetGraph", "@", 
     RowBox[{"FunctionLayer", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "seq", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"seq", " ", "=", " ", 
            RowBox[{
             RowBox[{"LinearLayer", "[", 
              RowBox[{"4", " ", "dims"}], "]"}], " ", "/@", " ", "#Input"}]}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"seq", " ", "=", " ", 
            RowBox[{
             RowBox[{"ElementwiseLayer", "[", "\"\<GELU\>\"", "]"}], "[", 
             "seq", "]"}]}], ";", 
           RowBox[{"seq", " ", "=", " ", 
            RowBox[{
             RowBox[{"LinearLayer", "[", "dims", "]"}], " ", "/@", " ", 
             "seq"}]}], ";", 
           RowBox[{
            RowBox[{"interposerNorm", "[", "dims", "]"}], "[", 
            RowBox[{"seq", " ", "+", " ", "#Input"}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "&"}], ",", 
       RowBox[{"\"\<Input\>\"", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<Varying\>\"", ",", " ", "dims"}], "}"}]}]}], 
      "]"}]}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"HJKBCell", "[", 
  RowBox[{
   RowBox[{"2", "^", "4"}], ",", 
   RowBox[{"2", "^", "7"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"interposerNorm", "[", 
  RowBox[{"2", "^", "7"}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.880422994900153*^9, 3.880422996336916*^9}, {
   3.89579901222841*^9, 3.895799100193227*^9}, {3.895799173593308*^9, 
   3.8957992102067213`*^9}, {3.895802116845333*^9, 3.895802131771364*^9}, {
   3.895807023028532*^9, 3.895807254421837*^9}, {3.895807335520422*^9, 
   3.895807348426384*^9}, 3.895807433652195*^9, {3.895807578930141*^9, 
   3.8958075848027573`*^9}, {3.8958076212482147`*^9, 3.895807624026985*^9}, 
   3.8958077257348347`*^9, {3.895808590860759*^9, 3.895808595425416*^9}, {
   3.895808719770797*^9, 3.895808720194023*^9}, {3.895808756413534*^9, 
   3.895808756678132*^9}, {3.8958365793079042`*^9, 3.895836580740123*^9}, {
   3.895836863924315*^9, 3.8958368645978394`*^9}, {3.895969059839563*^9, 
   3.895969075809115*^9}, 3.912963190462429*^9, {3.912967124193631*^9, 
   3.9129671848491592`*^9}, {3.9129672858953342`*^9, 
   3.9129673135333843`*^9}, {3.912967468680092*^9, 3.912967493707572*^9}, {
   3.9129675742298203`*^9, 3.912967580490942*^9}, {3.912967641224105*^9, 
   3.9129676538006363`*^9}, {3.912967754870767*^9, 3.91296804922727*^9}, {
   3.912969652129891*^9, 3.9129696525461807`*^9}, {3.9129696910242577`*^9, 
   3.912969793037141*^9}, {3.9129698303650627`*^9, 3.9129698309274263`*^9}, 
   3.91296986290314*^9, {3.91296991713212*^9, 3.912969930808714*^9}, 
   3.9130477643763123`*^9, {3.9130478674560127`*^9, 3.9130479182803*^9}, 
   3.913072211023471*^9, 3.913072567490447*^9, {3.913072721424581*^9, 
   3.913072764718954*^9}, {3.913656170296183*^9, 3.913656227984644*^9}, {
   3.913656287578805*^9, 3.9136562915028677`*^9}, {3.913656331596775*^9, 
   3.913656340860038*^9}, {3.913656372746991*^9, 3.913656408326091*^9}, {
   3.913656443475315*^9, 3.913656452145639*^9}, {3.913656484346129*^9, 
   3.913656541421534*^9}, {3.9136568934138937`*^9, 3.913656895688374*^9}, {
   3.913658232802928*^9, 3.91365823309487*^9}, {3.913658589781495*^9, 
   3.913658627774886*^9}, {3.913658711622603*^9, 3.913658712371603*^9}, {
   3.9136598385155077`*^9, 3.913659859351635*^9}, {3.913661576649823*^9, 
   3.9136615859481277`*^9}, {3.913662667760812*^9, 3.913662668382539*^9}, {
   3.913663567517344*^9, 3.913663568306563*^9}, {3.913663624144877*^9, 
   3.913663672208763*^9}, {3.913664089917535*^9, 3.913664133293271*^9}, {
   3.913666783825015*^9, 3.913666856251664*^9}, {3.913667117367285*^9, 
   3.9136671241081867`*^9}, {3.913667176421865*^9, 3.9136671978684797`*^9}, {
   3.9136672628084803`*^9, 3.913667352585925*^9}, {3.913667394777495*^9, 
   3.913667422506021*^9}, {3.913667477217733*^9, 3.913667504034124*^9}, 
   3.9136705814642143`*^9, {3.913670617726673*^9, 3.9136706315739594`*^9}, {
   3.913670806009508*^9, 3.913670824812316*^9}, {3.913670864801857*^9, 
   3.913670893317812*^9}, {3.913672642678824*^9, 3.913672650358897*^9}, {
   3.913672775445321*^9, 3.913672795843708*^9}, {3.9137466005747547`*^9, 
   3.913746603560533*^9}, {3.913746719975946*^9, 3.913746721952737*^9}, {
   3.913747272629697*^9, 3.913747287655834*^9}, {3.913747372954446*^9, 
   3.913747399140389*^9}, {3.913747534869308*^9, 3.9137475875253572`*^9}, {
   3.9137477663036547`*^9, 3.913747810330139*^9}, {3.913747886149952*^9, 
   3.913747956855571*^9}, {3.913808366976666*^9, 3.9138083779672947`*^9}, {
   3.913808534328294*^9, 3.913808537463674*^9}, {3.913809199765723*^9, 
   3.913809231844452*^9}, {3.913809270825861*^9, 3.9138092935514803`*^9}, {
   3.913809421418095*^9, 3.913809561754129*^9}, {3.913809686987699*^9, 
   3.9138097185251303`*^9}, {3.913809749028757*^9, 3.91380976653065*^9}, {
   3.9138097990312233`*^9, 3.913809822941391*^9}, {3.913809856088168*^9, 
   3.913810044690761*^9}, {3.913810131334979*^9, 3.9138101320295057`*^9}, {
   3.9138101717846813`*^9, 3.913810172106599*^9}, {3.913810255238524*^9, 
   3.91381031299886*^9}, {3.913822030414462*^9, 3.91382204577989*^9}, {
   3.913822130371595*^9, 3.913822313452525*^9}, {3.913822362515854*^9, 
   3.913822397638268*^9}, {3.913825148268557*^9, 3.913825174017087*^9}, {
   3.913825221509829*^9, 3.913825258413004*^9}, {3.9138252977489634`*^9, 
   3.9138253459948072`*^9}, {3.913825481282557*^9, 3.91382549801784*^9}, {
   3.9138255378847723`*^9, 3.913825581138015*^9}, {3.913825620839095*^9, 
   3.913825645262259*^9}, {3.9138256856675034`*^9, 3.9138256906493263`*^9}, {
   3.913825892137909*^9, 3.91382592445479*^9}, {3.913933438933977*^9, 
   3.913933449324278*^9}, {3.913935063434321*^9, 3.913935084859508*^9}, 
   3.913978594754113*^9, {3.914410987132649*^9, 3.914411013922861*^9}, {
   3.914411052743018*^9, 3.914411145676148*^9}, {3.9144112200804443`*^9, 
   3.9144112298700037`*^9}, {3.91441180186613*^9, 3.914411820943282*^9}, {
   3.914844666659642*^9, 3.914844747810144*^9}, {3.914868062619645*^9, 
   3.914868184001315*^9}, {3.9148682178326674`*^9, 3.914868247680546*^9}, {
   3.914868286868575*^9, 3.914868338762601*^9}, {3.9148683917669697`*^9, 
   3.914868431855082*^9}, {3.9148685011542683`*^9, 3.9148686492491827`*^9}, {
   3.91486869627707*^9, 3.914868717482039*^9}, {3.9148687534363213`*^9, 
   3.914868768160397*^9}, {3.914868807424856*^9, 3.9148688719000874`*^9}, {
   3.914869017432436*^9, 3.9148691174360323`*^9}, {3.914869164292396*^9, 
   3.9148691687170877`*^9}, 3.9148692057708597`*^9, {3.9148692935521803`*^9, 
   3.914869304222381*^9}, {3.914869644820875*^9, 3.914869645759726*^9}, {
   3.914873142818713*^9, 3.914873177303937*^9}, {3.914873495262876*^9, 
   3.914873766681302*^9}, {3.9148766795636*^9, 3.914876762374803*^9}, {
   3.914877411274063*^9, 3.914877444012424*^9}, {3.9148774806233473`*^9, 
   3.914877526656773*^9}, {3.914877575664732*^9, 3.91487760656288*^9}, {
   3.9148793194409246`*^9, 3.914879356070352*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"4725f2f3-49da-4d5a-a481-1632baa45cf8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TagBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], Short], "SummaryItem"], 
                "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TagBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], Short], "SummaryItem"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetGraph`selection = None}, 
                 GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"ref\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{0, -15.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"softmax\[Omega]QK\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-31, 
                    2]}, {-4.000000026794896, -0.9999998928204116}], 
                    
                    Offset[{
                    0, -15.5}, {-4.000000026794896, -0.9999998928204116}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Integral]dt\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{0, -15.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Sum]\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -15.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"remastered\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -15.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.473719336601482*^-7, 
                    5.499999999999999}, {-5.4499999999999975`, 
                    1.4603218880869225`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117856`*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087400733705, 
                    3.8890871923183155`}, {-4.450000014737192, \
-0.5499998807627081}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396937, -0.7071068001334009}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014847`*^-7, 
                    5.499999999999999}, {-3.9111111111111097`, 
                    1.047978194916609*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.6794897029117902`*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.47371943398644*^-7, 
                    5.499999999999999}, {-3.3555555287606573`, 
                    1.0000000899117651`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.6794898799753454`*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193393399298`*^-7, 
                    5.499999999999999}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.6794897078907816`*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-3.4500000120577026`, \
-0.44999990755760505`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337044`}, {-2.4499999852628056`, 
                    0.5500000656474976}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334008,
                     0.7071067622396939}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193332337029`*^-7, 
                    5.499999999999999}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885506`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-4.999999999999998, 
                    1.339744851455892*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999999999998, 
                    1.339744851455892*^-7}, {-4.000000026794896, \
-0.9999998928204116}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQ/e8/CAgfqK3dwBHyu9FuRfqbR1/PCx/4G8/wRelC
o134Eh6bu7OED9zzEf2RuqDRjntbAhAJH5B1eS8im9Nod3DOi4AGReEDO137
vDyMG+1qIkAahA5sCfw04/nXBjubl5PtXk4WOsCbIc3we3ODHZP/9mftrkIH
jnRwNjTlNtid7uRjlfgkeOD25j0SdUoNdjNmgoDggfmXMqfcXlpv9xyk3U7w
wDN3eQF9pno7i77HQCRwQG/vle6muDq79g4QEDhQbtTFfm1Xrd31Jt0bTboC
B/Ytt2/WFK+18/m1xP/XEv4DbLJf/9UU19i9eQcCfAf8Jq2qunC+2q4HZJwF
34Fp7AnflHWq7bRvgAzgPXC/RrSovKPK7tQZEOA5oPbp1NtTTyrtUkHBI81z
gD92d8Aq10q7b4kTjT6UcB+w2azYtHB9hV0jyPobXAfWfPnbuEGpAupfrgPx
igEB1+eV21Uc04v7v4fzQIilxFtRlXK7F2D/cR7otQmLyNlUZucHUn6K4wCn
NtekW55ldqsM1K1EEjgOnGAxmZXwqtQOEl/sB06dvFzwb3KpHQBNjeEC
                    "]], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQ/e8/CAgfqK3dwBHyu9HuqV/9zqpzwgc4Jr5asfzQ
CvscncZpH6YIH2D4zdd+5/Au+6kzWKcnBgsfcDkzW/vc5KP2MZN5dp/lFD4w
cUL5Is9j5+yPyExjMt0hdMAolTdkQ80V+zMmi3KnxwkduLfHaV6n2C374tsG
f778ETyw4vnb8AiJB/a7BZzW+U4WPODol3NkUupj+8VXrjYvVBQ8YDtpjsiX
T8/sm9cqTzp5X+CABTdrkP3NF/a3BI/7/p4lcGBuJ29HSNsr+5WMB7aZBQsc
yOXdts3412v71zV8Z6s5BA4smvbv7h2Tt/Z+7KmKU0v5DzipPv/rb/bOfp12
BLPbFb4D3jvzxXr/vbP/m/bNnkuX78CeoBnqU3rf21vutL/+sJ73wLSPCYap
j9/bn+iYpW9szH3gcFuJBAPDB/v02ifn1Gu5DtjduiAO4nMU6eXJHOc8sEtX
F8xfkVbBKyjIecCssVMMxHeLPrSGNZrjwMYrT0VB/Gf+PD6/lrAf0NVwAvPb
XMJev3vHdmBl9TwREF/VckHXYwu2A6rnfwmD+Ed1X2neaGI9sEApHMxPUTI5
eeYMywGZss1CIP4/R69P56VZDtSHioD5E7f/0PtQwnxgo0+dIIgv1Wxfr3uD
6cDG6I8CIP6sJXKP212ZDtQ35YL5gjLTov7vYTwgc/ATP4jf8HLp08l2jAfa
xRvB/Gc8fi2upxgOHGiVAPOd2vrMRBIYDpzg3skH4uuuPvcDmID2z1+ZBOYD
APMdEBY=
                    "]], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.000000026794896, -0.9999998928204116}, \
{-2.999999999999999, 8.038469108735353*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"softmax\[Omega]QK\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "softmax\[Omega]QK"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.4499999999999975`, 
                    1.4603218880869225`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117862`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.450000014737192, -0.5499998807627081}, \
{-0.25, 0}, 
                    Offset[8], {0.9999999732051021, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.9111111111111097`, 
                    1.047978194916609*^-7}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888857, -2.381768624810472*^-9}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.3555555287606573`, 
                    1.0000000899117651`}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888902, -2.381768782200311*^-9}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.4500000120577026`, -0.44999990755760505`}, \
{-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"softmax\[Omega]QK\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "softmax\[Omega]QK"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999852628056`, 
                    0.5500000656474976}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5.999999999999998, 1.6076938217470707`*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{-12.5, -12.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{12.5, 12.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"N\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-4.999999999999998, 
                    1.339744851455892*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ref\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ref", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    
                    Rational[-25, 
                    2]}, {-4.000000026794896, -0.9999998928204116}], 
                    
                    Offset[{-12.5, -12.5}, {-4.000000026794896, \
-0.9999998928204116}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[
                    25, 2]}, {-4.000000026794896, -0.9999998928204116}], 
                    
                    Offset[{12.5, 
                    12.5}, {-4.000000026794896, -0.9999998928204116}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    
                    Rational[-21, 
                    2]}, {-4.000000026794896, -0.9999998928204116}], 
                    
                    Offset[{-10.5, -10.5}, {-4.000000026794896, \
-0.9999998928204116}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[
                    21, 2]}, {-4.000000026794896, -0.9999998928204116}], 
                    
                    Offset[{10.5, 
                    10.5}, {-4.000000026794896, -0.9999998928204116}]]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"#\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-4.000000026794896, \
-0.9999998928204116}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"softmax\[Omega]QK\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["softmax\[Omega]QK", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.041666666666666664`], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{13.0937, 
                    4.5791}, {16.7177, 5.109100000000001}, {19.4997, 
                    8.2291}, {19.4997, 12.0001}, {19.4997, 
                    13.968100000000002`}, {18.7417, 15.7591}, {17.5017, 
                    17.097099999999998`}}}, CurveClosed -> {0}]}, {
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    RGBColor[0.392, 0.392, 0.392, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{9.3247, 
                    19.0088}, {6.5037, 17.9308}, {4.499700000000001, 
                    15.199800000000002`}, {4.499700000000001, 11.9998}, {
                    4.499700000000001, 9.9488}, {5.3237, 8.090800000000002}, {
                    6.6577, 6.736800000000001}}}, CurveClosed -> {0}]}, {
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    RGBColor[0.392, 0.392, 0.392, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{9.5937, 19.4375}, {
                    3.2187, 19.4375}}}, CurveClosed -> {0}]}, {
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    RGBColor[0.392, 0.392, 0.392, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    10., 4.562499999999999}, {13.5, 1.9374999999999991`}, {
                    13.5, 7.187499999999999}, {10., 4.562499999999999}}}, 
                    CurveClosed -> {1}]}, {
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    RGBColor[0.392, 0.392, 0.392, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    13.0937, 19.4375}, {9.5937, 22.0625}, {9.5937, 16.8125}, {
                    13.0937, 19.4375}}}, CurveClosed -> {1}]}, {
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    RGBColor[0.392, 0.392, 0.392, 1.]}, StripOnInput -> 
                    False]}, ImageSize -> {24., 24.}, 
                    PlotRange -> {{0., 24.}, {0., 24.}}, AspectRatio -> 
                    Automatic], {-2.999999999999999, 8.038469108735353*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"\[Integral]dt\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetFoldOperator", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["\[Integral]dt", Bold], 
                    Style[
                    NetFoldOperator, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999732051024`, 
                    1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Sum]\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["\[Sum]", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{-12.5, -12.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{12.5, 12.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{-10.5, -10.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{10.5, 10.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"N\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999732051026, 
                    1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"remastered\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["remastered", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-4.999999999999998, 
                    1.339744851455892*^-7}, {-4.000000026794896, \
-0.9999998928204116}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 25, 25, 25, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {388.00000147371924`, 158.49999905026974`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.500000000000007`, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "ref" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[16][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    16][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    16][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = SoftmaxLayer[
                    1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{16, 128}],
                     "Biases" -> None|>, "Parameters" -> <|
                    "OutputDimensions" -> {16}, "$OutputSize" -> 16, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2044164090],
                     "$InputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2044164090], 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 16}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    "$StatsDimensions" -> {16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "\[Omega]QK$" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 16}],
                     "Biases" -> None|>, "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 16, "$InputDimensions" -> {16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2044164090],
                     "$InputShape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2044164090], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "\[Integral]dt" -> <|
                    "Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] 
                    Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"seqlen$" -> <|
                    "Type" -> "Chain", "Nodes" -> <|
                    "1" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>, 
                    "propg8seq$" -> <|"Type" -> "Threading", "Arrays" -> <||>,
                     "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "output" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "propg8seq$" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "seqlen$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Inputs", "softmax\[Omega]QK"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Inputs", "State"] -> 
                    NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "seqlen$"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "seqlen$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Inputs", "seq\[Zeta]$"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "propg8seq$"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Outputs", "Output"]}|>|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2044164090]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "\[Sum]" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[# + #2& ],
                     "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "remastered" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "ref", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ref", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "\[Integral]dt", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ref", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "\[Sum]", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ref", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "\[Integral]dt", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "\[Sum]", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "\[Integral]dt", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "\[Sum]", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "ref"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK"], 
                    NeuralNetworks`NetPath["Nodes", "\[Integral]dt"], 
                    NeuralNetworks`NetPath["Nodes", "\[Sum]"], 
                    NeuralNetworks`NetPath["Nodes", "remastered"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "ref"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK"], 
                    NeuralNetworks`NetPath["Nodes", "\[Integral]dt"], 
                    NeuralNetworks`NetPath["Nodes", "\[Sum]"], 
                    NeuralNetworks`NetPath["Nodes", "remastered"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                 Initialization :> {NetGraph}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetGraph[<|
   "Type" -> "Graph", "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
         NeuralNetworks`LengthVar[2044164090], 128}, NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
         NeuralNetworks`LengthVar[2044164090], 128}, NeuralNetworks`RealT]|>, 
    "Nodes" -> <|
     "ref" -> <|
       "Type" -> "Function", "Arrays" -> <||>, 
        "Parameters" -> <|"Function" -> (Module[{$CellContext`pseudocos$}, 
            $CellContext`scaling8r[128][
             Slot["Input"]]]& ), 
          "Net" -> <|
           "Type" -> "Function", "Arrays" -> <||>, 
            "Parameters" -> <|"Function" -> (Module[{}, 
                NormalizationLayer[
                2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                 Automatic][
                 Slot["Input"]]]& ), 
              "Net" -> <|
               "Type" -> "Normalization", 
                "Arrays" -> <|"Scaling" -> CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOI5DZwAACDfajeORi
ACuHaAA=
                   "], "Biases" -> CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOI5DZwDAKRjoAAMVn
CIA=
                   "]|>, 
                "Parameters" -> <|
                 "AggregationLevels" -> NeuralNetworks`ValidatedParameter[2], 
                  "ScalingLevels" -> 
                  NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                  0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                  "$StatsDimensions" -> {128}|>, 
                "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`AtomT]|>, 
                "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
            "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[2044164090], 128}, 
                NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[2044164090], 128}, 
                NeuralNetworks`RealT]|>|>|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[2044164090], 128}, 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[2044164090], 128}, 
            NeuralNetworks`RealT]|>|>, 
      "softmax\[Omega]QK" -> <|
       "Type" -> "Function", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> (
           Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[16][
               Slot["Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
              16][
               Slot["Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
              16][$CellContext`xWQ$ $CellContext`xWQ$]; \
$CellContext`\[Omega]QK$ = $CellContext`linearNetMap[
              128][$CellContext`WQxWKx$]; $CellContext`softmax\[Omega]QK$ = 
             SoftmaxLayer[1][-$CellContext`\[Omega]QK$]]& ), 
          "Net" -> <|
           "Type" -> "Chain", 
            "Nodes" -> <|
             "xWQ$" -> <|
               "Type" -> "NetMap", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Net" -> <|
                   "Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> CompressedData["
1:eJwVl2dYj/8Xx9Pe+lZKRUlCSyU07s+5VcpIhCREdjKjKFI/KSMt0lRpoT0k
aXw/59agUFEILaJCRXaJ1N//wftc17nOg/PkfZ3zfmlu91jjJiggIOAl/q+s
2eZj5em57bij6P+bXdv2m8zd//+h3D8F/F8SZjjVr4HvvEiOS1KQYv9s92Tn
bBnEOVq1SAUdiHSrEsGDypzuZAem5Ig3kZubDXn5MehfIUS1eHw4lySEn8KD
SfEsWyqp/Z3vLGYHH68s4kyY3RbJMglYbX8N9aaW4C0HY/h9UhLsTmhh+pFH
MFfDiazecgxmlbwHd/t2TJqwBrPd23B68jJIjlVnVEYnoU1VDERPliG80muo
1nYT6LHdhPfqNOavOIDPiCbKxQtDQ0cZfcWWkA3vP5PRtm6iv1yN5Tc50Z4s
cThIGGhQnsrMr5wGfQOq7JYgFm4ruUL++bUgdlwV+ualYOfVjxZN504Tfbul
7P6DiuUv9wrj4Zi/6BfThNHzjFHEMYr6r59Ppi65g68CVvP9HX/gAqlK0qQa
RGrVjlF/kxnYQkLJfJPnRLzrMbn0vRoFY1ajhHEr9NqbsaJdnSjixWMLhNfC
ypcNuKTfHnp/JVPfmHg09Z9BUOQ6ZKas5sI/i7JV7m/h56xBuvvTtfI43hkQ
efibHvkVAnvlB2jA+CsYjZnCWRt28S0ePYJg80TqsmQO6AxzWGT9Fh6/q4Gw
G3LcLhjlP1fKpp9WKGLGkTLwydqFWppP4ScryOa5JWPzzI/wRSoeM5VvVqQp
C6H97nmwTkAWZHSjSOOeeezEk0roIqaF+83zsOaZFqqLuAJ/5UU0NxEEt8Oz
We+mAvA494JpCRzmT3aW5A7YB3DZx0dQ/eY7cvFvNxG/HATJ8lfxv/LLJKAo
Af8EtZEdhxaAmWknXbjzBmaviCHd7FOioNiJROgDzFvGooPbW/KpKwJHZvWC
39r7sOF6M1jW/YLIl5FI9xEw2dSKZZs+wgs7IS7ft5p5qLGDKemYBVWWGWSX
iSDqPTKmcxP4MCFMzeJmRw80eYbSsLoYEKvZQoZ/NsHsWnMqICKPqc5mfP7A
YTyce4HvlHOG6rU/wGPWruh4+QyoTgCEo78xYs83Yuq6loRryxCTJ478S48F
WTWVGOyb4wtWSvnE3+s2P8XYlHzxVqiITJrAOo65QdLTENRzcoWJb55WSPm2
gNdsebDKSiSimepQcjqBiodcQSdrM/rbbQSefkyg5dEtZH2KMBcnNo4vX1gi
ip8m1HID6W19D8UbzpHgCsA/Q/f43hkaFdoR6XDHtocJ89xE7n8UwWVcBlhX
n2Ln7UimU73Fua0aybT84FfIaXtG/whnwHbDhVzsxDqiVZiCRelaFYWlMhDl
+wpurc/ARM1kVEqewG5/+IO2BCQQm8V1KJ2phgpsAJf+aRIbtO07cPdl0Wlq
GVmqUAcxzQfL1wvUw8bWmayW7ETwl43CeDAgaLcRc9604Jb9W4m39TSItDyC
u5Uuo2qkuqmtgiX67JrAKiXrg1DCH6xi02GOsD168tzgzp9JbItoIYq5vsfP
+pbQeasQL1gy3OoL2tz2s4NU4FIFVh8xZ2WPRJN52xvw6Z12MrnqLpqW/oLh
T00obcrDolkrOcHjj4nhpRP8Z2XZeO9WEVWsr8Qxt7nca+EbMF2UYQd0dMHG
roY5r5tPXH+1g9suEXz+0J46Pr5DA1P34rBvFOmxmwLpawvJ4UlX8GZcIf6W
cwJXu1AsG+wFzWO+eOtKHQa+XIUDh77yl52egEtG9dkVLneJd3MZ5GZPh+PH
pnGzjQoswqeng9mZ8oo+W0vc+d9p6rJaC1PGbsIT2XoQHJID8dwAfN+hzF2Y
WYzPqRQ7L5oBZ6TEW62KL/8pFa85nyRiMkvh6klqUfQrlbFevAEm6gWiT0sM
2I7aod+9TNIh9BaNbl7A8K7p3Ko5M7Ak04DWdFjhWwNlSDkmx/7aX45T9vbQ
S4MHcI/zRnxy8yvyfJyIV60AfrbX4jqf5kDqIn1sq12EayW6sE13kK/8ypMZ
sFXBxarxJPbhCvRfdht0Hw/Al4N7UN3ZiBNsjMNPoweJcOVNZE+2oZmyIS2O
/AvNoa38G0GmXGCgKMd3/oI/dtnhcbdhckAoFt/s7cIvc/JgQOcs5lmJg9+f
ePCruoKbPMtwRdR3KviHxypUO0KxgD0xq4zFdWmapHmdDHu8PA2YZdfwvwdC
3AZhHqtn7IB/hwagXXMPmFf6Qf9qb/4i/XforuDANtbuw7rqKURjVym8ysog
+4cX4vMwX2a4VAJ1C3ZCw2oW8oP2otShPRaNT2w4TD+DDhPEIU5DwDw6JAjt
BV3J50v9zKYOGfbj9rPwhRNmZRNeEbcdJvjapRInaIZCiYAICEe8ZsjSeGK+
9zyejXlEe6WfoK3TfO7lpod0ysNx4mVrhQ8u7KcjWW0oHieLle+EwLsvH9aa
P6SPhJPgkOVqJkppP4ruVoGwtTy8UiYOB5Q28pUy//mysBy7o21BxooFCbsa
fHeqCL4OFUCk9hVgFiRCpO1tRs3ejZu+K5zqv6ggCZdSUFayCYUdgtDLdSY7
8jwCGvdLw+yIH/y51s+JsI0qPJ+3ntP+GA+TlBaB9vtcUD4cQtrv/6B9tWF0
ZZE6Z66hB8JvJeiDrG6Y++0HdZ8Uhc3Zv0mRzQ2IcpmDXOVr+oz1BnNfDjS2
zMUF505Bj8ds6Ft4CTN1BTnfdBOY2ZoBI39V0NTcEG/qNONOoRDcfiaZZn5/
xkgVTcOhyTFQ/8OB3SgmjzqOnSR++TQuIjOEtmXs4drTDbDnAw++S84hG5V4
3JSoFupRnUZT1fZgc6YP+ljEkvEbdv92WcO2RnWctqKOvzW6kImQi4d2jx7m
R8decMxLRIcqAiNyW6jSI0Vc+SaKLEw6TzfUWkPu5U2cX9EnutzjOTwbSMQr
hjthUs8RYtpZQb59r4dTXr9w8ey5IFUlx6rkV+CY3gPS2KrH1nTL45PQTbTi
SxcRoMvpZbVEjOcUOYZpooPL9WGkehfueWjGluw2w8KN3fT8Y3WU3hoI6hNM
mPfyhzHpUhS+cFCBO+f24oeV+2DSbFcUWe4FayOyoL7gBhnvUwHlddrQYxgF
E2qrmIxZqtyOwBMgHlgEkg0+ILjKHVsTCP0W0QoubqWkKlILxFr74OLXObTn
qB37PT0e1Devxv2ySVAXK8nelhbEbLNAHJJ6jJ+9KK5MdYGfrV/hZ+BVmPX8
AhXd9JVeVDPkDq6aBh0uwPnaarAhuhrsfsE8HImZhcqCL0nxwEvwTb0B7n6a
7GEfaZq1XhjLJ9jStSKeKH5vCKZpvcKxFcvwcKQOBvVa8FuTNpMGo0PQu62T
rtFbRtTVpdC30ZjN2X4c2cRxXGVjCUeUj2JbrxtcuH0W9m9xh/FNypC1VBKO
2xuA+JZRwht8iveXPwHJDdu4Z4miWCZ9hzywkeeH6C3AZNdQdH2cB8OE4TrE
WknB/FT0OctZ/CiPxzHBvwyr9g3Y+nA8b5RM7K8asP63tUB89gV+zh8n9sKJ
Eppw5C/Y1n/GhS2UgKfkvzs4mRtbEYvb/v3DTYwBLCqczF66O4+vU62MjsHA
uc0MRFkzTfCxbcb8sRWoOSjDbdVvxf7QE3TJBF3Yd7SDfgl2YDNtpsN848dM
GS8bQ5j3aDxnDwQZTMGQNdUkOlAOhqwcuUt9gdRv0w648F6cLat7CIMeO+G5
2xN8eWgJNitc5M+rugfLTjiz34uuY7aGMbsqR4JVURcgLTmLkZM6CVECr6ju
xFGoD4mlEaNZOCyfCjrbVmOXqCN3vP41VrrMIl/EFwLPvg9jT/pBi3oT/79c
JbaCdxHncjVYGfQN360+A3i8GGAwEPykgugt9YPktkkN8jwrQEI1gKzu2mXx
hP2AU/utSG/uFdJ8fSo7+CGS/LdPkKrovia1I4vInhA11u8ij7V6nIouw68g
TTMPq8g1eldNkwre+wAapbbUu1iQO2VbCHv9L8CVDjX22gYV1qPzPlHQng/2
khfJ74UxOL7qKXP4Ri7tPVeCxRWq3F0Teb56ZQ/W7XyLgvfPkBSmn85scODP
3ybJ3Ta5gLPFF3OfVsxkp8p9oVkuXrA15RdK/L0OI8172fvLcrCQ6HCHF1RU
nL5wjfSnqNOzvQ10WrUG0Qt5Q0Yld9CNtQKctHkoam5eCN6NFtyD0hN0i88p
1L2ai6Zbu6jrzBjy6r4E/FGNRK+w2dySnfHE6rwsLb2pCDYbWM5G/y1eMwPM
DS8FealYHLynwsbVqWHlm0cWOcpamPQtgG4XcocAUwn0mLmVXPr2gaq8u8u3
HRLmbtFmuuW2Difg+gmn+cqy9gG6aJRbDpoKt1DlryG7MTSSrDsqRE490ESH
v8NkIc3ECY9Y/GvUT77bWLHyL0L4W+RKgbe7ny/q4QmlX96jOewAtyhlvPw+
Hc8+FsGAWyP47FcAKG1qZS7q5kL8yWooif8FAVwzLLCzwY1fBThDiYucEyMM
VTWSnIulJ0q9AVhhvx5+ZrZAwQkbJj/LBE6Or8G7Ziywh8KIk5MiSG2oIncG
/DjtdHtwmHsFTyomQJ7QKNmc1g5W1nfBi0mD+63tFmYLc6Alrpo5/EOPFc2P
hDndk/AsKpO1dtFoElVAdH+6Y8LmJOjwnQzBPiLsrWuinKOUPaxyjedPuZzH
qC0uIc8vSJKyrZGcicVN/HLBBfdmK3PMxDiU2tRHGouMIIXYQGWSCXr76mCk
fAe+7nOANeNPgX8igCmYM4WLyVTiZJ3k2KcOr8FT7RmsD/4GE9m7kKKljf1d
1zG8podu/BxNbf9kkCix+fRM5CxY7nIK73dU4Andiyif9YDycoPpx/+Uuf2+
Zzn77br8GBs+CFwpQvMdFfh+9yT2tXMGrHZ9CKcXb0e/Q8uxcXE4XC+r5Atr
24HINEdu2vhTxrF9NcoNK3IZ1rO4Ik8eGeocov4nhTmr3c34uOcvnbZvCvBy
zrK6a2O4Kz5pGHT3MOr01DDC9CQckb4Ce52k2bOFG2nJVWV2cZcEG+ebDOn9
7Ug8roHf4qsWf6qeQWDaAXz/dBhNj9jQQ7kxZFBPBtKdVnEpAxFY3OCJx1Z8
BnNjK+w/IwFFr07hfu0vqLIniAyl7QH7P9nYqZYByhn5eG/4O6gkn4Eb4wkk
wdoe1WapA3MwCyVztVCx24A9K3CErGj4zKx52EzUpj4m0T/cGE+XQ/BTZVVF
2JRDXHdbCdyIyCLv3waSI48PksqWEIy7dAJZ/JcB9HVBt1EDhQJn49h1HjwZ
vgSCyR8AxceJqrMfU5JrzPb3TWUDt3fC4y+dmDxShG0qkpj8KhEznH+RxC+1
NFXTDusnbWQ/NpRgrfh5TEn6BFO2SmCoSjrw0u9hE9kKK77F0uv9kbQoT5I9
Jl3H2BQVwO5GS3ZLsBDVMWghs+gEOBGhxW64MontbToLS9d+hVBVQ6j0G8Ua
2Q/4vsQUbEov48lFBXT02gTof7YbY0+04btsR9CMd4fJJ95DnNB67Noth3Xx
RmghXAGaXlZc49VANAwX4mY3lDLfq01Rd+5ZTE25BW3joiR2Xyawqd/xks1R
uqi2HsrzLzPk5DDVbW8n7kvr6IKqy1zmP3aF33LEIGIdf7pPLy7ZsJIs/ZpG
2v3vgIO7AbT9YqjullNU/Ndr/jWjU3xp/VRsfaGMez0W4r0Ea5bLu4ndGo7c
MK8R6xtvQ/PhaJQoq8Y10XeY6tAppCdAE40/LeAO1k5ClezzYKqwDWVvNuES
vgRzRf4eNa45D4Nm0Ti/L59crXlOa7KOlX8rEeRmnJqHGdseQtlyF9x9/zJe
dfjO5GrH4c9lK7gJm7xRReseegSXU9mvxeYCt/JJs7Y1Nqs4wwIxVQxDf1TR
+QKxonWQ19YFQ8GBuMAhBXvVg7EmcJDMqpnIvqQZUB6lhOorp3FT2t7w3+5K
JLnGUmAxoxEGUtTh2JS3sOaPO12pcIUZOdqBlZan4KzQNPaGdhyk2z8An04x
aPiiwm5oSYE5g8oc2RAGQqOx/A9GBEISYslI2BuYoH8QdufY84UTAxFxNw6K
M2zE0WeUyVJEtnUenFjrg7lBXvDi3lf++Oh5aDx9DtT9eFzR8Ubkn3hIsP4c
KBnOg4kL1TmHnjI8k9UJP1Y1UYVz76D91ouKJUKO5KN/J328UAc15vDYQtmd
2BnsTrUPrCXSYepc4WINTMgxZpb5zEOBwiFwVBSD99OGsbJghJq966R3XD+j
d4kjfWSkynpgF3Q78rjlFpvR8tZ8drxrJa6vZ2GRuRHzsmaQNJZM5LSWHMGa
Y3ac6boYkP37GYOSGqBvYy4RxhKyvd+cfTW8C/q8x/DBp1xMKnyGgoZeMPBh
KbwtSAL2QSiR+VZPd9nXQP/9HfDulCB76bkUCHjtQa+hpxZlbxTAPzEVXRP0
aKe+AXFdk83Mvszxt9tkk9iz38hOB3WQGhxFycEiTNuRhczdKazAod9EcewF
jIlbcMIugOF7nWhP3Fr09jcGpVI79OzfaOF5QZUVL9KBKLVq3IjnaVj6d5Be
cx2rr8py9cN38bbqOnIwaQac2vIMjx2U4t4+KCZUVBp2/EwDk8u3YdHLWTDB
8g2Z9Y8xjmiF4X/hQ7jQjTBK+jsIEVTFdhKP6V0qkJaZgBK8uxZOPyKxZbko
l77rMt7XeUsbRCYwxR6bIazZlDXwaeLPNOKAt+Mdei8vJN1uG0mchhFrdj4I
L+p8gtcb/FDvtyQ3LPec1p5/iI/+zGGzdArBvFQNt3w1omfybVlmJIf1PJrI
rkQ3fqG7Fpnq8oxeVn9L5+BMrk7rHpikSbL3VqpBYoAGOu+OxIaclyRCv4B0
lC/n3j+S4eabSwK3tZgmDZbBw/0i4BvEgOAlS8y5yjKVpkLcH98pcCE0Eh28
npKk8aMwZlQK4Zvacc8tlmqEPYF1ixZj8Tw3/uejpaSg9w012lyOWSZl9Hne
B3AfukcjrDPpSQMv7vPntfBLVpI1CrtD5p7h4WEtMc66cZjc/ROLTFAFTLJB
KJTTR8MZEmzQ1ZtkUbMCV235jW7UacFi3lrsfLGB8+oqBdfhxczWgMfokyLC
xbMP4OK7U5j7VpATnXcDxJZUUF6zG/P0zG10yC1l4tPe8J9+fY3LfZXYnrkt
pPyFDNkeXw6vcgKgq8cChbyLSKeTKWQLxxJ54YUwsM4XlhQEoPMOY9Zf2xrE
Fk+AhJBtkOLpy7oqSuDPySlE9PhlXPJyBRrFdNHuYit8HRDI3K/cDq8tD6I8
duDiGxfprERb7F4qzvkfscZJDlcw7WsOfycXRbYqLiNJLaN0aUYfNhTXQ8T3
MfKACSJCpzbwt7qKsNa1kWjYtYjrGgtges91QKljESiWiMP59kyIk2rAg7mf
QMChCbQ2JIGGuT4OTAyA1xMAwusH0HFmOOYH62H+hj34TuU8bm75SPT2riXZ
P2IxW9SM1N9ZCZVKO8A/8zru/aVUMfxIHXN4BZiWbw0ripLBiRcDW59W03ON
sqD8fgrfo6cCZIcCcZNuOmY3K4K1+Tk69rYI/AfngbTDAHnnpsY6ybLs6F01
rpgXDrX75Kntj0CYGmoN90PLyLfjCnjzSR5dPcaSR83zochdi60+YcH5Gbbi
9bNOGPojhRQr78PzHgewYO1FFOUWQfxyNfbLjkQo740Gr0+ynOG0cHLY+Li5
V8p8nGQEUO+XRM528zDS9ieeGrjMnJo3gAsf61tcfJHNRN2qwhfq0twW5SgM
llNF3dOXkFlqwuYcUeY+tf+1cBzVQv9UB7SsOoOTRaxBhpGAl80XgN+njHbZ
OvTRvlpwyi0Gx5cHSHDyfO7hcRtu2j5tDNEvhILqebS3fArb6OmAvPcdoL2h
gl7sewnux0ph3+VJ0OZ3EnaWraQpW2Q5iX5T2Oyzn3jmpKEQfcpvS7pGFC6K
cH06Sqy8rSA793sXOsRNgs39Cuyh29VEc4Y/21osTbQ8x0jIs30UnRLIZ70s
NLxTAdnOyuyeX92kuk4KNJedg2PbW4iLUD++DAjFUenXKLlyE3PGrBX9bo9W
1K06AcbCz+hcAxm0iQhE9eNDpPr0DnCokoVr4TzU+XiTVu00hePGo3RBaiqx
GjeCqSrlTGe9PwhOfY7l7g1Y1qCKMuV+bFfHQn7b+FmYkdVE8gzTMUuhB+Z9
cCLL3oTQK7lPMe+JIjjPemFhllFEuZXi3Pxzr8G8KBBnZhWxgY5BqGZ4g3lV
/R8n0/oXZSdOxpTgJXjLU57LnhuAeeH6tKjpHOzoOIsnZb2oV58AK9pznMon
RvJXKXrhtwxPOO+hRgJvhCBoleCq/P385ScuoGWoUsXzJ9OQeN6E+3m/QG80
AJcO2EH2xkMVS5bLwak374lp6iPydFURyG2SAiWTPM5wAR/n/961YL2uNfCs
drItL0OgTess8usGyLS1N0AiTRdCeMM4NG8zXJ49nfshIYG9anwybZIN637M
BFxDS6FTcw8pKtpJl6wewuTv8ZT5XYwlVlLcfyk5RHyLAKf68Tb6nc+AFtFN
IOYkDVIzK+jWe5PYjxb9mB0ohFnimpzvybmcx6EBZtnrh+Sp4nwuT44Pbb5j
dJZaPapY1OKy5nPkYJYB87giHn4cGWUaAsS4X3WG2Ki5Anq7n1D/bTyLKQmp
nOJSZ1j2XwSIvojBd0nfkH8yHdpsAtE1Nreid484W1i9lA58y2ZMtSS5jJYc
7JNuAuZRCFzPbqf3hbbhguh+6rNYB4yst6LeFB22oMSKPXRJHt7OiSY1I++p
jbkKWN/uxonJ0qgnpcOZBAXisug9dExlJqo57SdSjBU6b4v7570s/Fr9CA08
ViCE3ADe7BqLTtEzuFs8Hqrm12KHhipxlTFjj1k2wkp6BzY4xsCiIX90ef/L
3MfSDS1eC7N1IbPRTOIINtqHQX6kNK7yfoxxfqKcU9hzbI9OxZEZmyHJNRUV
xzWw5eEyrkzPnDt/UR49yhupslMj+B/X4MrWluBI+kkwaFaneRY8tI1wg9Pd
Tfyak3104nV9lIjKhlYLUc51cC53+0MsnJl5Ho1miGFC21IqvToNW18lQkxi
EH05JwLlnZTYQpth5rnNUvT9tgToPi/kvdbiZKMTwT2nGS+GrOU6tgSCwhIn
uP5zGjt9pBm7DV6ThR1K6JugC1fMqrApdQu27V7Nfp/RiJYkilgEXAb1HhlW
e08YyLYxnOW1YNa68zaY7FrNpm1LxQPtVpy/tQnX/tEDq3cq49GuJRhyJxiK
C3TZcMN/bDZwjdwar8bUrBZYc2iA3Hh6tFx53Q1MibgO7xaewSy5E3jgxR90
k7lHTFqOY//4GboppgJ2xM5m3MPDMfheHuz/mQiZAyrguFGCXVrIcBu8v8Aa
87kwhtHgnmzCGnzvgZCNEmh05hhsPXYVgG3G2GPdFXO0gi3+zkbiopsKf8Ts
IFPKiE0ZPwRNha9h0fJlrC/Th5c1x0HMYynsV1HAB/qdkFJwHb7mpxKthVV0
6qNYGD8XDH2atfSiiCpXryvLWhn/gS2e89mH1lLUq8QJOmd9gN3T5+JFzUwa
arwQNnsU0yciVfgs3oAMGbdj2opwcn2wGYKNOohvGAN5UrLgqB+AyZHRNPnm
OIn7MwXGLkQBV3MJf1deoTI7J6Kd2SL4ElzJz95lDYHO07gb674TpcJrpOZc
Om15EwrLfplwlX2ZuKfhC46EJ4PLGMtNL5nM5h+0xB3lzqx9wCvI0/KC8YXX
QEPKAy3khgnPQxNmHzRnSx+eQmftfdwJCQtONX06tFB/qiNTQjKWdJFTf8zY
+I5CiLo9jBUFMly/QQ79ckkTamk2BmwcwbS4EPwltggeqiqw0QNKnO3P+Tj+
zQXjOv9QoRmCbGPXHQhPkeWU9TtwZjvhlFoV2WcB5+nNlV7YXe8IGdU30Lti
Crv0yQGMjC4Dj+wJrK2MJsx1/UqN84LA9vZsCH3+jGjuDcXavSZo47sUMv6T
YI3ty0hSYw6/YGIljE3Xx9aPLv9Srzg/XLAFnwxyOPxzO+juEOOmVtXC7YO3
kFlVABV94bj5SQEs/WvBVewJxt5J08Ffdjv0KrQSkYn3oOPrbK7680pOrlWb
PTL9GJyyX0yTD+zHFTxl1l/IGORKMvCJ5WRQjXzMaBz+iM2Z3XimbRW98Ho2
xJ/mULA7lUqaKnBziiXYLwnOME4acbJxCnSuluCuegiya3gruYauGdyS6yng
EKZJLoRGU28RPTRXuYrddYXofCIe17jk4f8A72mhdg==
                    "], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {16}, "$OutputSize" -> 16, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>|>, 
                  "$SequenceLength" -> NeuralNetworks`LengthVar[2044164090], 
                  "$InputShape" -> 
                  NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                  "$OutputShape" -> 
                  NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>, 
                "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>|>, 
              "WQxWKx$" -> <|
               "Type" -> "Chain", 
                "Nodes" -> <|
                 "1" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[# #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2044164090], 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                  "2" -> <|
                   "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 16}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|
                    "Scaling" -> 
                    RawArray["Real32",{1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
                     1., 1., 1., 1., 1., 1.}], "Biases" -> 
                    RawArray["Real32",{0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0., 0.}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    "$StatsDimensions" -> {16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"]}, 
                "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>|>, 
              "\[Omega]QK$" -> <|
               "Type" -> "NetMap", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Net" -> <|
                   "Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> CompressedData["
1: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
70MgLpsC28sT4H8jr/uP
                    "], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 16, "$InputDimensions" -> {16}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>, 
                  "$SequenceLength" -> NeuralNetworks`LengthVar[2044164090], 
                  "$InputShape" -> 
                  NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                  "$OutputShape" -> 
                  NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 16}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>, 
              "softmax\[Omega]QK$" -> <|
               "Type" -> "Chain", 
                "Nodes" -> <|
                 "1" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Minus], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2044164090], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                  "2" -> <|
                   "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"]}, 
                "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "xWQ$", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Inputs", "Input"], 
              NeuralNetworks`NetPath["Nodes", "WQxWKx$", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "xWQ$", "Outputs", "Output"], 
              NeuralNetworks`NetPath[
               "Nodes", "\[Omega]QK$", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "WQxWKx$", "Outputs", "Output"],
               NeuralNetworks`NetPath[
               "Nodes", "softmax\[Omega]QK$", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath[
               "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath[
               "Nodes", "softmax\[Omega]QK$", "Outputs", "Output"]}, 
            "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[2044164090], 128}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[2044164090], 128}, 
                NeuralNetworks`RealT]|>|>|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[2044164090], 128}, 
            NeuralNetworks`RealT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[2044164090], 128}, 
            NeuralNetworks`RealT]|>|>, 
      "\[Integral]dt" -> <|
       "Type" -> "NetFold", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Net" -> <|
           "Type" -> "Function", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> (
               Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                   Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                  128][
                   Slot["Input"]]; $CellContext`propg8seq$ = 
                 Slot["softmax\[Omega]QK"] 
                   Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
              "Net" -> <|
               "Type" -> "Graph", 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                  "softmax\[Omega]QK" -> 
                  NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                  "State" -> 
                  NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                "Nodes" -> <|
                 "seqlen$" -> <|
                   "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>, 
                  "seq\[Zeta]$" -> <|
                   "Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> CompressedData["
1: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
d3h5uI5jPHIbAoIOMf+16eH/AIXiVq0=
                    "], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>, 
                  "propg8seq$" -> <|
                   "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|
                    "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT], 
                    "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                  "output" -> <|
                   "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Times], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|
                    "seqlen$" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>|>,
                 "Edges" -> {
                 NeuralNetworks`NetPath[
                   "Nodes", "seqlen$", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "seq\[Zeta]$", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath["Inputs", "Input"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "propg8seq$", "Inputs", "softmax\[Omega]QK"] -> 
                  NeuralNetworks`NetPath["Inputs", "softmax\[Omega]QK"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "propg8seq$", "Inputs", "State"] -> 
                  NeuralNetworks`NetPath["Inputs", "State"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "output", "Inputs", "seqlen$"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "seqlen$", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "propg8seq$", "Inputs", "seq\[Zeta]$"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "output", "Inputs", "propg8seq$"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "propg8seq$", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "output", "Outputs", "Output"]}|>|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
              "softmax\[Omega]QK" -> 
              NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], "State" -> 
              NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
          "Recurrence" -> 
          NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
          "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
          "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
          "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
          "$ForceStateRank" -> False, "$SequenceLength" -> 
          NeuralNetworks`LengthVar[2044164090]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[2044164090], 128}, 
            NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
          NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[2044164090], 128}, 
            NeuralNetworks`RealT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[2044164090], 128}, 
            NeuralNetworks`AtomT]|>, 
        "States" -> <|
         "State" -> NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
      "\[Sum]" -> <|
       "Type" -> "Function", "Arrays" -> <||>, 
        "Parameters" -> <|"Function" -> (Module[{}, Identity[
              Slot["Input1"]] + Identity[
              Slot["Input2"]]]& ), 
          "Net" -> <|
           "Type" -> "Threading", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> NeuralNetworks`ValidatedParameter[# + #2& ], 
              "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>, 
            "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[2044164090], 128}, 
                NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[2044164090], 128}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[2044164090], 128}, 
                NeuralNetworks`AtomT]|>|>|>, 
        "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[2044164090], 128}, 
            NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[2044164090], 128}, 
            NeuralNetworks`RealT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[2044164090], 128}, 
            NeuralNetworks`AtomT]|>|>, 
      "remastered" -> <|
       "Type" -> "Function", "Arrays" -> <||>, 
        "Parameters" -> <|"Function" -> (Module[{$CellContext`pseudocos$}, 
            $CellContext`scaling8r[128][
             Slot["Input"]]]& ), 
          "Net" -> <|
           "Type" -> "Function", "Arrays" -> <||>, 
            "Parameters" -> <|"Function" -> (Module[{}, 
                NormalizationLayer[
                2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                 Automatic][
                 Slot["Input"]]]& ), 
              "Net" -> <|
               "Type" -> "Normalization", 
                "Arrays" -> <|"Scaling" -> CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOI5DZwAACDfajeORi
ACuHaAA=
                   "], "Biases" -> CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOI5DZwDAKRjoAAMVn
CIA=
                   "]|>, 
                "Parameters" -> <|
                 "AggregationLevels" -> NeuralNetworks`ValidatedParameter[2], 
                  "ScalingLevels" -> 
                  NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                  0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                  "$StatsDimensions" -> {128}|>, 
                "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`AtomT]|>, 
                "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2044164090], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
            "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[2044164090], 128}, 
                NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[2044164090], 128}, 
                NeuralNetworks`RealT]|>|>|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[2044164090], 128}, 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[2044164090], 128}, 
            NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "ref", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "ref", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "\[Integral]dt", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "ref", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "\[Sum]", "Inputs", "Input2"] -> 
      NeuralNetworks`NetPath["Nodes", "ref", "Outputs", "Output"], 
      NeuralNetworks`NetPath[
       "Nodes", "\[Integral]dt", "Inputs", "softmax\[Omega]QK"] -> 
      NeuralNetworks`NetPath[
       "Nodes", "softmax\[Omega]QK", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "\[Sum]", "Inputs", "Input1"] -> 
      NeuralNetworks`NetPath["Nodes", "\[Integral]dt", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "remastered", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "\[Sum]", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "remastered", "Outputs", "Output"]}, 
    "InteriorStates" -> <|{"\[Integral]dt", "State"} -> 
      NeuralNetworks`NetPath[
       "Nodes", "\[Integral]dt", "States", "State"]|>|>, <|
   "Version" -> "13.3.0", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.914879714356904*^9, 3.916355078289393*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"b0edadaf-626b-4122-8096-3fc575973f1e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["FunctionLayer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             
             GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
               0}}, {{
                Opacity[0.3], 
                LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                AbsolutePointSize[5], 
                RGBColor[0.33, 0.33, 0.33], 
                PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TagBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], Short], "SummaryItem"], 
                "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TagBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], Short], "SummaryItem"], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             
             GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
               0}}, {{
                Opacity[0.3], 
                LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                AbsolutePointSize[5], 
                RGBColor[0.33, 0.33, 0.33], 
                PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`FormattingLayers`opart, 
                  NeuralNetworks`Private`FormattingLayers`part, 
                  NeuralNetworks`Private`FormattingLayers`selection = Null}, 
                 DynamicBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    StyleBox["Parameters", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Function\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Function\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Function"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Function\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Function"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    StyleBox[
                    RowBox[{
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{
                    RowBox[{"scaling8r", "[", "128", "]"}], "[", "#Input", 
                    "]"}]}], "]"}], "&"}], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Net\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Net\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Net"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Net\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Net"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"FunctionLayer", "[", "NormalizationLayer", "]"}],
                     HoldForm], "SummaryItem"], 
                    Annotation[#, {"Parameters", "Net"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`FormattingLayers`part = 
                    MouseAnnotation[]], 
                    If[NeuralNetworks`Private`FormattingLayers`opart === 
                    NeuralNetworks`Private`FormattingLayers`part, 
                    NeuralNetworks`Private`FormattingLayers`selection = Null; 
                    NeuralNetworks`Private`FormattingLayers`opart = Null, 
                    NeuralNetworks`Private`FormattingLayers`selection = 
                    NeuralNetworks`Private`FormattingLayers`part; 
                    NeuralNetworks`Private`FormattingLayers`opart = 
                    NeuralNetworks`Private`FormattingLayers`part; Null]; 
                    Null], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterLayer[
                    
                    Lookup[<|{"Parameters", "Net"} -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1837434740], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1837434740], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1837434740], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1837434740], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1837434740], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    Key[NeuralNetworks`Private`FormattingLayers`selection], 
                    Null], NeuralNetworks`Private`FormattingLayers`part, \
<||>, {}]}, GridBoxSpacings -> {"Columns" -> {{1}}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridFrameMargins -> {{0, 0}, {0, 0}}], 
                  TrackedSymbols :> {
                   NeuralNetworks`Private`FormattingLayers`selection}], 
                 Initialization :> {NetChain}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  FunctionLayer[<|
   "Type" -> "Function", "Arrays" -> <||>, 
    "Parameters" -> <|"Function" -> (Module[{}, 
        $CellContext`scaling8r[128][
         Slot["Input"]]]& ), 
      "Net" -> <|
       "Type" -> "Function", "Arrays" -> <||>, 
        "Parameters" -> <|"Function" -> (Module[{}, 
            NormalizationLayer[
            2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> Automatic][
             Slot["Input"]]]& ), 
          "Net" -> <|
           "Type" -> "Normalization", 
            "Arrays" -> <|"Scaling" -> CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOI5DZwAACDfajeORi
ACuHaAA=
               "], "Biases" -> CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOI5DZwDAKRjoAAMVn
CIA=
               "]|>, 
            "Parameters" -> <|
             "AggregationLevels" -> NeuralNetworks`ValidatedParameter[2], 
              "ScalingLevels" -> NeuralNetworks`ValidatedParameter["Same"], 
              "Epsilon" -> 0.001, "Unbiased" -> False, "$Dimensions" -> {
                NeuralNetworks`LengthVar[1837434740], 128}, 
              "$StatsDimensions" -> {128}|>, 
            "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1837434740], 128}, 
                NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1837434740], 128}, 
                NeuralNetworks`RealT]|>|>|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[1837434740], 128}, 
            NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[1837434740], 128}, 
            NeuralNetworks`RealT]|>|>|>, 
    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
         NeuralNetworks`LengthVar[1837434740], 128}, NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
         NeuralNetworks`LengthVar[1837434740], 128}, 
        NeuralNetworks`RealT]|>|>, <|
   "Version" -> "13.3.0", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.914879714356904*^9, 3.916355078330162*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"2e976cc3-efc7-442e-a533-5b2d7740e637"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Title",ExpressionUUID->"a49bf865-41e3-45ad-accb-392b5cf0cac0"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"results", "=", 
    RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"embdims", "=", 
    RowBox[{"2", "^", "7"}]}], ";", " ", 
   RowBox[{"celldims", "=", 
    RowBox[{"2", "^", "8"}]}], ";", " ", 
   RowBox[{"nstates", "=", 
    RowBox[{"2", "^", "4"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"tokseq", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<To\>\"", ",", "\"\< \>\"", ",", "\"\<be\>\"", ",", "\"\<,\>\"", 
      ",", "\"\< \>\"", ",", "\"\<or\>\"", ",", "\"\< \>\"", ",", 
      "\"\<not\>\"", ",", "\"\< \>\"", ",", "\"\<to\>\"", ",", "\"\<be\>\""}],
      "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<embseq=emb[``]\>\"", ",", " ", "tokseq"}], "]"}], 
     "\[IndentingNewLine]", "embseq"}], "=", 
    RowBox[{
     RowBox[{"encodeLexicon", "[", 
      RowBox[{"embdims", ",", " ", "vocabulary"}], "]"}], "[", "tokseq", 
     "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"seqlen", "=", 
    RowBox[{"Length", "@", "embseq"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"unitCell", "=", 
    RowBox[{"OuroborosCell", "[", 
     RowBox[{"nstates", ",", "celldims", ",", "embdims"}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "[", "\"\<data\>\"", "]"}], "=", 
    RowBox[{"unitCell", "[", "embseq", "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"cosseq", "=", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "seqlen"}], "]"}], ",", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"1", ",", "embdims"}], "]"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"cosseq", "=", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "*", 
      RowBox[{"N", "[", "Pi", "]"}], "*", 
      RowBox[{"(", 
       RowBox[{"cosseq", "/", "seqlen"}], ")"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "[", "\"\<cos\>\"", "]"}], "=", 
    RowBox[{"unitCell", "[", "cosseq", "]"}]}], ";", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Multicolumn", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<embseq\>\"", "->", 
         RowBox[{"ArrayPlot", "[", 
          RowBox[{"embseq", ",", 
           RowBox[{"AspectRatio", "->", "0.75"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<unitCell[embseq]\>\"", "->", 
         RowBox[{"ArrayPlot", "[", 
          RowBox[{
           RowBox[{"results", "[", "\"\<data\>\"", "]"}], ",", 
           RowBox[{"AspectRatio", "->", "0.75"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<cosseq\>\"", "->", 
         RowBox[{"ArrayPlot", "[", 
          RowBox[{"cosseq", ",", 
           RowBox[{"AspectRatio", "->", "0.75"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<unitCell[cosseq]\>\"", "->", 
         RowBox[{"ArrayPlot", "[", 
          RowBox[{
           RowBox[{"results", "[", "\"\<cos\>\"", "]"}], ",", 
           RowBox[{"AspectRatio", "->", "0.75"}]}], "]"}]}]}], "}"}], ",", 
      "2"}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Multicolumn", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"embseq", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "m"}], "]"}], "]"}], ",", " ", 
               RowBox[{
                RowBox[{"results", "[", "\"\<data\>\"", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "m"}], "]"}], "]"}]}], "}"}], ",", " ", 
             RowBox[{"Filling", "->", "Bottom"}], ",", 
             RowBox[{"PlotLabels", "->", 
              RowBox[{"{", 
               RowBox[{"\"\<embseq\>\"", ",", "\"\<cell[embseq]\>\""}], 
               "}"}]}], ",", " ", 
             RowBox[{"ImageSize", "->", "300"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"quickHist", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"embseq", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "m"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"results", "[", "\"\<data\>\"", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "m"}], "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<in\>\"", ",", " ", "\"\<out\>\""}], "}"}], ",", 
             " ", "250"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"m", ",", " ", 
           RowBox[{"RandomSample", "[", 
            RowBox[{
             RowBox[{"Range", "@", "nstates"}], ",", "1"}], "]"}]}], "}"}]}], 
        "]"}], "//", "Flatten"}], "\[IndentingNewLine]", ",", "2"}], "]"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Multicolumn", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"cosseq", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "m"}], "]"}], "]"}], ",", " ", 
               RowBox[{
                RowBox[{"results", "[", "\"\<cos\>\"", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "m"}], "]"}], "]"}]}], "}"}], ",", " ", 
             RowBox[{"Filling", "->", "Bottom"}], ",", 
             RowBox[{"PlotLabels", "->", 
              RowBox[{"{", 
               RowBox[{"\"\<in\>\"", ",", "\"\<out\>\""}], "}"}]}], ",", " ", 
             
             RowBox[{"ImageSize", "->", "300"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"quickHist", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"cosseq", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "m"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"results", "[", "\"\<cos\>\"", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "m"}], "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<cosseq\>\"", ",", " ", "\"\<cell[cosseq]\>\""}], 
              "}"}], ",", " ", "250"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"m", ",", " ", 
           RowBox[{"RandomSample", "[", 
            RowBox[{
             RowBox[{"Range", "@", "nstates"}], ",", "1"}], "]"}]}], "}"}]}], 
        "]"}], "//", "Flatten"}], "\[IndentingNewLine]", ",", "2"}], 
     "]"}]}]}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.913072844757031*^9, 3.913072852763793*^9}, {
   3.9130728958153677`*^9, 3.9130732173023043`*^9}, {3.913662243618904*^9, 
   3.913662273594756*^9}, {3.913662329795825*^9, 3.913662358053535*^9}, {
   3.913662492885507*^9, 3.913662541680525*^9}, {3.91366259399093*^9, 
   3.9136625951565742`*^9}, {3.913663711800878*^9, 3.913663789050167*^9}, {
   3.913663927743387*^9, 3.91366393749527*^9}, {3.9136640301925983`*^9, 
   3.9136640509087553`*^9}, 3.913664169510738*^9, 3.913671985933125*^9, {
   3.913672049168207*^9, 3.9136721585645037`*^9}, {3.913672296842462*^9, 
   3.9136723261140337`*^9}, {3.913672374212604*^9, 3.9136724536846523`*^9}, {
   3.913672510872115*^9, 3.913672536357523*^9}, {3.913746844266284*^9, 
   3.913746898692704*^9}, {3.913746930611298*^9, 3.9137469316427927`*^9}, 
   3.913746962064646*^9, {3.913746997693199*^9, 3.913747000147431*^9}, {
   3.913747092253613*^9, 3.913747110305676*^9}, {3.913747188885721*^9, 
   3.913747225753171*^9}, 3.913747422376555*^9, {3.91374747525877*^9, 
   3.9137474758033*^9}, {3.913747824707336*^9, 3.913747824900578*^9}, 
   3.913747861668888*^9, {3.913749061298773*^9, 3.913749153714273*^9}, {
   3.913749197498384*^9, 3.913749435142346*^9}, {3.913749580218667*^9, 
   3.9137495807051077`*^9}, {3.913749653540874*^9, 3.913749661689732*^9}, 
   3.913749700604752*^9, {3.913835602495493*^9, 3.913835832204547*^9}, 
   3.913835868555592*^9, 3.913836100944832*^9, {3.913933553328964*^9, 
   3.9139336803242893`*^9}, {3.913933721815596*^9, 3.913933765203394*^9}, {
   3.913933854049521*^9, 3.913933855010849*^9}, {3.913933890502811*^9, 
   3.913934103541107*^9}, {3.9139341677754107`*^9, 3.913934235822885*^9}, {
   3.913934331432214*^9, 3.913934355380878*^9}, {3.913934389155477*^9, 
   3.913934389436987*^9}, {3.9139344226850758`*^9, 3.913934432784009*^9}, {
   3.9139345080012293`*^9, 3.913934540831366*^9}, 3.913935098742927*^9, 
   3.9148796663071012`*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"720918b8-cfde-43cc-9090-cb0a35e46d5e"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Decoder", "Subsection",
 FontFamily->"Roboto Condensed",
 FontSize->18,
 FontWeight->"Regular",
 FontColor->GrayLevel[0],
 Background->RGBColor[0.87, 0.94, 1]]], "Section",
 CellChangeTimes->{
  3.880318226616714*^9, {3.91296363118788*^9, 3.91296363272261*^9}, {
   3.913935139548728*^9, 
   3.913935145903037*^9}},ExpressionUUID->"5b0cb4d5-4558-4f45-ade9-\
7ebb61d65616"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "decoder", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"decoder", "[", 
   RowBox[{
   "demb_", ",", " ", "dcell_", ",", " ", "nstates_", ",", " ", "nblocks_", 
    ",", "vocabulary_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"embed", ",", " ", "retouch"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"embed", " ", "=", " ", 
      RowBox[{"encodeLexicon", "[", 
       RowBox[{"demb", ",", " ", "vocabulary"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"retouch", " ", "=", 
      RowBox[{"NetFlatten", "@", 
       RowBox[{"NetChain", "[", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"HJKBCell", "[", 
           RowBox[{"nstates", ",", "dcell"}], "]"}], ",", " ", 
          RowBox[{"interposer", "[", "dcell", "]"}]}], "}"}], "]"}]}]}], ";", 
     "\n", "\t", 
     RowBox[{"NetInitialize", "@", 
      RowBox[{"NetGraph", "@", 
       RowBox[{"FunctionLayer", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Module", "[", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"original", ",", " ", "remastered"}], "}"}], ",", 
            "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{
             RowBox[{"original", "=", 
              RowBox[{"embed", "[", "#Input", "]"}]}], ";", 
             "\[IndentingNewLine]", "\t\t\t", 
             RowBox[{"remastered", "=", 
              RowBox[{"retouch", "[", "original", "]"}]}], ";", 
             "\[IndentingNewLine]", "\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"remastered", "=", 
                RowBox[{"retouch", "[", "remastered", "]"}]}], ",", " ", 
               RowBox[{"nblocks", "-", "1"}]}], "]"}], ";", 
             "\[IndentingNewLine]", "\t\t\t", 
             RowBox[{
              RowBox[{"SoftmaxLayer", "[", "]"}], "/@", 
              RowBox[{
               RowBox[{"LinearLayer", "[", "]"}], "/@", "remastered"}]}]}]}], 
           "\[IndentingNewLine]", "\t\t", "]"}], "&"}], ",", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"\"\<Input\>\"", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"\"\<Varying\>\"", ",", " ", 
            RowBox[{"NetEncoder", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<Class\>\"", ",", " ", "vocabulary"}], "}"}], 
             "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"\"\<Output\>\"", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"\"\<Varying\>\"", ",", " ", 
            RowBox[{"NetDecoder", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<Class\>\"", ",", " ", "vocabulary"}], "}"}], 
             "]"}]}], "}"}]}]}], "\[IndentingNewLine]", "\t", "]"}]}]}]}]}], 
   "\n", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"decoder", "[", 
  RowBox[{"128", ",", "128", ",", "4", ",", "3", ",", "vocabulary"}], 
  "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.879621169545888*^9, 3.879621201041953*^9}, {
   3.879621452743608*^9, 3.8796214529728613`*^9}, {3.8796244803849573`*^9, 
   3.8796244860847*^9}, {3.879624586952291*^9, 3.879624590850595*^9}, {
   3.879624638844589*^9, 3.879624639671133*^9}, {3.880563228664559*^9, 
   3.880563229286063*^9}, 3.9129631963169413`*^9, 3.9130479606615353`*^9, {
   3.913048733501527*^9, 3.913048733767293*^9}, {3.913049163904375*^9, 
   3.913049185452477*^9}, {3.913049226349841*^9, 3.9130492303843803`*^9}, {
   3.913049353137699*^9, 3.9130493539692297`*^9}, {3.913049448782836*^9, 
   3.913049453744227*^9}, {3.913049585657097*^9, 3.9130495865674047`*^9}, {
   3.91304990271537*^9, 3.913049905012611*^9}, {3.9130500748097754`*^9, 
   3.913050092343804*^9}, {3.913051333360771*^9, 3.913051335117559*^9}, {
   3.913052343882001*^9, 3.913052399637658*^9}, {3.913052856451161*^9, 
   3.913052882556882*^9}, {3.9130532012757807`*^9, 3.913053207686101*^9}, {
   3.91305337396944*^9, 3.9130533798272467`*^9}, {3.913053414966395*^9, 
   3.913053536167704*^9}, {3.9130536876929007`*^9, 3.913053767723534*^9}, {
   3.913053800416007*^9, 3.9130539183193493`*^9}, {3.913053951227483*^9, 
   3.91305406671973*^9}, {3.9130541195039797`*^9, 3.913054133005926*^9}, {
   3.9130541672332897`*^9, 3.913054215606867*^9}, {3.913054800124213*^9, 
   3.913054800312737*^9}, {3.913054839775908*^9, 3.9130548671213713`*^9}, {
   3.913061148481539*^9, 3.9130611780615797`*^9}, {3.913061237767231*^9, 
   3.913061244448043*^9}, {3.913068545274433*^9, 3.913068546073793*^9}, {
   3.913068652772431*^9, 3.913068657474471*^9}, {3.913070128416733*^9, 
   3.913070155834959*^9}, 3.913072565289199*^9, {3.9139351305431843`*^9, 
   3.913935150703795*^9}, {3.913940753653853*^9, 3.913940761002666*^9}, {
   3.9139770411804247`*^9, 3.913977057917832*^9}, {3.9139771372386827`*^9, 
   3.913977149573428*^9}, {3.9148769056162853`*^9, 3.9148769223759327`*^9}, {
   3.914876957336379*^9, 3.914876990723133*^9}, {3.914877023832274*^9, 
   3.9148771270200663`*^9}, {3.91487733650315*^9, 3.9148773714589977`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"f639f689-192f-4f6a-98a8-037f8151eaa8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.0149], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.8270000000000001, 0.41200000000000003`, 0.133]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.647, 0.259, 0.08600000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" classes\""}, "RowDefault"], "SummaryItem"], 
                    "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" classes\""}, "RowDefault"], "SummaryItem"], 
                    "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.0149], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.8270000000000001, 0.41200000000000003`, 0.133]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.647, 0.259, 0.08600000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetGraph`selection = None}, 
                    GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"original$\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{0, -15.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"remastere..\"", "\"remastered$\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "remastered$", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{0, -15.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"output\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -15.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"remastere..\"", "\"remastered$2\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "remastered$2", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{0, -15.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"remastere..\"", "\"remastered$3\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "remastered$3", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    TraditionalForm], 
                    
                    Offset[{1.473719336601482*^-7, 
                    5.499999999999999}, {-5.4499999999999975`, 
                    1.4603218880869225`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117856`*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-4.449999999999998, 
                    1.192372917795744*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"27713\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.679489702911785*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-3.449999999999999, 
                    9.244239475045655*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.679489702911785*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.679489702911785*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-4.999999999999998, 
                    1.339744851455892*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "27713", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 27713, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999999999998, 
                    1.339744851455892*^-7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]27713\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]27713\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.4499999999999975`, 
                    1.4603218880869225`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117862`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "27713", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 27713, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.449999999999998, 
                    1.192372917795744*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]27713\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]27713\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999999999999, 
                    9.244239475045655*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999999999993`, 
                    3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5.999999999999998, 1.6076938217470707`*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{-12.5, -12.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{12.5, 12.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"#\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-4.999999999999998, 
                    1.339744851455892*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"original$\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["original$", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{-12.5, -12.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{12.5, 12.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-3.9999999999999987`, 1.0717958811647137`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"remastered$\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["remastered$", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"output\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["output", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    Offset[{10.5, 10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-2.999999999999999, 8.038469108735353*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"remastered$2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["remastered$2", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-1.9999999999999993`, 5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"remastered$3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["remastered$3", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-4.999999999999998, 
                    1.339744851455892*^-7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {0., 0.}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 25, 25, 8, 25, 25}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {387.9999999999999, 48.500007368596684`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.499998526280663`, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" classes\""}, "RowDefault"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" classes\""}, "RowDefault"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "original$" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (
                    Module[{$CellContext`emb1$, $CellContext`emb2$, \
$CellContext`posembed$}, $CellContext`emb1$ = EmbeddingLayer[128][
                    Slot["Input"]]; $CellContext`posembed$ = 
                    SequenceIndicesLayer[2^6][
                    Slot["Input"]]; $CellContext`emb2$ = 
                    EmbeddingLayer[
                    128][$CellContext`posembed$]; $CellContext`emb1$ + \
$CellContext`emb2$]& ), "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"emb1$" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{27713, 128}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "ClassCount" -> 27713, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771]}, "$OutputDimension" -> 
                    128|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed$" -> <|"Type" -> "SequenceIndices", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Maximum" -> 64, "$Length" -> 
                    NeuralNetworks`LengthVar[960845771]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771]}, 
                    NeuralNetworks`IndexIntegerT[1, 64]]|>|>, 
                    "emb2$" -> <|"Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 128}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "ClassCount" -> 64, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771]}, "$OutputDimension" -> 
                    128|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771]}, 
                    NeuralNetworks`IndexIntegerT[1, 64]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "output" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"emb1$" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT], "emb2$" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "emb1$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "emb1$"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "emb1$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "emb2$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "emb2$"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "emb2$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Outputs", "Output"]}|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "remastered$" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), "Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[4][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    4][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    4][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = SoftmaxLayer[
                    1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{4, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {4}, 
                    "$OutputSize" -> 4, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/1" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[# #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 4}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 4}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{4}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{4}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    "$StatsDimensions" -> {4}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "\[Omega]QK$" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 4}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 4, 
                    "$InputDimensions" -> {4}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771], "$InputShape" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "State"] -> NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "remastered$2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[4][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    4][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    4][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = SoftmaxLayer[
                    1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{4, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {4}, 
                    "$OutputSize" -> 4, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/1" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[# #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 4}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 4}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{4}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{4}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    "$StatsDimensions" -> {4}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "\[Omega]QK$" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 4}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 4, 
                    "$InputDimensions" -> {4}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771], "$InputShape" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "State"] -> NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "remastered$3" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[4][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    4][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    4][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = SoftmaxLayer[
                    1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{4, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {4}, 
                    "$OutputSize" -> 4, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/1" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[# #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 4}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 4}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{4}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{4}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    "$StatsDimensions" -> {4}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "\[Omega]QK$" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 4}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 4, 
                    "$InputDimensions" -> {4}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771], "$InputShape" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 4}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "State"] -> NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "output" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{27713, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    27713}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {27713}, "$OutputSize" -> 27713, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{27713},
                     NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 27713}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{27713},
                     NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[960845771], "$InputShape" -> 
                    NeuralNetworks`TensorT[{27713}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 27713}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 27713}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771], 27713}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771]}, <|
                    "Form" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]], "Type" -> 
                    "Class", "Labels" -> {"\"!\"", "\"-\"", 
                    Skeleton[27710], "\"$End\""}, "OutputForm" -> "Index", 
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 
                    27713, "$Version" -> "13.3.0"|>]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[960845771]}, <|
                    "Form" -> NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"!\"", "\"-\"", 
                    Skeleton[27710], "\"$End\""}, "InputDepth" -> 1, 
                    "Multilabel" -> False, "Dimensions" -> 27713, "$Rank" -> 
                    0, "$Version" -> "13.3.0"|>]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "original$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "original$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "original$"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$"], 
                    NeuralNetworks`NetPath["Nodes", "output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$2"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$3"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "original$"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$"], 
                    NeuralNetworks`NetPath["Nodes", "output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$2"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$3"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Initialization :> {NetGraph}], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetGraph, 33166112, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetGraph, 33166112, 
            6104534209124383545585913424668049603549493723096986342600, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<5>, <6>]"& )],
  False,
  BoxID -> 6104534209124383545585913424668049603549493723096986342600,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.914879718597855*^9, 3.916355088265027*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"cc107849-ebde-40bf-a60d-21dd8850a912"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["End-to-End ", "Subsection",
 FontFamily->"Roboto Condensed",
 FontSize->18,
 FontWeight->"Regular",
 FontColor->GrayLevel[0],
 Background->RGBColor[0.87, 0.94, 1]]], "Section",
 CellChangeTimes->{
  3.880423177022493*^9, {3.88042321039396*^9, 3.880423227134089*^9}, {
   3.880473094101377*^9, 3.880473129143107*^9}, 3.895596984849799*^9, {
   3.8955975299546947`*^9, 3.895597535612864*^9}, {3.9129636382999563`*^9, 
   3.9129636744888906`*^9}},ExpressionUUID->"43c0c6ce-16d5-49c2-b1f8-\
13f4d8d0ad02"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"end2end", ",", " ", "initialState"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"embdims", "=", 
   RowBox[{"2", "^", "7"}]}], ";", " ", 
  RowBox[{"celldims", "=", 
   RowBox[{"2", "^", "7"}]}], ";", " ", 
  RowBox[{"nstates", "=", 
   RowBox[{"2", "^", "4"}]}], ";", 
  RowBox[{"ncells", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"end2end", "=", 
  RowBox[{"decoder", "[", 
   RowBox[{
   "embdims", ",", "celldims", ",", "nstates", ",", "ncells", ",", " ", 
    "vocabulary"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"initialState", "=", 
  RowBox[{"NetGraph", "@", 
   RowBox[{"FunctionLayer", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"encode", ",", "decode", ",", "most", ",", "rest"}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"most", "=", 
          RowBox[{"Most", "[", "#Input", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"rest", "=", 
          RowBox[{"Rest", "[", "#Input", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"decode", "=", 
          RowBox[{"end2end", "[", "most", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"CrossEntropyLossLayer", "[", "\"\<Index\>\"", "]"}], "[", 
          RowBox[{"{", 
           RowBox[{"decode", ",", "rest"}], "}"}], "]"}]}]}], "]"}], "&"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<Varying\>\"", ",", " ", 
        RowBox[{"NetEncoder", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Class\>\"", ",", " ", "vocabulary"}], "}"}], "]"}]}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.895805896413797*^9, 3.895806028167791*^9}, {
   3.895806073123509*^9, 3.895806114083589*^9}, {3.895806421266006*^9, 
   3.8958064224583187`*^9}, {3.895813696014958*^9, 3.895813697201374*^9}, 
   3.8958137277728653`*^9, {3.895813778662785*^9, 3.895813811317058*^9}, 
   3.895813853976165*^9, {3.89583324520194*^9, 3.895833252397044*^9}, {
   3.895833680019177*^9, 3.895833680528241*^9}, {3.895833761219975*^9, 
   3.89583376908316*^9}, {3.8958338496415*^9, 3.89583385473844*^9}, {
   3.895836060831609*^9, 3.8958360753905067`*^9}, {3.895836130099814*^9, 
   3.895836130566539*^9}, 3.895836166552895*^9, {3.895836216221918*^9, 
   3.895836254319923*^9}, {3.895836509662065*^9, 3.895836573086825*^9}, {
   3.895838823040113*^9, 3.895838823422309*^9}, {3.8958390677564297`*^9, 
   3.8958391004928503`*^9}, {3.895839421030368*^9, 3.895839472948518*^9}, {
   3.8958396811028*^9, 3.8958397640331984`*^9}, 3.912963201254279*^9, {
   3.913047944743329*^9, 3.913047957713868*^9}, {3.913935335272019*^9, 
   3.913935372564303*^9}, {3.9139354203245993`*^9, 3.9139354515308857`*^9}, {
   3.913940715723003*^9, 3.913940737291383*^9}, {3.913940779242482*^9, 
   3.913940781383621*^9}, {3.913977175066367*^9, 3.9139772202667017`*^9}, {
   3.913977355996435*^9, 3.913977356543475*^9}, {3.9143255559422083`*^9, 
   3.914325557162015*^9}, {3.914421497796632*^9, 3.9144214987973747`*^9}, {
   3.9148784411217957`*^9, 3.914878462886422*^9}, {3.914878699269657*^9, 
   3.914878699901342*^9}, {3.914879424342866*^9, 3.914879424812612*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"be2afe7b-d930-4875-93de-deb90712c369"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.0149], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.8270000000000001, 0.41200000000000003`, 0.133]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.647, 0.259, 0.08600000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" classes\""}, "RowDefault"], "SummaryItem"], 
                    "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" classes\""}, "RowDefault"], "SummaryItem"], 
                    "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.0149], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.8270000000000001, 0.41200000000000003`, 0.133]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.647, 0.259, 0.08600000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetGraph`selection = None}, 
                    GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-6.999999999999997, 
                    1.875642792038249*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"original$\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{0, -15.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"remastere..\"", "\"remastered$\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "remastered$", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{0, -15.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"output\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -15.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"remastere..\"", "\"remastered$2\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "remastered$2", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{0, -15.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"remastere..\"", "\"remastered$3\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "remastered$3", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{0, -15.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"remastere..\"", "\"remastered$4\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "remastered$4", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    TraditionalForm], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-6.4499999999999975`, 
                    1.728270858378101*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117852`*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.473719336601482*^-7, 
                    5.499999999999999}, {-5.4499999999999975`, 
                    1.4603218880869225`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117856`*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"27713\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.679489702911785*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-4.449999999999998, 
                    1.192372917795744*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-3.449999999999999, 
                    9.244239475045655*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.679489702911785*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.679489702911785*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.999999999999997, 
                    1.875642792038249*^-7}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "27713", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 27713, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-4.999999999999998, 
                    1.339744851455892*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]27713\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]27713\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999999999998, 
                    1.339744851455892*^-7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.4499999999999975`, 
                    1.728270858378101*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "27713", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 27713, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.4499999999999975`, 
                    1.4603218880869225`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117862`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]27713\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]27713\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.449999999999998, 
                    1.192372917795744*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999999999999, 
                    9.244239475045655*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999999999993`, 
                    3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.999999999999997, 1.875642792038249*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{-12.5, -12.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{12.5, 12.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"#\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-5.999999999999998, 
                    1.6076938217470707`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"original$\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["original$", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{-12.5, -12.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{12.5, 12.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-4.999999999999998, 1.339744851455892*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"remastered$\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["remastered$", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"output\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["output", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{-12.5, -12.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{12.5, 12.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-3.9999999999999987`, 1.0717958811647137`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"remastered$2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["remastered$2", Bold], 
                    Style[NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-2.999999999999999, 8.038469108735353*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"remastered$3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["remastered$3", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    Offset[{10.5, 10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-1.9999999999999993`, 5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"remastered$4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["remastered$4", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-6.999999999999997, 
                    1.875642792038249*^-7}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-4.999999999999998, 
                    1.339744851455892*^-7}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {0., 0.}, {-3.9999999999999987`,
                     1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 25, 25, 8, 25, 25, 25}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {442.99999999999983`, 48.50000884231602}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.499998526280663`, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" classes\""}, "RowDefault"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" classes\""}, "RowDefault"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "original$" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (
                    Module[{$CellContext`emb1$, $CellContext`emb2$, \
$CellContext`posembed$}, $CellContext`emb1$ = EmbeddingLayer[128][
                    Slot["Input"]]; $CellContext`posembed$ = 
                    SequenceIndicesLayer[2^6][
                    Slot["Input"]]; $CellContext`emb2$ = 
                    EmbeddingLayer[
                    128][$CellContext`posembed$]; $CellContext`emb1$ + \
$CellContext`emb2$]& ), "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"emb1$" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{27713, 128}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "ClassCount" -> 27713, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926]}, "$OutputDimension" -> 
                    128|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed$" -> <|"Type" -> "SequenceIndices", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Maximum" -> 64, "$Length" -> 
                    NeuralNetworks`LengthVar[2029010926]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926]}, 
                    NeuralNetworks`IndexIntegerT[1, 64]]|>|>, 
                    "emb2$" -> <|"Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 128}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "ClassCount" -> 64, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926]}, "$OutputDimension" -> 
                    128|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926]}, 
                    NeuralNetworks`IndexIntegerT[1, 64]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "output" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"emb1$" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT], "emb2$" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "emb1$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "emb1$"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "emb1$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "emb2$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "emb2$"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "emb2$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Outputs", "Output"]}|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "remastered$" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[16][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    16][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    16][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = SoftmaxLayer[
                    1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {16}, 
                    "$OutputSize" -> 16, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/1" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[# #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 16}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    "$StatsDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "\[Omega]QK$" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 16}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 16, 
                    "$InputDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "State"] -> NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "remastered$2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[16][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    16][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    16][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = SoftmaxLayer[
                    1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {16}, 
                    "$OutputSize" -> 16, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/1" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[# #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 16}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    "$StatsDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "\[Omega]QK$" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 16}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 16, 
                    "$InputDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "State"] -> NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "remastered$3" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[16][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    16][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    16][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = SoftmaxLayer[
                    1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {16}, 
                    "$OutputSize" -> 16, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/1" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[# #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 16}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    "$StatsDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "\[Omega]QK$" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 16}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 16, 
                    "$InputDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "State"] -> NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "remastered$4" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[16][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    16][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    16][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = SoftmaxLayer[
                    1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {16}, 
                    "$OutputSize" -> 16, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/1" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[# #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 16}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    "$StatsDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "\[Omega]QK$" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 16}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 16, 
                    "$InputDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "State"] -> NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), "Net" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "output" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{27713, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    27713}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {27713}, "$OutputSize" -> 27713, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{27713},
                     NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 27713}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{27713},
                     NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2029010926], "$InputShape" -> 
                    NeuralNetworks`TensorT[{27713}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 27713}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 27713}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926], 27713}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926]}, <|
                    "Form" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]], "Type" -> 
                    "Class", "Labels" -> {"\"!\"", "\"-\"", 
                    Skeleton[27710], "\"$End\""}, "OutputForm" -> "Index", 
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 
                    27713, "$Version" -> "13.3.0"|>]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2029010926]}, <|
                    "Form" -> NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"!\"", "\"-\"", 
                    Skeleton[27710], "\"$End\""}, "InputDepth" -> 1, 
                    "Multilabel" -> False, "Dimensions" -> 27713, "$Rank" -> 
                    0, "$Version" -> "13.3.0"|>]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "original$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "original$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "original$"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$"], 
                    NeuralNetworks`NetPath["Nodes", "output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$2"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$3"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$4"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "original$"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$"], 
                    NeuralNetworks`NetPath["Nodes", "output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$2"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$3"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$4"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Initialization :> {NetGraph}], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetGraph, 33951304, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetGraph, 33951304, 
            6104534209124383545585913424668049603567940467178356052592, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<6>, <7>]"& )],
  False,
  BoxID -> 6104534209124383545585913424668049603567940467178356052592,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9148797229363747`*^9, 3.9163550925418787`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"afb6c992-2bad-4361-b178-a7098391188e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {16., {0., 16.}}], Appearance -> None, 
                   BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True),
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.0149], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.8270000000000001, 0.41200000000000003`, 0.133]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.647, 0.259, 0.08600000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], "\" classes\""}, "RowDefault"], 
                    "SummaryItem"], "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"real\"", "SummaryItem"], "SummaryItem"]}}, 
                  AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
             GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"], 
                    ImageSizeCache -> {16., {0., 16.}}], Appearance -> None, 
                   BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.0149], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.8270000000000001, 0.41200000000000003`, 0.133]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.647, 0.259, 0.08600000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetGraph`selection = 4}, 
                    GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    
                    Offset[{0, -7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"most\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -13.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"rest\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -13.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"decode\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -15.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"output\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -13.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, 
                    StripOnInput -> False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", StripOnInput -> False, FontSize -> 7]], 
                    StripOnInput -> False, FontSlant -> Italic], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-3.4499999852628056`, 
                    0.5500000924423946}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", StripOnInput -> False, FontSize -> 7]], 
                    StripOnInput -> False, FontSlant -> Italic], 
                    
                    Offset[{1.4737193366014847`*^-7, 
                    5.499999999999999}, {-2.9111111111111105`, 
                    7.800292246254306*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.6794897029117902`*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"2\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], "\"27713\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.8890874007337035`, 
                    3.889087192318317}, {-1.4499999879422958`, 
                    0.4500000388526005}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396939, -0.7071068001334007}], 
                    InsetBox[
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"2\"", StripOnInput -> False, FontSize -> 7]], 
                    StripOnInput -> False, FontSlant -> Italic], 
                    
                    Offset[{1.4737193332337029`*^-7, 
                    5.499999999999999}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.679489702911785*^-8}], 
                    InsetBox[
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"2\"", StripOnInput -> False, FontSize -> 7]], 
                    StripOnInput -> False, FontSlant -> Italic], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.679489702911785*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "27713", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style[
                    Subscript["n", 
                    Style["1", 7]], Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 27713, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQ/fc/CPAfSEqScgw+WmMXeP7G0dfz+Q8kq+8S/5hX
Y7feQ7Jilyn/AWXGJ/Ll/DV2ojkHxXIO8h1Y8H565NNl1XbNlhcXMjjzHbjx
6eoRa9Nqu18bQBp4D5zjmpdYtavKrvqSeu0ldd4DTeYf9BeaVdmxzMs7y9/N
c+BDxRn9DSsr7aYJy3IZPOE+IHveKHG5cKWdoTEIcB9gs1I+0lZSYXcepL2W
64Dv+hv2ty6U2xXKHAcizgPTVPp26+qW2wkIggDngfsznc0bO8vs1rFGb2CN
5jigxv9z05WnpXZ+v5b4/1rCfiCvZZ2ehlOp3TswYDuw7Wfyqup5JXa9jy36
HluwHfibJ6l2/lexne6NJiBiPeD25NxCpfBiuzNgwHKgN7JFtmxzkV3qm0df
z0uzHCg7UtIQKlJk9zNxotGHEuYDi6Rub/SpK7RrBhvAdEAoZvvG6I8Fdkz+
25+1uzIdONLB2dCUW2BXeUwv7v8exgOljostm57m272YbPdysh3jgWfu8gL6
TPl2viDlpxgO3Fdpb+Y2zLNbbaBuJZLAcCDuxq3J4kW5dpD4+r8fEl85dgC9
w9Ws
                    "]], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "27713", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style[
                    Subscript["n", 
                    Style["1", 7]], Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 27713, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"2\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]27713\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style[
                    Subscript["n", 
                    Style["2", 7]], Italic], 
                    "\[Times]27713\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"2\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "27713", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style[
                    Subscript["n", 
                    Style["2", 7]], Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 27713, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"2\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "27713", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style[
                    Subscript["n", 
                    Style["2", 7]], Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 27713, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4499999852628056`,
                     0.5500000924423946}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948965`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "27713", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style[
                    Subscript["n", 
                    Style["1", 7]], Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 27713, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.9111111111111105`,
                     7.800292246254306*^-8}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888857, -2.381768624810472*^-9}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "27713", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style[
                    Subscript["n", 
                    Style["1", 7]], Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 27713, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999879422958`,
                     0.4500000388526005}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051027, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"2\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], 
                    "\"\[Times]27713\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style[
                    Subscript["n", 
                    Style["2", 7]], Italic], 
                    "\[Times]27713\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999732051023`,
                     1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"2\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "27713", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style[
                    Subscript["n", 
                    Style["2", 7]], Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 27713, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999999999993`,
                     3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"2\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "27713", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style[
                    Subscript["n", 
                    Style["2", 7]], Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 27713, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999999999987`, 1.0717958811647137`*^-7}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"Most\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.33], FrontFaceColor -> GrayLevel[0.33], 
                    BackFaceColor -> GrayLevel[0.33], GraphicsColor -> 
                    GrayLevel[0.33], FontSize -> 9, FontWeight -> Bold, 
                    FontColor -> GrayLevel[0.33]], {-2.999999973205102, 
                    1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"most\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "SequenceMostLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["most", Bold], 
                    Style[SequenceMostLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"Rest\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.33], FrontFaceColor -> GrayLevel[0.33], 
                    BackFaceColor -> GrayLevel[0.33], GraphicsColor -> 
                    GrayLevel[0.33], FontSize -> 9, FontWeight -> Bold, 
                    FontColor -> GrayLevel[0.33]], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"rest\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "SequenceRestLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["rest", Bold], 
                    Style[
                    SequenceRestLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], {
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]]]}, 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]]], 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-1.9999999732051024`, 1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"decode\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["decode", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    RGBColor[0.584, 0.51, 0.839]], 
                    FaceForm[
                    RGBColor[
                    0.7226666666666666, 0.6733333333333333, 
                    0.8926666666666666]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"CE\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.33], FrontFaceColor -> GrayLevel[0.33], 
                    BackFaceColor -> GrayLevel[0.33], GraphicsColor -> 
                    GrayLevel[0.33], FontSize -> 10, FontWeight -> Bold, 
                    FontColor -> GrayLevel[0.33]], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"output\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CrossEntropyLossLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["output", Bold], 
                    Style[
                    CrossEntropyLossLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 21, 25, 21, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{29., 29.}, {29., 19.}}, 
                    ImageSize -> {277.9999999999999, 103.000004421158}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Port"}], FontWeight -> Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox[
                    SubscriptBox["\"n\"", 
                    StyleBox["\"1\"", 7, StripOnInput -> False]], Italic, 
                    StripOnInput -> False], "\" classes\""}, "RowDefault"], 
                    "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "most" -> <|"Type" -> "SequenceMost", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "$Length" -> NeuralNetworks`LengthVar[2061137858], 
                    "$Shape" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[2109227208]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2061137858]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>|>, 
                    "rest" -> <|"Type" -> "SequenceRest", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "$Length" -> NeuralNetworks`LengthVar[2061137858], 
                    "$Shape" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]], "$OutputLength" -> 
                    NeuralNetworks`LengthVar[2109227208]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2061137858]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>|>, 
                    "decode" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 27713}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"original$" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`emb1$, $CellContext`emb2$, \
$CellContext`posembed$}, $CellContext`emb1$ = EmbeddingLayer[128][
                    Slot["Input"]]; $CellContext`posembed$ = 
                    SequenceIndicesLayer[2^6][
                    Slot["Input"]]; $CellContext`emb2$ = 
                    EmbeddingLayer[
                    128][$CellContext`posembed$]; $CellContext`emb1$ + \
$CellContext`emb2$]& ), "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"emb1$" -> <|"Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{27713, 128}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "ClassCount" -> 27713, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208]}, "$OutputDimension" -> 
                    128|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed$" -> <|"Type" -> "SequenceIndices", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Maximum" -> 64, "$Length" -> NeuralNetworks`LengthVar[
                    2109227208]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208]}, 
                    NeuralNetworks`IndexIntegerT[1, 64]]|>|>, 
                    "emb2$" -> <|"Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 128}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "ClassCount" -> 64, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208]}, "$OutputDimension" -> 
                    128|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208]}, 
                    NeuralNetworks`IndexIntegerT[1, 64]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "output" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"emb1$" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT], "emb2$" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "emb1$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "posembed$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "emb1$"] -> NeuralNetworks`NetPath[
                    "Nodes", "emb1$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "emb2$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "posembed$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "emb2$"] -> NeuralNetworks`NetPath[
                    "Nodes", "emb2$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "remastered$" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Function", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> (Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[16][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    16][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    16][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = 
                    SoftmaxLayer[1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{16, 128}],
                     "Biases" -> None|>, "Parameters" -> <|
                    "OutputDimensions" -> {16}, "$OutputSize" -> 16, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>, "WQxWKx$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>, "WQxWKx$/2" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 16}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    "$StatsDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>, "\[Omega]QK$" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 16}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 16, 
                    "$InputDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "seq\[Zeta]$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Inputs", "State"] -> 
                    NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|"OutputDimensions" -> {512}, 
                    "$OutputSize" -> 512, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 512, 
                    "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "remastered$2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Function", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> (Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[16][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    16][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    16][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = 
                    SoftmaxLayer[1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{16, 128}],
                     "Biases" -> None|>, "Parameters" -> <|
                    "OutputDimensions" -> {16}, "$OutputSize" -> 16, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>, "WQxWKx$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>, "WQxWKx$/2" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 16}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    "$StatsDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>, "\[Omega]QK$" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 16}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 16, 
                    "$InputDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "seq\[Zeta]$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Inputs", "State"] -> 
                    NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|"OutputDimensions" -> {512}, 
                    "$OutputSize" -> 512, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 512, 
                    "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "remastered$3" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Function", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> (Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[16][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    16][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    16][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = 
                    SoftmaxLayer[1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{16, 128}],
                     "Biases" -> None|>, "Parameters" -> <|
                    "OutputDimensions" -> {16}, "$OutputSize" -> 16, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>, "WQxWKx$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>, "WQxWKx$/2" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 16}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    "$StatsDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>, "\[Omega]QK$" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 16}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 16, 
                    "$InputDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "seq\[Zeta]$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Inputs", "State"] -> 
                    NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|"OutputDimensions" -> {512}, 
                    "$OutputSize" -> 512, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 512, 
                    "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    "$StatsDimensions" -> {128}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "remastered$4" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Function", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> (Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    "$StatsDimensions" -> {128}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[16][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    16][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    16][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = 
                    SoftmaxLayer[1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{16, 128}],
                     "Biases" -> None|>, "Parameters" -> <|
                    "OutputDimensions" -> {16}, "$OutputSize" -> 16, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>, "WQxWKx$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>, "WQxWKx$/2" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 16}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    "$StatsDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>|>, "\[Omega]QK$" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 16}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 16, 
                    "$InputDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "seq\[Zeta]$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Inputs", "State"] -> 
                    NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|"OutputDimensions" -> {512}, 
                    "$OutputSize" -> 512, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 512, 
                    "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "output" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{27713, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{27713}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {27713}, 
                    "$OutputSize" -> 27713, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 27713}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2109227208], "$InputShape" -> 
                    NeuralNetworks`TensorT[{27713}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 27713}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 27713}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 27713}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "original$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "original$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{"remastered$", 3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$", "Nodes", "3", "States", 
                    "State"], {"remastered$2", 3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$2", "Nodes", "3", "States", 
                    "State"], {"remastered$3", 3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$3", "Nodes", "3", "States", 
                    "State"], {"remastered$4", 3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$4", "Nodes", "3", "States", 
                    "State"]|>|>, 
                    "output" -> <|"Type" -> "CrossEntropyLoss", 
                    "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Index", "$InputDimensions" -> {
                    NeuralNetworks`LengthVar[2109227208]}, "$Classes" -> 
                    27713, "$IntegerType" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208], 27713}, 
                    NeuralNetworks`RealT], "Target" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2109227208]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2061137858]}, <|
                    "Form" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]], "Type" -> 
                    "Class", "Labels" -> {"\"!\"", "\"-\"", 
                    Skeleton[27710], "\"$End\""}, "OutputForm" -> "Index", 
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 
                    27713, "$Version" -> "13.3.0"|>]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "most", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "rest", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "decode", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "most", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "rest", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "decode", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "most"], 
                    NeuralNetworks`NetPath["Nodes", "rest"], 
                    NeuralNetworks`NetPath["Nodes", "decode"], 
                    NeuralNetworks`NetPath["Nodes", "output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "most"], 
                    NeuralNetworks`NetPath["Nodes", "rest"], 
                    NeuralNetworks`NetPath["Nodes", "decode"], 
                    NeuralNetworks`NetPath["Nodes", "output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], ImageSizeCache -> {664., {250., 259.}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Initialization :> {NetGraph}], "SummaryItem"]}}, 
                  AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetGraph, 32773648, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetGraph, 32773648, 
            6104534209124383545585913424668049603586387211252065103512, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<4>, <6>]"& )],
  False,
  BoxID -> 6104534209124383545585913424668049603586387211252065103512,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9148797229363747`*^9, 3.916355095655705*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"591515fa-9aeb-442c-a1ff-47f4e86213e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Train", "Subsection",
 FontFamily->"Roboto Condensed",
 FontSize->18,
 FontWeight->"Regular",
 FontColor->GrayLevel[0],
 Background->RGBColor[0.87, 0.94, 1]]], "Subsection",
 CellChangeTimes->{{3.89602347352009*^9, 3.89602350280305*^9}, {
  3.913936757402444*^9, 
  3.913936758598607*^9}},ExpressionUUID->"26e19b99-b3a6-4efc-bf23-\
8aef3ee708c1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "trainee", "]"}], "\[IndentingNewLine]", 
 RowBox[{"trainee", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"initialState", ",", "linesOfShakespeare", ",", "All", ",", 
    RowBox[{"MaxTrainingRounds", "->", "1"}], ",", 
    RowBox[{"ValidationSet", "\[Rule]", 
     RowBox[{"Scaled", "[", "0.1", "]"}]}], ",", 
    RowBox[{"BatchSize", "->", "16"}], ",", " ", 
    RowBox[{"LearningRate", "->", "0.001"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.895979450801187*^9, 3.895979453638467*^9}, {
   3.895979550950405*^9, 3.8959795895158463`*^9}, {3.895979647194166*^9, 
   3.895979659653261*^9}, {3.8959799005839148`*^9, 3.895979900877777*^9}, {
   3.8959799342230988`*^9, 3.89597993909698*^9}, {3.895980712385914*^9, 
   3.895980727703322*^9}, {3.895980865294407*^9, 3.8959809146605453`*^9}, {
   3.8959809743583927`*^9, 3.895980992582501*^9}, {3.89598122395278*^9, 
   3.895981237345049*^9}, {3.895981509397026*^9, 3.895981515090027*^9}, 
   3.895981730812623*^9, {3.895981934683167*^9, 3.895981940752179*^9}, {
   3.895981993647319*^9, 3.895981996189446*^9}, 3.895982028936953*^9, {
   3.896022617945847*^9, 3.896022619927268*^9}, {3.8960226651075993`*^9, 
   3.896022694504342*^9}, {3.896022726548781*^9, 3.896022752447585*^9}, {
   3.8960227836722403`*^9, 3.8960229029573517`*^9}, {3.896023172655136*^9, 
   3.896023203316626*^9}, {3.896023234490204*^9, 3.896023249745925*^9}, {
   3.896023301713188*^9, 3.8960233215882*^9}, {3.896023357782022*^9, 
   3.896023366974002*^9}, 3.912963208244361*^9, 3.912963372270709*^9, 
   3.912963718950818*^9, {3.913936785405595*^9, 3.913936806416994*^9}, {
   3.91393687124571*^9, 3.91393688261559*^9}, {3.913940464482156*^9, 
   3.91394046487674*^9}, {3.913940809552672*^9, 3.913940840585628*^9}, 
   3.913940980262898*^9, {3.913978452234255*^9, 3.913978454932356*^9}, {
   3.914002703154387*^9, 3.914002743448694*^9}, {3.91409997895152*^9, 
   3.9140999805812817`*^9}, {3.914101577090136*^9, 3.914101577345811*^9}, {
   3.9141054708975763`*^9, 3.9141054721659937`*^9}, {3.914105583228044*^9, 
   3.91410558362145*^9}, {3.914325571108398*^9, 3.914325590348091*^9}, {
   3.914433487128737*^9, 3.914433494323188*^9}, {3.9148785092940807`*^9, 
   3.914878510724477*^9}, {3.914878568528418*^9, 3.914878569852015*^9}, 
   3.9148786261984253`*^9, {3.914878711435685*^9, 3.9148787200350733`*^9}, {
   3.914879784818946*^9, 3.9148797864893703`*^9}, {3.91635511114785*^9, 
   3.916355120948019*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"637a17ff-eefa-49ab-b765-b990ab5fb0b6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   TagBox["NetTrainResultsObject",
    "SummaryHead"], "NonInterpretableSummary"], 
  StyleBox["[", "NonInterpretableSummary"], 
  FrameBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
         StripOnInput->False,
         FontSize->12],
        FrameMargins->{{10, 5}, {-4, 2}},
        FrameStyle->None,
        StripOnInput->False],
       Alignment->{Left, Bottom},
       Background->RGBColor[0.96, 0.96, 0.96],
       Frame->{{False, False}, {True, False}},
       FrameStyle->Opacity[0.1],
       ItemSize->{Automatic, 1},
       StripOnInput->False]},
     {
      ItemBox[
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["summary"], 
                 TextCell["summary"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batches:"], 
                  TextCell["batches:"]], "24"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["rounds:"], 
                  TextCell["rounds:"]], "0"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["time:"], 
                  TextCell["time:"]], 
                 InterpretationBox[
                  Cell["15s"], 
                  TextCell["15s"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["examples/s:"], 
                  TextCell["examples/s:"]], 
                 TagBox[
                  InterpretationBox[
                   StyleBox["\"27.\"", ShowStringCharacters -> False], 
                   27.04672765938534, AutoDelete -> True], 
                  NumberForm[#, 2]& ]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["data"], 
                 TextCell["data"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["training examples:"], 
                  TextCell["training examples:"]], "97888"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["validation examples:"], 
                  TextCell["validation examples:"]], "10880"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["processed examples:"], 
                  TextCell["processed examples:"]], "384"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["skipped examples:"], 
                  TextCell["skipped examples:"]], "0"}, "RowWithSeparators"]},
              
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["method"], 
                 TextCell["method"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["ADAM"], 
                  TextCell["ADAM"]], 
                 InterpretationBox[
                  Cell["optimizer"], 
                  TextCell["optimizer"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batch size"], 
                  TextCell["batch size"]], "16"}, "RowWithSeparators"], 
               InterpretationBox[
                Cell["CPU"], 
                TextCell["CPU"]]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["round"], 
                 TextCell["round"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell[" \[LongDash] "], 
                  TextCell[" \[LongDash] "]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell[" \[LongDash] "], 
                  TextCell[" \[LongDash] "]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["validation"], 
                 TextCell["validation"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell[" \[LongDash] "], 
                  TextCell[" \[LongDash] "]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell[" \[LongDash] "], 
                  TextCell[" \[LongDash] "]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             ItemBox[
              
              DynamicModuleBox[{NeuralNetworks`Private`NetTrain`index$$ = 1, 
               NeuralNetworks`Private`NetTrain`plotList$$ = {
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQbXHxyuuuHFV78eMdxv45H+whfFN7I9HbaybnvLV/
Nee+QYagg31GSN+ZxtuvofKu9jN2tbSvZ35t38Z6atna4172j0+8vrKi8TVU
fYD9CgHWxC2zX9kLmkf1/dwXZL9+181Dht2voPpD7V1fb/5WdfyVfXy2v6eM
VIT9t9UHvoS9eQU1L8r+/qrgS1uqX9uvne/CYl8aa59T5a1kc+wl1PwE+10t
Bbx6v1/a/3sJEki0DxYUP2RW+dJeCGxfkn20RfW9TTtf2qu0iNseEk2x72rT
Zjqv9hJqf6q93tTy3Xs4X9r7yE2aFXw4zd421nvLrPcv7BPA7smw/1FUvuyF
/Uv7oh08P54UZNqzF+94JxTyEuq+LPt16e9/F/G/tJ8V1B5aJpdjf1dgqcqM
Vy/s14Hdm2t/bure2s4/L+wPvGHczH4mz35xwJF7smEvoO4vsFeZu3s9U+4L
ewA4WcBz
                    "]]}, {
                    AbsolutePointSize[3.2796610169491522`], 
                    Hue[0.083, 1., 0.76], 
                    Point[CompressedData["
1:eJxTTMoPSmViYGCQAGIQbXHxyuuuHFV78eMdxv45H+whfFN7I9HbaybnvLV/
Nee+QYagg31GSN+ZxtuvofKu9jN2tbSvZ35t38Z6atna4172j0+8vrKi8TVU
fYD9CgHWxC2zX9kLmkf1/dwXZL9+181Dht2voPpD7V1fb/5WdfyVfXy2v6eM
VIT9t9UHvoS9eQU1L8r+/qrgS1uqX9uvne/CYl8aa59T5a1kc+wl1PwE+10t
Bbx6v1/a/3sJEki0DxYUP2RW+dJeCGxfkn20RfW9TTtf2qu0iNseEk2x72rT
Zjqv9hJqf6q93tTy3Xs4X9r7yE2aFXw4zd421nvLrPcv7BPA7smw/1FUvuyF
/Uv7oh08P54UZNqzF+94JxTyEuq+LPt16e9/F/G/tJ8V1B5aJpdjf1dgqcqM
Vy/s14Hdm2t/bure2s4/L+wPvGHczH4mz35xwJF7smEvoO4vsFeZu3s9U+4L
ewA4WcBz
                    "]]}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[{}]}, {
                    AbsolutePointSize[4.5], 
                    Hue[0.59, 0.7, 0.65], 
                    Point[{}]}}}, Prolog -> {{
                    Text[5, 
                    Offset[{-2, -2}, {0.0008172605426610003, 1.512}], {1., 
                    1.}], 
                    Text[10, 
                    Offset[{-2, -2}, {0.0016345210853220007`, 1.512}], {1., 
                    1.}], 
                    Text[15, 
                    Offset[{-2, -2}, {0.0024517816279830008`, 1.512}], {1., 
                    1.}], 
                    Text[20, 
                    Offset[{-2, -2}, {0.0032690421706440013`, 1.512}], {1., 
                    1.}], 
                    Text[25, 
                    Offset[{-2, -2}, {0.004086302713305002, 1.512}], {1., 
                    1.}], 
                    Text[30, 
                    Offset[{-2, -2}, {0.0049035632559660015`, 1.512}], {1., 
                    1.}]}, {
                    Text["10", 
                    Offset[{3, 0}, {0, 1.}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 0.004004576659038902}, {
                    0.28800000000000003`, 1.512}}, ImageSize -> {302, 182.}, 
                  GridLines -> {{0.0008172605426610003, 
                    0.0016345210853220007`, 0.0024517816279830008`, 
                    0.0032690421706440013`, 0.004086302713305002, 
                    0.0049035632559660015`}, {{0., 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}, {0.30102999566398114`, 
                    GrayLevel[0.8501]}, {0.47712125471966244`, 
                    GrayLevel[0.8501]}, {0.6020599913279623, 
                    GrayLevel[0.8501]}, {0.6989700043360187, 
                    GrayLevel[0.8501]}, {0.7781512503836435, 
                    GrayLevel[0.8501]}, {0.8450980400142567, 
                    GrayLevel[0.8501]}, {0.9030899869919434, 
                    GrayLevel[0.8501]}, {0.9542425094393249, 
                    GrayLevel[0.8501]}, {1.301029995663981, 
                    GrayLevel[0.8501]}, {1.4771212547196624`, 
                    GrayLevel[0.8501]}, {1.6020599913279623`, 
                    GrayLevel[0.8501]}, {1.6989700043360185`, 
                    GrayLevel[0.8501]}, {1.7781512503836434`, 
                    GrayLevel[0.8501]}, {1.845098040014257, 
                    GrayLevel[0.8501]}, {1.9030899869919433`, 
                    GrayLevel[0.8501]}, {1.9542425094393248`, 
                    GrayLevel[0.8501]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "loss", "batches"}], 
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQbXHxyuuuHFV7BjD4YA/hm4L4ZWscHtu/mnPfIEPQ
AcyXOf4YKu8K4pssNnps38Z6atna414gPldr1hOo+gCIeQmP7QXNo/p+7gsC
8bPCJZ9A9YeC+Bfe2D2xj8/295SRigDxVxhpPYWaFwXip6Ute2G/dr4Li31p
LIj/4O5cmHsSQPxdwtZP7P+9BAkkgvhxUbse2wuB7UsC8evmqT+3V2kRtz0k
mgLi/7Dhfwa1PxXETwoNfWzvIzdpVvDhNBB/mkrnM/sEsHsyQPyi9vjH9kU7
eH48KcgE8WOehDyBui8LxP8gdeqx/ayg9tAyuRwQ3+wG4xP7dWD35oL4Qk80
n9ofeMO4mf1MHohvpasLc38BiP8JpB8AH8aRNQ==
                    "]]}, {
                    AbsolutePointSize[3.2796610169491522`], 
                    Hue[0.083, 1., 0.76], 
                    Point[CompressedData["
1:eJxTTMoPSmViYGCQAGIQbXHxyuuuHFV7BjD4YA/hm4L4ZWscHtu/mnPfIEPQ
AcyXOf4YKu8K4pssNnps38Z6atna414gPldr1hOo+gCIeQmP7QXNo/p+7gsC
8bPCJZ9A9YeC+Bfe2D2xj8/295SRigDxVxhpPYWaFwXip6Ute2G/dr4Li31p
LIj/4O5cmHsSQPxdwtZP7P+9BAkkgvhxUbse2wuB7UsC8evmqT+3V2kRtz0k
mgLi/7Dhfwa1PxXETwoNfWzvIzdpVvDhNBB/mkrnM/sEsHsyQPyi9vjH9kU7
eH48KcgE8WOehDyBui8LxP8gdeqx/ayg9tAyuRwQ3+wG4xP7dWD35oL4Qk80
n9ofeMO4mf1MHohvpasLc38BiP8JpB8AH8aRNQ==
                    "]]}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[{}]}, {
                    AbsolutePointSize[4.5], 
                    Hue[0.59, 0.7, 0.65], 
                    Point[{}]}}}, Prolog -> {{
                    Text[5, 
                    Offset[{-2, -2}, {0.0008172605426610003, 1.01}], {1., 
                    1.}], 
                    Text[10, 
                    Offset[{-2, -2}, {0.0016345210853220007`, 1.01}], {1., 
                    1.}], 
                    Text[15, 
                    Offset[{-2, -2}, {0.0024517816279830008`, 1.01}], {1., 
                    1.}], 
                    Text[20, 
                    Offset[{-2, -2}, {0.0032690421706440013`, 1.01}], {1., 
                    1.}], 
                    Text[25, 
                    Offset[{-2, -2}, {0.004086302713305002, 1.01}], {1., 1.}], 
                    Text[30, 
                    Offset[{-2, -2}, {0.0049035632559660015`, 1.01}], {1., 
                    1.}]}, {
                    Text[
                    PercentForm[0.], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    Text[
                    PercentForm[0.25], 
                    Offset[{3, 0}, {0, 0.25}], {-1, -1.}], 
                    Text[
                    PercentForm[0.5], 
                    Offset[{3, 0}, {0, 0.5}], {-1, -1.}], 
                    Text[
                    PercentForm[0.75], 
                    Offset[{3, 0}, {0, 0.75}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 0.004004576659038902}, {-0.01, 1.01}}, 
                  ImageSize -> {302, 182.}, 
                  GridLines -> {{0.0008172605426610003, 
                    0.0016345210853220007`, 0.0024517816279830008`, 
                    0.0032690421706440013`, 0.004086302713305002, 
                    0.0049035632559660015`}, {{0., 
                    GrayLevel[0.8501]}, {0.05, 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.15, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.25, 
                    GrayLevel[0.8501]}, {0.25, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.35, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.45, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.55, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.65, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.75, 
                    GrayLevel[0.8501]}, {0.75, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.85, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {0.95, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.3001]}, {0.25, 
                    GrayLevel[0.3001]}, {0.5, 
                    GrayLevel[0.3001]}, {0.75, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "error rate", "batches"}]}}, 
               TagBox[GridBox[{
                  {
                   DynamicBox[ToBoxes[
                    Grid[{{
                    Button[
                    MouseAppearance[
                    Style["\:2039", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ - 1, 2, 1], 
                    Appearance -> None], 
                    Dynamic[
                    Part[{
                    Tooltip["loss", 
                    Column[{
                    Row[{"Measurement: ", "loss"}]}]], 
                    Tooltip["error rate", 
                    Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}]]}, 
                    NeuralNetworks`Private`NetTrain`index$$], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetTrain`index$$}], 
                    Button[
                    MouseAppearance[
                    Style["\:203a", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ + 1, 2, 1], 
                    Appearance -> None]}}, ItemSize -> {{3, 20, 3}, {2}}, 
                    Alignment -> Center], StandardForm],
                    ImageSizeCache->{372., {11.37255859375, 20.62744140625}},
                    
                    TrackedSymbols:>{
                    NeuralNetworks`Private`NetTrain`index$$}]},
                  {
                   DynamicBox[ToBoxes[
                    Part[
                    NeuralNetworks`Private`NetTrain`plotList$$, 
                    NeuralNetworks`Private`NetTrain`index$$], StandardForm],
                    ImageSizeCache->{469., {142., 149.}},
                    TrackedSymbols:>{NeuralNetworks`Private`NetTrain`index$$}]}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Center}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               DynamicModuleValues:>{}],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"},
            {
             ItemBox[
              StyleBox[
               RowBox[{
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.083, 1., 1.],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.59, 0.7, 0.75],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
               FontFamily->"Verdana",
               FontSize->8,
               FontColor->GrayLevel[0.4]],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           ColumnsEqual->False,
           
           GridBoxAlignment->{
            "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {False, {
                Opacity[0.15]}, False}},
           GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], 
               Offset[1.1199999999999999`], {
                Offset[1.75]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.8]}, 
               Offset[0.2]}}],
          "Grid"],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       Alignment->Center,
       BaseStyle->{
        FontWeight -> "Light", FontSize -> 11, FontFamily -> 
         ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
       StripOnInput->False]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], 
        Offset[0.8], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Background->GrayLevel[1],
   FrameMargins->{{0, 0}, {0, 0}},
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False], 
  StyleBox["]", "NonInterpretableSummary"]}]], "Output",
 CellChangeTimes->{
  3.914879781242577*^9, 3.914880837716399*^9, {3.91635511344039*^9, 
   3.916355149943735*^9}},
 CellLabel->
  "Out[106]=",ExpressionUUID->"c22d3b2c-6115-43f1-b9f0-58264614899e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Serialize/Load", "Subsection",
 FontFamily->"Roboto Condensed",
 FontSize->18,
 FontWeight->"Regular",
 FontColor->GrayLevel[0],
 Background->RGBColor[0.87, 0.94, 1]]], "Subsubsection",
 CellChangeTimes->{{3.89602297192625*^9, 3.896023006813472*^9}, {
  3.896023073935807*^9, 3.896023087165821*^9}, {3.91398190136771*^9, 
  3.913981904095861*^9}},ExpressionUUID->"ff85480d-73df-4625-8933-\
b8c2c7a4c52c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainedState", "=", 
   RowBox[{"NetExtract", "[", 
    RowBox[{
     RowBox[{"trainee", "[", "\"\<TrainedNet\>\"", "]"}], ",", " ", 
     "\"\<decode\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "savePath", "=", 
   "\"\</Users/kinjeketileii/Library/Mobile \
Documents/com~apple~CloudDocs/2024//models/checkpoints/trainedState.wxf\>\""}]\
, ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"savePath", ",", " ", "trainedState"}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.895980239233251*^9, 3.8959802608707333`*^9}, {
   3.89598220187624*^9, 3.895982280033374*^9}, 3.895982337112919*^9, {
   3.896020440655829*^9, 3.896020444426649*^9}, {3.896022592531855*^9, 
   3.8960225929257917`*^9}, 3.896022657883915*^9, 3.8960227056616907`*^9, {
   3.8960227670449657`*^9, 3.8960227878068447`*^9}, {3.896022865569487*^9, 
   3.896022950589938*^9}, {3.8960255053967247`*^9, 3.8960255087503242`*^9}, {
   3.8960255413744373`*^9, 3.8960255571795187`*^9}, {3.8960257756616*^9, 
   3.896025787799617*^9}, {3.89602582501528*^9, 3.896025851877796*^9}, {
   3.896025902106536*^9, 3.896025925683592*^9}, {3.896026040868046*^9, 
   3.896026127534322*^9}, {3.8960261597363243`*^9, 3.896026236140194*^9}, {
   3.896026328392085*^9, 3.896026349677759*^9}, 3.913940478379491*^9, 
   3.913977559724371*^9, 3.913978229359784*^9, 3.913978479233878*^9, {
   3.913981906227457*^9, 3.913982039217331*^9}, {3.913982076709091*^9, 
   3.913982094947239*^9}, {3.914101409967052*^9, 3.9141014694772367`*^9}, {
   3.914101583399102*^9, 3.9141015837049017`*^9}, {3.914326410415905*^9, 
   3.9143264117172747`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"ea04fcec-96f1-4f50-9066-f90abb4b4369"],

Cell[BoxData[
 TemplateBox[{
  "Export", "nodir", 
   "\"Directory \
\\!\\(\\*RowBox[{\\\"\\\\\\\"/Users/kinjeketileii/Library/Mobile \
Documents/com~apple~CloudDocs/2024/models/checkpoints/\\\\\\\"\\\"}]\\) does \
not exist.\"", 2, 109, 11, 17939613693067783818, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.916355155313814*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"bdc82b04-2624-4e75-af9c-5d6a3faf11d5"],

Cell[BoxData[
 TemplateBox[{
  "Export", "noopen", 
   "\"Cannot open \
\\!\\(\\*RowBox[{\\\"\\\\\\\"/Users/kinjeketileii/Library/Mobile \
Documents/com~apple~CloudDocs/2024//models/checkpoints/trainedState.wxf\\\\\\\
\"\\\"}]\\).\"", 2, 109, 12, 17939613693067783818, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.916355155344206*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"3d9998c6-4b9d-4a66-be59-203b24bd4f58"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Initial \[DoubleStruckCapitalG]", "Subsection",
 FontFamily->"Roboto Condensed",
 FontSize->18,
 FontWeight->"Regular",
 FontColor->GrayLevel[0],
 Background->RGBColor[0.87, 0.94, 1]]], "Subsection",
 CellChangeTimes->{{3.896026600617025*^9, 3.896026609142679*^9}, {
  3.896028084464921*^9, 
  3.896028099357071*^9}},ExpressionUUID->"cc7beea3-1782-4d9e-88eb-\
ebced75ae910"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8960250295749197`*^9, 3.896025077589629*^9}, {
   3.8960251097639523`*^9, 3.896025111038463*^9}, 3.896025871675469*^9, {
   3.896026016175457*^9, 3.896026019761221*^9}, {3.896026434636199*^9, 
   3.896026449054386*^9}, {3.896028011769182*^9, 3.89602804480652*^9}, {
   3.896028115054401*^9, 3.8960281379164133`*^9}, {3.912963242235689*^9, 
   3.9129632428528337`*^9}, 3.9139404824891443`*^9, {3.9139823705200977`*^9, 
   3.913982380404114*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"1403f181-012a-419f-895e-fe56543b7575"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Create end-to-end decoder", "Subsection",
 FontFamily->"Roboto Condensed",
 FontSize->18,
 FontWeight->"Regular",
 FontColor->GrayLevel[0],
 Background->RGBColor[0.87, 0.94, 1]]], "Subsection",
 CellChangeTimes->{
  3.895810527453076*^9, {3.8958122388065557`*^9, 3.895812242399831*^9}, {
   3.913933032218905*^9, 
   3.913933071269535*^9}},ExpressionUUID->"40776c19-713b-41c7-b739-\
75ee5d360b3e"],

Cell[BoxData[""], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.895810882361063*^9, 3.895810883907654*^9}, {
   3.895812284281363*^9, 3.895812308506257*^9}, {3.895833143465311*^9, 
   3.8958331525845613`*^9}, {3.8958401267028513`*^9, 3.895840145482224*^9}, {
   3.895844077582616*^9, 3.895844104659017*^9}, {3.895852486357707*^9, 
   3.895852561524413*^9}, {3.895852596924987*^9, 3.895852598040661*^9}, {
   3.8958572013253937`*^9, 3.895857216501877*^9}, {3.895857531300006*^9, 
   3.895857536578548*^9}, {3.895866953902128*^9, 3.8958669576323557`*^9}, 
   3.895924239615264*^9, {3.895924510330551*^9, 3.8959245346042757`*^9}, {
   3.895925115722781*^9, 3.895925122811982*^9}, {3.895963032265315*^9, 
   3.8959630989558163`*^9}, 3.91296327120369*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"6b1986cb-2ec0-4f7b-b273-9c728ce4d291"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8959563221107817`*^9, 3.8959564208367558`*^9}, {
   3.8959565978844233`*^9, 3.895956628519829*^9}, {3.8959566741569557`*^9, 
   3.8959566746048822`*^9}, {3.895962737203269*^9, 3.895962738459333*^9}, {
   3.895962888720502*^9, 3.895962911702496*^9}, {3.895962962468425*^9, 
   3.895962962893936*^9}, {3.895963646195156*^9, 3.8959636583671227`*^9}, {
   3.8960278950361977`*^9, 3.896027933988227*^9}, 
   3.912963284860486*^9},ExpressionUUID->"b34b8491-c7b0-4219-b4bf-\
6f6b7853e1d9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Resume ...", "Subsection",
 CellChangeTimes->{{3.8959641629005423`*^9, 
  3.895964193935705*^9}},ExpressionUUID->"5a7f7d9c-8bce-43a5-ad4b-\
2fce560ead21"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"trainedState", " ", "=", " ", 
    RowBox[{"Import", "[", "savePath", "]"}]}], ";"}], "*)"}]], "Code",
 CellChangeTimes->{{3.8872722543155785`*^9, 3.887272276256177*^9}, {
   3.901506160034227*^9, 3.901506168744577*^9}, {3.901506706747534*^9, 
   3.901506830187303*^9}, {3.9015068885412188`*^9, 3.90150692002241*^9}, 
   3.9115143321486673`*^9, {3.911914507483261*^9, 3.9119145078788557`*^9}, {
   3.913930768470592*^9, 3.913930773194211*^9}, {3.913930821707738*^9, 
   3.9139308597583027`*^9}, {3.9139309924030123`*^9, 
   3.9139310058543873`*^9}, {3.913931041564168*^9, 3.9139310601682673`*^9}, {
   3.913931103431323*^9, 3.913931105382573*^9}, {3.913931137347364*^9, 
   3.913931137746825*^9}, {3.913931339176506*^9, 3.913931442183873*^9}, 
   3.9139314775065613`*^9, {3.913931551737471*^9, 3.913931579698855*^9}, {
   3.913931693444166*^9, 3.913931704256607*^9}, {3.9139317397680597`*^9, 
   3.913932140305894*^9}, {3.9139321714148493`*^9, 3.913932182752859*^9}, {
   3.91393222166826*^9, 3.9139322316169453`*^9}, {3.913932270034088*^9, 
   3.9139324581008577`*^9}, {3.913933079565104*^9, 3.913933080101186*^9}, 
   3.913935127433998*^9, {3.913982340066793*^9, 3.913982359102586*^9}, 
   3.91432645325638*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"37cc532f-2315-4662-9d19-d3647be7c2bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predictor", "=", 
  RowBox[{"NetReplacePart", "[", 
   RowBox[{"trainedState", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<output\>\"", ",", "1"}], "}"}], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SequenceLastLayer", "[", "]"}], ",", 
         RowBox[{"NetExtract", "[", 
          RowBox[{"trainedState", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<output\>\"", ",", "1", ",", "\"\<Net\>\""}], "}"}]}],
           "]"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<output\>\"", ",", "2"}], "}"}], "->", 
       RowBox[{"NetExtract", "[", 
        RowBox[{"trainedState", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<output\>\"", ",", "2", ",", "\"\<Net\>\""}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"\"\<Input\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Varying\>\"", ",", 
         RowBox[{"NetEncoder", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Class\>\"", ",", "vocabulary"}], "}"}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"\"\<Output\>\"", "->", 
       RowBox[{"NetDecoder", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Class\>\"", ",", "vocabulary"}], "}"}], "]"}]}]}], 
     "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.913981861849894*^9, 3.913981870555822*^9}, {
  3.913982130648364*^9, 3.913982173450982*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"8f03473a-46a4-4681-92b5-337af9868f28"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {16., {0., 16.}}], Appearance -> None, 
                   BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True),
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.0149], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.8270000000000001, 0.41200000000000003`, 0.133]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.647, 0.259, 0.08600000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" classes\""}, "RowDefault"], "SummaryItem"], 
                    "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"class\"", "SummaryItem"], "SummaryItem"]}}, 
                  AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
             GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"], 
                    ImageSizeCache -> {16., {0., 16.}}], Appearance -> None, 
                   BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.0149], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.8270000000000001, 0.41200000000000003`, 0.133]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.647, 0.259, 0.08600000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetGraph`selection = 4}, 
                    GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    
                    Offset[{0, -7}, {-6.999999999999997, 
                    1.875642792038249*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"original$\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{0, -15.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"remastere..\"", "\"remastered$\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "remastered$", "Tooltip"]& ], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{0, -15.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"output\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -15.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"remastere..\"", "\"remastered$2\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "remastered$2", "Tooltip"]& ], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{0, -15.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"remastere..\"", "\"remastered$3\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "remastered$3", "Tooltip"]& ], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{0, -15.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"remastere..\"", "\"remastered$4\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "remastered$4", "Tooltip"]& ], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, 
                    StripOnInput -> False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    StyleBox[
                    "\"n\"", StripOnInput -> False, FontSlant -> Italic], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-6.4499999999999975`, 
                    1.728270858378101*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117852`*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], 
                    
                    Offset[{1.473719336601482*^-7, 
                    5.499999999999999}, {-5.4499999999999975`, 
                    1.4603218880869225`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117856`*^-8}], 
                    InsetBox["\"27713\"", 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.679489702911785*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-4.449999999999998, 
                    1.192372917795744*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-3.449999999999999, 
                    9.244239475045655*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.679489702911785*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"128\""}, "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999999, -2.679489702911785*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.999999999999997, 
                    1.875642792038249*^-7}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "27713", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 27713, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-4.999999999999998, 
                    1.339744851455892*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 27713\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 27713\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999999999998, 
                    1.339744851455892*^-7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-6.4499999999999975`,
                     1.728270858378101*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "27713", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " indices ", 
                    Style[
                    
                    Row[{"(\[VeryThinSpace]range: ", 1, "..", 27713, 
                    "\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-5.4499999999999975`,
                     1.4603218880869225`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117862`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 27713\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 27713\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.449999999999998, 
                    1.192372917795744*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.449999999999999, 
                    9.244239475045655*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999999999993`,
                     6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999999999993`,
                     3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]128\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], "\[Times]128\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.999999999999997, 1.875642792038249*^-7}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], {
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{-12.5, -12.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{12.5, 12.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]]]}, 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]]], 
                    InsetBox[
                    StyleBox[
                    "\"#\"", StripOnInput -> False, FontSize -> 12, 
                    FontWeight -> Bold], {-5.999999999999998, 
                    1.6076938217470707`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"original$\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["original$", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], {
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{-12.5, -12.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{12.5, 12.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]]]}, 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]]], 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-4.999999999999998, 1.339744851455892*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"remastered$\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["remastered$", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], {
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]]}, 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]], 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"output\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["output", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], {
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{-12.5, -12.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{12.5, 12.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]]]}, 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]]], 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-3.9999999999999987`, 1.0717958811647137`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"remastered$2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["remastered$2", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], {
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]]}, 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]], 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-2.999999999999999, 8.038469108735353*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"remastered$3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["remastered$3", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], {
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]], 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-1.9999999999999993`, 5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"remastered$4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["remastered$4", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-6.999999999999997, 
                    1.875642792038249*^-7}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-4.999999999999998, 
                    1.339744851455892*^-7}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {0., 0.}, {-3.9999999999999987`,
                     1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 25, 25, 8, 25, 25, 25}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{29., 29.}, {29.499998526280663`, 19.}}, 
                    ImageSize -> {442.99999999999983`, 48.50000884231602}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Port"}], FontWeight -> Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" classes\""}, "RowDefault"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "original$" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (
                    Module[{$CellContext`emb1$, $CellContext`emb2$, \
$CellContext`posembed$}, $CellContext`emb1$ = EmbeddingLayer[128][
                    Slot["Input"]]; $CellContext`posembed$ = 
                    SequenceIndicesLayer[2^6][
                    Slot["Input"]]; $CellContext`emb2$ = 
                    EmbeddingLayer[
                    128][$CellContext`posembed$]; $CellContext`emb1$ + \
$CellContext`emb2$]& ), "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"emb1$" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{27713, 128}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "ClassCount" -> 27713, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242]}, "$OutputDimension" -> 
                    128|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed$" -> <|"Type" -> "SequenceIndices", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Maximum" -> 64, "$Length" -> 
                    NeuralNetworks`LengthVar[807277242]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242]}, 
                    NeuralNetworks`IndexIntegerT[1, 64]]|>|>, 
                    "emb2$" -> <|"Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 128}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "ClassCount" -> 64, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242]}, "$OutputDimension" -> 
                    128|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242]}, 
                    NeuralNetworks`IndexIntegerT[1, 64]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "output" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"emb1$" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT], "emb2$" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "emb1$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "emb1$"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "emb1$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "emb2$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "emb2$"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "emb2$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Outputs", "Output"]}|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242]}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "remastered$" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[16][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    16][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    16][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = SoftmaxLayer[
                    1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {16}, 
                    "$OutputSize" -> 16, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/1" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[# #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 16}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    "$StatsDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "\[Omega]QK$" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 16}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 16, 
                    "$InputDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "State"] -> NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "remastered$2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[16][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    16][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    16][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = SoftmaxLayer[
                    1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {16}, 
                    "$OutputSize" -> 16, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/1" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[# #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 16}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    "$StatsDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "\[Omega]QK$" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 16}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 16, 
                    "$InputDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "State"] -> NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), "Net" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "remastered$3" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[16][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    16][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    16][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = SoftmaxLayer[
                    1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {16}, 
                    "$OutputSize" -> 16, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/1" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[# #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 16}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    "$StatsDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "\[Omega]QK$" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 16}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 16, 
                    "$InputDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "State"] -> NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "remastered$4" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`xWQ$, $CellContext`xWK$, \
$CellContext`WQxWKx$, $CellContext`\[Omega]QK$, \
$CellContext`softmax\[Omega]QK$}, $CellContext`xWQ$ = \
$CellContext`linearNetMap[16][
                    Slot[
                    "Input"]]; $CellContext`xWK$ = $CellContext`linearNetMap[
                    16][
                    Slot[
                    "Input"]]; $CellContext`WQxWKx$ = $CellContext`scaling8r[
                    16][$CellContext`xWQ$ $CellContext`xWQ$]; $CellContext`\
\[Omega]QK$ = $CellContext`linearNetMap[
                    128][$CellContext`WQxWKx$]; \
$CellContext`softmax\[Omega]QK$ = SoftmaxLayer[
                    1][-$CellContext`\[Omega]QK$]]& ), 
                    "Net" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"xWQ$" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {16}, 
                    "$OutputSize" -> 16, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/1" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[# #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 16}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "WQxWKx$/2" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 16}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{16}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{16}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    "$StatsDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>|>, 
                    "\[Omega]QK$" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 16}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 16, 
                    "$InputDimensions" -> {16}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 16}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Minus], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "softmax\[Omega]QK$/2" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "xWQ$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "WQxWKx$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "\[Omega]QK$", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "WQxWKx$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/1", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "\[Omega]QK$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Inputs", "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "softmax\[Omega]QK$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "softmax\[Omega]QK$/2", 
                    "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "NetFold", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`propg8seq$, $CellContext`seqlen$, \
$CellContext`seq\[Zeta]$}, $CellContext`seqlen$ = Log[
                    Length[
                    Slot[
                    "Input"]]]; $CellContext`seq\[Zeta]$ = $CellContext`mlp[
                    128][
                    Slot["Input"]]; $CellContext`propg8seq$ = 
                    Slot["softmax\[Omega]QK"] Slot["State"] + (1 - Slot[
                    "softmax\[Omega]QK"]) $CellContext`seq\[Zeta]$; \
$CellContext`seqlen$ $CellContext`propg8seq$]& ), 
                    "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "seq\[Zeta]$" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128}], "Biases" -> 
                    None|>, "Parameters" -> <|"OutputDimensions" -> {128}, 
                    "$OutputSize" -> 128, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "seqlen$/1" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Length, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>|>, 
                    "seqlen$/2" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Log], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[128, 128]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "propg8seq$" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# #2 + #3 
                    Subtract[1, #]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT], "seq\[Zeta]$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "output" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seqlen$" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "propg8seq$" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/1", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "softmax\[Omega]QK"] -> NeuralNetworks`NetPath[
                    "Inputs", "softmax\[Omega]QK"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "State"] -> NeuralNetworks`NetPath["Inputs", "State"], 
                    NeuralNetworks`NetPath["Nodes", "propg8seq$", "Inputs", 
                    "seq\[Zeta]$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seq\[Zeta]$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "seqlen$/2", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "seqlen$"] -> NeuralNetworks`NetPath[
                    "Nodes", "seqlen$/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "output", "Inputs", 
                    "propg8seq$"] -> NeuralNetworks`NetPath[
                    "Nodes", "propg8seq$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "output", "Outputs", 
                    "Output"]}|>|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "State" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>|>, "Recurrence" -> 
                    NeuralNetworks`ValidatedParameter[{"Output" -> "State"}], 
                    "ConstantPorts" -> {}, "OutputPorts" -> {"Output"}, 
                    "$InputNames" -> {"Input", "softmax\[Omega]QK"}, 
                    "$StateNames" -> {"State"}, "$OutputNames" -> {"Output"}, 
                    "$ForceStateRank" -> False, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT], "softmax\[Omega]QK" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "States" -> <|"State" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, Identity[
                    Slot["Input1"]] + Identity[
                    Slot["Input2"]]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT], "Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (
                    Module[{$CellContext`pseudocos$}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    128}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    512}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "GaussianErrorLinearUnit"], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 
                    512}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    128}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[807277242], "$InputShape" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"seq$3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    $CellContext`scaling8r[128][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Module[{}, 
                    NormalizationLayer[
                    2, "Same", "Input" -> {"Varying", 128}, "Scaling" -> 
                    Automatic][
                    Slot["Input"]]]& ), 
                    "Net" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[2], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.001, "Unbiased" -> False, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    "$StatsDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "3", "Inputs", "softmax\[Omega]QK"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "seq$3"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, 
                    "InteriorStates" -> <|{3, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "State"]|>|>, 
                    "output" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "SequenceLast", 
                    "Arrays" -> <||>, "Parameters" -> <||>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{27713, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{27713}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {27713}, 
                    "$OutputSize" -> 27713, "$InputSize" -> 128, 
                    "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{27713},
                     NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{27713}, NeuralNetworks`RealT]|>|>,
                     "2" -> <|"Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{27713}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242], 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{27713}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[807277242]}, <|
                    "Form" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[1, 27713]], "Type" -> 
                    "Class", "Labels" -> {"\"!\"", "\"-\"", 
                    Skeleton[27710], "\"$End\""}, "OutputForm" -> "Index", 
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 
                    27713, "$Version" -> "13.3.0"|>]|>, 
                    "Outputs" -> <|
                    "Output" -> <|"Form" -> 
                    NeuralNetworks`TensorT[{27713}, NeuralNetworks`RealT], 
                    "Type" -> "Class", "Labels" -> {"\"!\"", "\"-\"", 
                    Skeleton[27710], "\"$End\""}, "InputDepth" -> 1, 
                    "Multilabel" -> False, "Dimensions" -> 27713, "$Rank" -> 
                    0, "$Version" -> "13.3.0"|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "original$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "original$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "remastered$4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "output", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "original$"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$"], 
                    NeuralNetworks`NetPath["Nodes", "output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$2"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$3"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$4"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "original$"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$"], 
                    NeuralNetworks`NetPath["Nodes", "output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$2"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$3"], 
                    NeuralNetworks`NetPath["Nodes", "remastered$4"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], ImageSizeCache -> {327., {119., 129.}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Initialization :> {NetGraph}], "SummaryItem"]}}, 
                  AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NetGraph, 33956752, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NetGraph, 33956752, 
            6104534209124383545585913424668049603604833955325768881072, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<6>, <7>]"& )],
  False,
  BoxID -> 6104534209124383545585913424668049603604833955325768881072,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.914879783601565*^9, 3.9163551674966097`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"b6e62c9c-a84c-40d5-8f7b-1a423caebf90"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"NestWhileList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{"#", ",", 
       RowBox[{"predictor", "[", "#", "]"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", "\"\<O\>\"", "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Last", "[", "#", "]"}], "!=", "\"\<$End\>\""}], "&"}], ",", 
    "1", ",", "15"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.913982188467498*^9, 3.913982188471259*^9}, {
  3.9139822556393433`*^9, 3.913982258200056*^9}, {3.9139824490912952`*^9, 
  3.913982456310129*^9}, {3.914326833688551*^9, 3.914326834382535*^9}, {
  3.9144356254467278`*^9, 3.9144358060870657`*^9}},
 CellLabel->
  "In[520]:=",ExpressionUUID->"684b020b-d788-48d3-882a-56ffe325015f"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Column", "@", 
    RowBox[{"NestWhileList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"#", ",", 
         RowBox[{"predictor", "[", 
          RowBox[{"#", ",", 
           RowBox[{"\"\<RandomSample\>\"", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<Temperature\>\"", "->", "\[Beta]"}], "}"}]}]}], 
          "]"}]}], "]"}], "&"}], ",", 
      RowBox[{"{", "\"\<O\>\"", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Last", "[", "#", "]"}], "!=", "\"\<$End\>\""}], "&"}], ",", 
      "1", ",", "37"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2.", "]"}]}], ",", " ", 
     RowBox[{"Sqrt", "[", "2.", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.913982307391141*^9, 3.9139823073942966`*^9}, {
  3.914001999249864*^9, 3.9140020477147627`*^9}, {3.9143264980532637`*^9, 
  3.914326498558051*^9}, {3.914435840865123*^9, 3.914435842627808*^9}, {
  3.9144361462208967`*^9, 3.9144362816066217`*^9}, {3.914436329956176*^9, 
  3.9144363537938833`*^9}},
 CellLabel->
  "In[543]:=",ExpressionUUID->"a0c7c2bc-458b-49de-8f2f-3ec9fbee95f8"],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"NestWhileList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{"#", ",", 
       RowBox[{"predictor", "[", 
        RowBox[{"#", ",", 
         RowBox[{"\"\<RandomSample\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Temperature\>\"", "->", "1.33"}], "}"}]}]}], "]"}]}], 
      "]"}], "&"}], ",", 
    RowBox[{"{", "\"\<O\>\"", "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Last", "[", "#", "]"}], "!=", "\"\<$End\>\""}], "&"}], ",", 
    "1", ",", "37"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.914436462053629*^9, 3.914436507854918*^9}},
 CellLabel->
  "In[569]:=",ExpressionUUID->"ecbb4a20-210b-4de0-a6c4-adcbec15af59"],

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"NestWhileList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{"#", ",", 
       RowBox[{"predictor", "[", 
        RowBox[{"#", ",", 
         RowBox[{"\"\<RandomSample\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<TopProbabilities\>\"", "->", "3"}], "}"}]}]}], 
        "]"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", "\"\<O\>\"", "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Last", "[", "#", "]"}], "!=", "\"\<$End\>\""}], "&"}], ",", 
    "1", ",", "25"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.914002107151766*^9, 3.91400212761135*^9}},
 CellLabel->
  "In[386]:=",ExpressionUUID->"e6b99733-eb7f-43c7-95e7-18ce9534231f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"upperCaseWords", "=", 
    RowBox[{"Select", "[", 
     RowBox[{"vocabulary", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"UpperCaseQ", "[", 
         RowBox[{"StringTake", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "]"}], "&&", " ", 
        RowBox[{"LowerCaseQ", "[", 
         RowBox[{"StringDrop", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "]"}]}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", "upperCaseWords"}], "\[IndentingNewLine]", 
 RowBox[{"RandomSample", "[", 
  RowBox[{"upperCaseWords", ",", "5"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"StringJoin", "@", 
     RowBox[{"Most", "@", 
      RowBox[{"NestWhile", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"#", ",", 
           RowBox[{"predictor", "[", 
            RowBox[{"#", ",", 
             RowBox[{"\"\<RandomSample\>\"", "->", 
              RowBox[{"{", 
               RowBox[{"\"\<Temperature\>\"", "->", ".78"}], "}"}]}]}], 
            "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"RandomSample", "[", 
         RowBox[{"upperCaseWords", ",", "1"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", "#", "]"}], "!=", "\"\<$End\>\""}], "&"}], ",",
         "33", ",", "1"}], "]"}]}]}], ",", "12"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.887245839829867*^9, 3.8872459402882633`*^9}, {
  3.887246109401835*^9, 3.8872461841033382`*^9}, {3.887246226108132*^9, 
  3.8872462339467297`*^9}, {3.9141015144480343`*^9, 3.9141015666443996`*^9}, {
  3.914102254260301*^9, 3.9141023311591263`*^9}, {3.914105226934309*^9, 
  3.914105234264422*^9}, {3.914106781679522*^9, 3.91410690291015*^9}, {
  3.914412633041072*^9, 3.914412690080673*^9}, {3.914436540173582*^9, 
  3.914436722728948*^9}, {3.914880898001775*^9, 3.914880941878675*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"21c42820-91ad-45c3-88c7-1ec6b256973c"],

Cell[BoxData["6735"], "Output",
 CellChangeTimes->{{3.914880890119273*^9, 3.914880943244136*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"01c925f5-f19b-44ab-96e2-0a1eabcbd20b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Ancient\"\>", ",", "\<\"Faith\"\>", ",", "\<\"Wide\"\>", 
   ",", "\<\"Auvergne\"\>", ",", "\<\"Cliffords\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.914880890119273*^9, 3.9148809432451563`*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"9b422fe9-7b32-49a4-9667-fa3218dc24b4"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Corin\"\>"},
    {"\<\"Smithfield\"\>"},
    {"\<\"Tiber\"\>"},
    {"\<\"Chiefly\"\>"},
    {"\<\"Bottom\"\>"},
    {"\<\"Admits\"\>"},
    {"\<\"Infer\"\>"},
    {"\<\"Refusing\"\>"},
    {"\<\"Vexing\"\>"},
    {"\<\"Convey\"\>"},
    {"\<\"Antipodes\"\>"},
    {"\<\"Avoid\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.914880890119273*^9, 3.914880943352537*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"aa5da184-02e8-4751-9547-522d822d03b0"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.914106924547822*^9, 
  3.914412619893756*^9},ExpressionUUID->"c7ee229c-e162-47be-beed-\
2f77134b75cb"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8872459695540333`*^9, 3.887245975975584*^9}, 
   3.91410150629935*^9},ExpressionUUID->"e83517f8-c49e-4a2e-a40e-\
36018320cf57"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.887245942533224*^9, 3.887245949748784*^9}, {
  3.91410149837257*^9, 
  3.914101512608972*^9}},ExpressionUUID->"b7f9b9e0-b656-4770-91b2-\
fb1210216ba5"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8872457906157312`*^9, 3.887245790922575*^9}, 
   3.8872458281459637`*^9, {3.8872460003539877`*^9, 3.887246003851856*^9}, 
   3.887246251883482*^9, {3.887246383881667*^9, 3.887246384694253*^9}, {
   3.887246533033701*^9, 3.88724653521224*^9}, {3.887246646311913*^9, 
   3.8872467323059473`*^9}, {3.887247014872922*^9, 3.887247015103118*^9}, {
   3.914002176989657*^9, 3.914002253836276*^9}, {3.914002848496217*^9, 
   3.914002858635065*^9}, 
   3.914101494617051*^9},ExpressionUUID->"ba2e1ba9-1b15-4e09-9085-\
97d0bca0d475"],

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"lines", ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.9141051904189987`*^9, 3.914105197586667*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"378e2ad8-9fd4-4b32-8e08-d2e49e3a64c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"traineeOuroboros", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/kinjeketileii/Library/Mobile \
Documents/com~apple~CloudDocs/2024/models/checkpoints/traineeOuroboros.wxf\>\"\
", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"traineeAttn", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/kinjeketileii/Library/Mobile \
Documents/com~apple~CloudDocs/2024/models/checkpoints/traineeTransformer.wxf\>\
\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.914437451640029*^9, 3.914437468162068*^9}, {
  3.914437570052464*^9, 3.9144376345863028`*^9}},
 CellLabel->
  "In[722]:=",ExpressionUUID->"a0353a9e-ad1c-4570-99aa-057a257f1741"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"trainedState", "=", 
     RowBox[{"NetExtract", "[", 
      RowBox[{
       RowBox[{"traineeOuroboros", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
       " ", "\"\<decode\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"predictor", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"NetReplacePart", "[", 
        RowBox[{"trainedState", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<output\>\"", ",", "1"}], "}"}], "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"SequenceLastLayer", "[", "]"}], ",", 
              RowBox[{"NetExtract", "[", 
               RowBox[{"trainedState", ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<output\>\"", ",", "1", ",", "\"\<Net\>\""}], 
                 "}"}]}], "]"}]}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<output\>\"", ",", "2"}], "}"}], "->", 
            RowBox[{"NetExtract", "[", 
             RowBox[{"trainedState", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<output\>\"", ",", "2", ",", "\"\<Net\>\""}], 
               "}"}]}], "]"}]}], ",", 
           RowBox[{"\"\<Input\>\"", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<Varying\>\"", ",", 
              RowBox[{"NetEncoder", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Class\>\"", ",", "vocabulary"}], "}"}], "]"}]}], 
             "}"}]}], ",", 
           RowBox[{"\"\<Output\>\"", "->", 
            RowBox[{"NetDecoder", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<Class\>\"", ",", "vocabulary"}], "}"}], "]"}]}]}], 
          "}"}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "upperCaseWords"}], "=", 
      RowBox[{"Select", "[", 
       RowBox[{"vocabulary", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"UpperCaseQ", "[", 
           RowBox[{"StringTake", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "]"}], "&&", " ", 
          RowBox[{"LowerCaseQ", "[", 
           RowBox[{"StringDrop", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "]"}]}], "&"}]}], "]"}]}]}], 
    ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"Column", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StringJoin", "@", 
      RowBox[{"Most", "@", 
       RowBox[{"NestWhile", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{"#", ",", 
            RowBox[{"predictor", "[", 
             RowBox[{"#", ",", 
              RowBox[{"\"\<RandomSample\>\"", "->", 
               RowBox[{"{", 
                RowBox[{"\"\<Temperature\>\"", "->", ".81"}], "}"}]}]}], 
             "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"vocabulary", ",", "1"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", "#", "]"}], "!=", "\"\<$End\>\""}], "&"}], 
         ",", "1", ",", "23"}], "]"}]}]}], ",", "10"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.914437667535305*^9, 3.914437725774507*^9}, {
  3.9144377945302973`*^9, 3.914437922080221*^9}, {3.914437973643072*^9, 
  3.9144382530584993`*^9}, {3.91443841372561*^9, 3.914438417866008*^9}, {
  3.914438562770836*^9, 3.914438693873375*^9}},
 CellLabel->
  "In[810]:=",ExpressionUUID->"4d1d0b32-60cc-48c7-9107-d6eda4f5d75f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainedState", "=", 
   RowBox[{"NetExtract", "[", 
    RowBox[{
     RowBox[{"traineeAttn", "[", "\"\<TrainedNet\>\"", "]"}], ",", " ", 
     "\"\<decode\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"predictor", "=", 
   RowBox[{"NetReplacePart", "[", 
    RowBox[{"trainedState", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<output\>\"", ",", "1"}], "}"}], "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SequenceLastLayer", "[", "]"}], ",", 
          RowBox[{"NetExtract", "[", 
           RowBox[{"trainedState", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<output\>\"", ",", "1", ",", "\"\<Net\>\""}], 
             "}"}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<output\>\"", ",", "2"}], "}"}], "->", 
        RowBox[{"NetExtract", "[", 
         RowBox[{"trainedState", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<output\>\"", ",", "2", ",", "\"\<Net\>\""}], "}"}]}], 
         "]"}]}], ",", 
       RowBox[{"\"\<Input\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Varying\>\"", ",", 
          RowBox[{"NetEncoder", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<Class\>\"", ",", "vocabulary"}], "}"}], "]"}]}], 
         "}"}]}], ",", 
       RowBox[{"\"\<Output\>\"", "->", 
        RowBox[{"NetDecoder", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Class\>\"", ",", "vocabulary"}], "}"}], "]"}]}]}], 
      "}"}]}], "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"upperCaseWords", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"vocabulary", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"UpperCaseQ", "[", 
        RowBox[{"StringTake", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "]"}], "&&", " ", 
       RowBox[{"LowerCaseQ", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "]"}]}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"StringJoin", "@", 
     RowBox[{"Most", "@", 
      RowBox[{"NestWhile", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"#", ",", 
           RowBox[{"predictor", "[", 
            RowBox[{"#", ",", 
             RowBox[{"\"\<RandomSample\>\"", "->", 
              RowBox[{"{", 
               RowBox[{"\"\<Temperature\>\"", "->", 
                RowBox[{
                 RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}]}], "}"}]}]}], 
            "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"RandomSample", "[", 
         RowBox[{"upperCaseWords", ",", "1"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", "#", "]"}], "!=", "\"\<$End\>\""}], "&"}], ",",
         "1", ",", "21"}], "]"}]}]}], ",", "12"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.914437748111952*^9, 3.9144377713571873`*^9}},
 CellLabel->
  "In[728]:=",ExpressionUUID->"cf71b08b-0fd4-4edc-b0b7-8cd2932f273d"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Column", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StringJoin", "@", 
      RowBox[{"Most", "@", 
       RowBox[{"NestWhile", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{"#", ",", 
            RowBox[{"predictor", "[", 
             RowBox[{"#", ",", 
              RowBox[{"\"\<RandomSample\>\"", "->", 
               RowBox[{"{", 
                RowBox[{"\"\<Temperature\>\"", "->", 
                 RowBox[{"5", "*", 
                  RowBox[{"Sqrt", "[", "2", "]"}]}]}], "}"}]}]}], "]"}]}], 
           "]"}], "&"}], ",", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"upperCaseWords", ",", "1"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", "#", "]"}], "!=", "\"\<$End\>\""}], "&"}], 
         ",", "1", ",", "21"}], "]"}]}]}], ",", "12"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9144384826728487`*^9, 3.914438507762553*^9}, {
  3.9144385445990973`*^9, 3.914438547193317*^9}, {3.914439816785771*^9, 
  3.914439871391917*^9}},
 CellLabel->
  "In[815]:=",ExpressionUUID->"d06df01c-368a-4180-a303-d8cfc0f8e6c6"],

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"upperCaseWords", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.914438521613099*^9, 3.9144385302813053`*^9}},
 CellLabel->
  "In[783]:=",ExpressionUUID->"96726447-9dc9-4a4d-8ac8-6d80e3c1d01c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"tokseq", "=", 
     RowBox[{
      RowBox[{"RandomSample", "[", 
       RowBox[{"lines", ",", " ", "1"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Most", "@", 
        RowBox[{"Most", "@", "tokseq"}]}], ",", 
       RowBox[{"Most", "@", 
        RowBox[{"Rest", "@", "tokseq"}]}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.9152142878106194`*^9, 3.915214434035207*^9}, 
   3.9152145357140913`*^9, {3.915234226830882*^9, 3.915234270551661*^9}, {
   3.915234304027432*^9, 3.915234311885254*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"e749dbc9-8728-44f6-ae2b-e4941cf9db6e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"Look\"\>", "\<\", \"\>", "\<\"how\"\>", "\<\" \"\>", "\<\"thou\"\
\>", "\<\" \"\>", "\<\"diest\"\>", "\<\"! \"\>", "\<\"look\"\>", "\<\", \
\"\>", "\<\"how\"\>", "\<\" \"\>", "\<\"thy\"\>", "\<\" \"\>", "\<\"eye\"\>", \
"\<\" \"\>", "\<\"turns\"\>", "\<\" \"\>", "\<\"pale\"\>"},
       {"\<\", \"\>", "\<\"how\"\>", "\<\" \"\>", "\<\"thou\"\>", "\<\" \
\"\>", "\<\"diest\"\>", "\<\"! \"\>", "\<\"look\"\>", "\<\", \"\>", \
"\<\"how\"\>", "\<\" \"\>", "\<\"thy\"\>", "\<\" \"\>", "\<\"eye\"\>", "\<\" \
\"\>", "\<\"turns\"\>", "\<\" \"\>", "\<\"pale\"\>", "\<\"!\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"Into\"\>", "\<\" \"\>", "\<\"baboon\"\>", "\<\" \"\>", \
"\<\"and\"\>", "\<\" \"\>", "\<\"monkey\"\>"},
       {"\<\" \"\>", "\<\"baboon\"\>", "\<\" \"\>", "\<\"and\"\>", "\<\" \
\"\>", "\<\"monkey\"\>", "\<\".\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"Thou\"\>", "\<\" \"\>", "\<\"canst\"\>", "\<\" \"\>", "\<\"not\"\
\>", "\<\" \"\>", "\<\"speak\"\>", "\<\" \"\>", "\<\"too\"\>", "\<\" \"\>", "\
\<\"much\"\>", "\<\", \"\>", "\<\"I\"\>", "\<\" \"\>", "\<\"have\"\>", "\<\" \
\"\>"},
       {"\<\" \"\>", "\<\"canst\"\>", "\<\" \"\>", "\<\"not\"\>", "\<\" \
\"\>", "\<\"speak\"\>", "\<\" \"\>", "\<\"too\"\>", "\<\" \"\>", \
"\<\"much\"\>", "\<\", \"\>", "\<\"I\"\>", "\<\" \"\>", "\<\"have\"\>", "\<\" \
\"\>", "\<\"deserved\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"Trim\"\>", "\<\" \"\>", "\<\"sport\"\>", "\<\" \"\>", "\<\"for\"\
\>", "\<\" \"\>", "\<\"them\"\>", "\<\" \"\>", "\<\"that\"\>", "\<\" \"\>", "\
\<\"had\"\>", "\<\" \"\>", "\<\"the\"\>", "\<\" \"\>", "\<\"doing\"\>", "\<\" \
\"\>", "\<\"of\"\>", "\<\" \"\>", "\<\"it\"\>"},
       {"\<\" \"\>", "\<\"sport\"\>", "\<\" \"\>", "\<\"for\"\>", "\<\" \
\"\>", "\<\"them\"\>", "\<\" \"\>", "\<\"that\"\>", "\<\" \"\>", \
"\<\"had\"\>", "\<\" \"\>", "\<\"the\"\>", "\<\" \"\>", "\<\"doing\"\>", \
"\<\" \"\>", "\<\"of\"\>", "\<\" \"\>", "\<\"it\"\>", "\<\".\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"Who\"\>", "\<\" \"\>", "\<\"hath\"\>", "\<\" \"\>", \
"\<\"indeed\"\>", "\<\", \"\>", "\<\"most\"\>", "\<\" \"\>", "\<\"like\"\>", \
"\<\" \"\>", "\<\"a\"\>", "\<\" \"\>", "\<\"liberal\"\>", "\<\" \"\>", \
"\<\"villain\"\>"},
       {"\<\" \"\>", "\<\"hath\"\>", "\<\" \"\>", "\<\"indeed\"\>", "\<\", \"\
\>", "\<\"most\"\>", "\<\" \"\>", "\<\"like\"\>", "\<\" \"\>", "\<\"a\"\>", "\
\<\" \"\>", "\<\"liberal\"\>", "\<\" \"\>", "\<\"villain\"\>", "\<\",\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.9152342711112432`*^9, 3.915234312401517*^9, 
  3.915234363709071*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"716292b6-f0f9-44a9-9e05-d04d09520fad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"vocabulary", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"-", "10"}], ";;"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"vocabulary", "[", 
  RowBox[{"[", 
   RowBox[{";;", "170"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.915219567195387*^9, 3.915219624042178*^9}, {
  3.9152196661440477`*^9, 3.9152196735602283`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"05bde464-4096-49bc-8d27-a82326007a70"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"zir\"\>", ",", "\<\"zo\"\>", ",", "\<\"zodiac\"\>", 
   ",", "\<\"zodiacs\"\>", ",", "\<\"zone\"\>", ",", "\<\"zounds\"\>", 
   ",", "\<\"Zounds\"\>", ",", "\<\"zwaggered\"\>", ",", "\<\"$\"\>", 
   ",", "\<\"$End\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.915219572964403*^9, 3.915219624836638*^9}, {
  3.9152196696032124`*^9, 3.915219674373127*^9}},
 CellLabel->
  "Out[131]=",ExpressionUUID->"6f119f86-8077-4d91-94ad-20703f429e85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"!\"\>", ",", "\<\"-\"\>", ",", "\<\"[\"\>", ",", "\<\"]\"\>", 
   ",", "\<\".\"\>", ",", "\<\",\"\>", ",", "\<\"?\"\>", ",", "\<\"'\"\>", 
   ",", "\<\":\"\>", ",", "\<\"\\t\"\>", ",", "\<\" \"\>", ",", "\<\"!'\"\>", 
   ",", "\<\"! \"\>", ",", "\<\"--\"\>", ",", "\<\"-'\"\>", ",", "\<\"- \"\>",
    ",", "\<\"]\\t\"\>", ",", "\<\"] \"\>", ",", "\<\".'\"\>", 
   ",", "\<\".\\t\"\>", ",", "\<\". \"\>", ",", "\<\",-\"\>", 
   ",", "\<\",.\"\>", ",", "\<\",'\"\>", ",", "\<\", \"\>", ",", "\<\"?'\"\>",
    ",", "\<\"? \"\>", ",", "\<\"'!\"\>", ",", "\<\"'-\"\>", 
   ",", "\<\"',\"\>", ",", "\<\"'?\"\>", ",", "\<\"''\"\>", ",", "\<\"':\"\>",
    ",", "\<\"'\\t\"\>", ",", "\<\"' \"\>", ",", "\<\":'\"\>", 
   ",", "\<\":\\t\"\>", ",", "\<\": \"\>", ",", "\<\"\\t'\"\>", 
   ",", "\<\" (\"\>", ",", "\<\" -\"\>", ",", "\<\" [\"\>", ",", "\<\" '\"\>",
    ",", "\<\" :\"\>", ",", "\<\"  \"\>", ",", "\<\"!--\"\>", 
   ",", "\<\"!' \"\>", ",", "\<\"! '\"\>", ",", "\<\"), \"\>", 
   ",", "\<\"--,\"\>", ",", "\<\"--'\"\>", ",", "\<\"-- \"\>", 
   ",", "\<\"]\\t'\"\>", ",", "\<\"]  \"\>", ",", "\<\".--\"\>", 
   ",", "\<\"., \"\>", ",", "\<\".' \"\>", ",", "\<\". '\"\>", 
   ",", "\<\".  \"\>", ",", "\<\",--\"\>", ",", "\<\",' \"\>", 
   ",", "\<\", '\"\>", ",", "\<\", \\t\"\>", ",", "\<\",  \"\>", 
   ",", "\<\"?--\"\>", ",", "\<\"?' \"\>", ",", "\<\"? '\"\>", 
   ",", "\<\"?  \"\>", ",", "\<\"'! \"\>", ",", "\<\"'--\"\>", 
   ",", "\<\"', \"\>", ",", "\<\"'? \"\>", ",", "\<\"': \"\>", 
   ",", "\<\"' '\"\>", ",", "\<\":--\"\>", ",", "\<\":' \"\>", 
   ",", "\<\":\\t'\"\>", ",", "\<\": '\"\>", ",", "\<\":  \"\>", 
   ",", "\<\" , \"\>", ",", "\<\" ? \"\>", ",", "\<\" '?\"\>", 
   ",", "\<\" ''\"\>", ",", "\<\" ' \"\>", ",", "\<\" : \"\>", 
   ",", "\<\"  [\"\>", ",", "\<\"  '\"\>", ",", "\<\"   \"\>", 
   ",", "\<\"!--'\"\>", ",", "\<\"!-- \"\>", ",", "\<\"!'--\"\>", 
   ",", "\<\"!' '\"\>", ",", "\<\"!'  \"\>", ",", "\<\"]  '\"\>", 
   ",", "\<\"]   \"\>", ",", "\<\".--'\"\>", ",", "\<\".' '\"\>", 
   ",", "\<\",--'\"\>", ",", "\<\",-- \"\>", ",", "\<\",]  \"\>", 
   ",", "\<\",'--\"\>", ",", "\<\",' '\"\>", ",", "\<\",'  \"\>", 
   ",", "\<\", ''\"\>", ",", "\<\", ' \"\>", ",", "\<\"?--'\"\>", 
   ",", "\<\"?' '\"\>", ",", "\<\"?   \"\>", ",", "\<\"'! '\"\>", 
   ",", "\<\"'?  \"\>", ",", "\<\":--'\"\>", ",", "\<\":'--\"\>", 
   ",", "\<\":' '\"\>", ",", "\<\":'  \"\>", ",", "\<\": ' \"\>", 
   ",", "\<\"    \"\>", ",", "\<\"!'--'\"\>", ",", "\<\"]  ''\"\>", 
   ",", "\<\".'--'\"\>", ",", "\<\",. . \"\>", ",", "\<\",' ' \"\>", 
   ",", "\<\",    \"\>", ",", "\<\"?'--'\"\>", ",", "\<\":   '\"\>", 
   ",", "\<\"     \"\>", ",", "\<\"!'-- '\"\>", ",", "\<\"]     \"\>", 
   ",", "\<\"!'--  '\"\>", ",", "\<\"]      \"\>", ",", "\<\",. . . \"\>", 
   ",", "\<\"]        \"\>", ",", "\<\",        \"\>", 
   ",", "\<\"]        '\"\>", ",", "\<\"]         \"\>", 
   ",", "\<\"\\t         \"\>", ",", "\<\"]          \"\>", 
   ",", "\<\" [        ]\"\>", ",", "\<\"]           \"\>", 
   ",", "\<\" [         ]\"\>", ",", "\<\"]            \"\>", 
   ",", "\<\" [         ] \"\>", ",", "\<\"]             \"\>", 
   ",", "\<\"]              \"\>", ",", "\<\"]               \"\>", 
   ",", "\<\"]                \"\>", ",", "\<\"]                 \"\>", 
   ",", "\<\"]                  \"\>", ",", "\<\"\\t                  \"\>", 
   ",", "\<\".                  '\"\>", ",", "\<\"1\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"2\"\>", ",", "\<\"2d\"\>", ",", "\<\"2s\"\>", ",", "\<\"3\"\>", 
   ",", "\<\"4\"\>", ",", "\<\"4d\"\>", ",", "\<\"5\"\>", ",", "\<\"5s\"\>", 
   ",", "\<\"6\"\>", ",", "\<\"6d\"\>", ",", "\<\"7\"\>", ",", "\<\"8\"\>", 
   ",", "\<\"8d\"\>", ",", "\<\"9\"\>", ",", "\<\"a\"\>", ",", "\<\"A\"\>", 
   ",", "\<\"Aaron\"\>", ",", "\<\"AARON\"\>", ",", "\<\"abaissiez\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.915219572964403*^9, 3.915219624836638*^9}, {
  3.9152196696032124`*^9, 3.9152196743753443`*^9}},
 CellLabel->
  "Out[132]=",ExpressionUUID->"0fc54a5a-3219-4a4c-9776-61de33838dd9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1329, 831},
WindowMargins->{{Automatic, 62}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5daed444-bf0b-4743-8905-bbf06ba2a238"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 409, 10, 80, "Section",ExpressionUUID->"1c513c6f-8f87-4c9d-8451-96a35d878f1f"],
Cell[992, 34, 2966, 60, 319, "Input",ExpressionUUID->"aa7f075b-ab19-462d-bc75-ebb506bb4b37",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3983, 98, 170, 3, 81, "Subsection",ExpressionUUID->"bd555e99-4913-4692-bd7a-4a25d9397b86"],
Cell[4156, 103, 3336, 77, 257, "Input",ExpressionUUID->"88c45977-87a6-43da-a472-1375e06de5e4",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[7529, 185, 170, 3, 81, "Subsection",ExpressionUUID->"0d603c21-39e5-4526-9903-b3e39be7c687"],
Cell[7702, 190, 2614, 53, 195, "Input",ExpressionUUID->"ae6c1a48-2adb-4a54-b5b5-bd787af31395",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[10341, 247, 1284, 32, 164, "Input",ExpressionUUID->"f670372c-4baf-4acc-8092-4a308e3a58dc",
 InitializationCell->True],
Cell[11628, 281, 81880, 1481, 217, "Output",ExpressionUUID->"53e49852-d7d7-4a47-8d38-c970a242d8ae"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93557, 1768, 533, 11, 75, "Subsection",ExpressionUUID->"051b5aaf-582e-44b2-bf55-071a79fe48e3"],
Cell[CellGroupData[{
Cell[94115, 1783, 2400, 52, 536, "Input",ExpressionUUID->"3e3f1f12-06de-481f-bbaf-1187fb24eaac",
 InitializationCell->True],
Cell[96518, 1837, 382, 7, 52, "Output",ExpressionUUID->"f5b940ec-4852-4043-9bcc-9cbc58e1cc71"],
Cell[96903, 1846, 1308, 20, 84, "Output",ExpressionUUID->"8d9a4981-b415-4de7-b55f-914ffd7b9c6d"],
Cell[98214, 1868, 414, 8, 52, "Output",ExpressionUUID->"f8a6c327-a797-4695-b5a7-0a7c8358d971"],
Cell[98631, 1878, 520, 9, 84, "Output",ExpressionUUID->"ae85e5e1-ef23-4ddf-996a-c4eb1cbc4088"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99200, 1893, 315, 5, 81, "Subsection",ExpressionUUID->"476f85c1-ff94-4c98-af4a-277ffb8dbb1d"],
Cell[CellGroupData[{
Cell[99540, 1902, 2046, 46, 427, "Code",ExpressionUUID->"5cc5b71f-17c7-495f-a105-eae7dda9c795"],
Cell[101589, 1950, 55488, 1005, 123, "Output",ExpressionUUID->"a4925cd7-43a1-405d-8c25-52e49e8663c4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[157116, 2960, 348, 9, 80, "Section",ExpressionUUID->"c3556ca7-2ccc-495c-873e-091a1ed3b5e7"],
Cell[CellGroupData[{
Cell[157489, 2973, 374, 9, 57, "Section",ExpressionUUID->"75c102e7-924f-43d0-9965-3bedcc61cbcc"],
Cell[CellGroupData[{
Cell[157888, 2986, 460, 10, 75, "Subsection",ExpressionUUID->"ce4e79d6-61fd-4115-aa0a-c50ad893a249"],
Cell[158351, 2998, 6806, 149, 1218, "Input",ExpressionUUID->"343fed41-e445-4232-ac49-5d4bbf61a2a7",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[165194, 3152, 488, 10, 75, "Subsection",ExpressionUUID->"7281ebac-3ea5-42cb-916b-86f089935623"],
Cell[CellGroupData[{
Cell[165707, 3166, 21839, 460, 3134, "Input",ExpressionUUID->"6570253d-2ec5-46d5-bd9c-878710b67e95",
 InitializationCell->True],
Cell[187549, 3628, 984, 17, 52, "Output",ExpressionUUID->"28eae4e3-d534-4044-930b-10f3c2b8e0de"],
Cell[188536, 3647, 122607, 2544, 675, "Output",ExpressionUUID->"02e098fd-3bb4-4607-a9e3-6695087a714a"]
}, Open  ]],
Cell[311158, 6194, 152, 3, 46, "Input",ExpressionUUID->"892b07ff-6eea-45d2-b21e-e0aeef6e8e33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311347, 6202, 476, 10, 75, "Subsection",ExpressionUUID->"23f3c714-ae8f-4f3d-a1ae-aeabaf66d828"],
Cell[311826, 6214, 2820, 68, 326, "Input",ExpressionUUID->"706edbfe-fe5c-4603-930a-a2c191ebcc5a"],
Cell[314649, 6284, 3174, 69, 709, "Input",ExpressionUUID->"fa40c500-1355-4243-b538-f6382fcce81e",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[317848, 6357, 10645, 196, 1143, "Input",ExpressionUUID->"4725f2f3-49da-4d5a-a481-1632baa45cf8",
 InitializationCell->True],
Cell[328496, 6555, 313516, 5916, 94, "Output",ExpressionUUID->"b0edadaf-626b-4122-8096-3fc575973f1e"],
Cell[642015, 12473, 51998, 954, 93, "Output",ExpressionUUID->"2e976cc3-efc7-442e-a533-5b2d7740e637"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[694074, 13434, 72, 0, 146, "Title",ExpressionUUID->"a49bf865-41e3-45ad-accb-392b5cf0cac0"],
Cell[694149, 13436, 9174, 204, 1156, "Input",ExpressionUUID->"720918b8-cfde-43cc-9090-cb0a35e46d5e",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[703348, 13644, 396, 10, 80, "Section",ExpressionUUID->"5b0cb4d5-4558-4f45-ade9-7ebb61d65616"],
Cell[CellGroupData[{
Cell[703769, 13658, 5242, 102, 598, "Input",ExpressionUUID->"f639f689-192f-4f6a-98a8-037f8151eaa8",
 InitializationCell->True],
Cell[709014, 13762, 253517, 4734, 125, "Output",ExpressionUUID->"cc107849-ebde-40bf-a60d-21dd8850a912"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[962580, 18502, 525, 11, 80, "Section",ExpressionUUID->"43c0c6ce-16d5-49c2-b1f8-13f4d8d0ad02"],
Cell[CellGroupData[{
Cell[963130, 18517, 3474, 69, 381, "Input",ExpressionUUID->"be2afe7b-d930-4875-93de-deb90712c369",
 InitializationCell->True],
Cell[966607, 18588, 307301, 5688, 125, "Output",ExpressionUUID->"afb6c992-2bad-4361-b178-a7098391188e"],
Cell[1273911, 24278, 271655, 4917, 850, "Output",ExpressionUUID->"591515fa-9aeb-442c-a1ff-47f4e86213e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1545603, 29200, 370, 9, 75, "Subsection",ExpressionUUID->"26e19b99-b3a6-4efc-bf23-8aef3ee708c1"],
Cell[CellGroupData[{
Cell[1545998, 29213, 2582, 40, 133, "Input",ExpressionUUID->"637a17ff-eefa-49ab-b765-b990ab5fb0b6",
 InitializationCell->True],
Cell[1548583, 29255, 24226, 542, 697, "Output",ExpressionUUID->"c22d3b2c-6115-43f1-b9f0-58264614899e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1572846, 29802, 428, 9, 63, "Subsubsection",ExpressionUUID->"ff85480d-73df-4625-8933-b8c2c7a4c52c"],
Cell[CellGroupData[{
Cell[1573299, 29815, 1786, 34, 195, "Input",ExpressionUUID->"ea04fcec-96f1-4f50-9066-f90abb4b4369",
 InitializationCell->True],
Cell[1575088, 29851, 462, 11, 41, "Message",ExpressionUUID->"bdc82b04-2624-4e75-af9c-5d6a3faf11d5"],
Cell[1575553, 29864, 467, 11, 41, "Message",ExpressionUUID->"3d9998c6-4b9d-4a66-be59-203b24bd4f58"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1576081, 29882, 398, 9, 75, "Subsection",ExpressionUUID->"cc7beea3-1782-4d9e-88eb-ebced75ae910"],
Cell[1576482, 29893, 576, 9, 46, "Input",ExpressionUUID->"1403f181-012a-419f-895e-fe56543b7575"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1577095, 29907, 421, 10, 75, "Subsection",ExpressionUUID->"40776c19-713b-41c7-b739-75ee5d360b3e"],
Cell[1577519, 29919, 841, 12, 157, "Input",ExpressionUUID->"6b1986cb-2ec0-4f7b-b273-9c728ce4d291",
 InitializationCell->True],
Cell[1578363, 29933, 531, 8, 103, "Input",ExpressionUUID->"b34b8491-c7b0-4219-b4bf-6f6b7853e1d9"]
}, Closed]],
Cell[CellGroupData[{
Cell[1578931, 29946, 160, 3, 55, "Subsection",ExpressionUUID->"5a7f7d9c-8bce-43a5-ad4b-2fce560ead21"],
Cell[1579094, 29951, 1345, 21, 78, "Code",ExpressionUUID->"37cc532f-2315-4662-9d19-d3647be7c2bd"],
Cell[CellGroupData[{
Cell[1580464, 29976, 1525, 41, 195, "Input",ExpressionUUID->"8f03473a-46a4-4681-92b5-337af9868f28",
 InitializationCell->True],
Cell[1581992, 30019, 304637, 5637, 507, "Output",ExpressionUUID->"b6e62c9c-a84c-40d5-8f7b-1a423caebf90"]
}, Open  ]],
Cell[1886644, 35659, 754, 18, 46, "Input",ExpressionUUID->"684b020b-d788-48d3-882a-56ffe325015f"],
Cell[1887401, 35679, 1243, 31, 109, "Input",ExpressionUUID->"a0c7c2bc-458b-49de-8f2f-3ec9fbee95f8"],
Cell[1888647, 35712, 724, 20, 78, "Input",ExpressionUUID->"ecbb4a20-210b-4de0-a6c4-adcbec15af59"],
Cell[1889374, 35734, 727, 20, 78, "Input",ExpressionUUID->"e6b99733-eb7f-43c7-95e7-18ce9534231f"],
Cell[CellGroupData[{
Cell[1890126, 35758, 2050, 47, 264, "Input",ExpressionUUID->"21c42820-91ad-45c3-88c7-1ec6b256973c"],
Cell[1892179, 35807, 176, 2, 52, "Output",ExpressionUUID->"01c925f5-f19b-44ab-96e2-0a1eabcbd20b"],
Cell[1892358, 35811, 322, 5, 52, "Output",ExpressionUUID->"9b422fe9-7b32-49a4-9667-fa3218dc24b4"],
Cell[1892683, 35818, 652, 20, 347, "Output",ExpressionUUID->"aa5da184-02e8-4751-9547-522d822d03b0"]
}, Open  ]],
Cell[1893350, 35841, 150, 3, 46, "Input",ExpressionUUID->"c7ee229c-e162-47be-beed-2f77134b75cb"],
Cell[1893503, 35846, 176, 3, 46, "Input",ExpressionUUID->"e83517f8-c49e-4a2e-a40e-36018320cf57"],
Cell[1893682, 35851, 200, 4, 46, "Input",ExpressionUUID->"b7f9b9e0-b656-4770-91b2-fb1210216ba5"],
Cell[1893885, 35857, 572, 9, 46, "Input",ExpressionUUID->"ba2e1ba9-1b15-4e09-9085-97d0bca0d475"],
Cell[1894460, 35868, 243, 5, 46, "Input",ExpressionUUID->"378e2ad8-9fd4-4b32-8e08-d2e49e3a64c5"],
Cell[1894706, 35875, 692, 18, 264, "Input",ExpressionUUID->"a0353a9e-ad1c-4570-99aa-057a257f1741"],
Cell[1895401, 35895, 3487, 87, 512, "Input",ExpressionUUID->"4d1d0b32-60cc-48c7-9107-d6eda4f5d75f"],
Cell[1898891, 35984, 3075, 83, 419, "Input",ExpressionUUID->"cf71b08b-0fd4-4edc-b0b7-8cd2932f273d"],
Cell[1901969, 36069, 1196, 30, 202, "Input",ExpressionUUID->"d06df01c-368a-4180-a303-d8cfc0f8e6c6"],
Cell[1903168, 36101, 252, 5, 46, "Input",ExpressionUUID->"96726447-9dc9-4a4d-8ac8-6d80e3c1d01c"],
Cell[CellGroupData[{
Cell[1903445, 36110, 826, 21, 109, "Input",ExpressionUUID->"e749dbc9-8728-44f6-ae2b-e4941cf9db6e"],
Cell[1904274, 36133, 4860, 106, 309, "Output",ExpressionUUID->"716292b6-f0f9-44a9-9e05-d04d09520fad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1909171, 36244, 440, 11, 78, "Input",ExpressionUUID->"05bde464-4096-49bc-8d27-a82326007a70"],
Cell[1909614, 36257, 483, 9, 52, "Output",ExpressionUUID->"6f119f86-8077-4d91-94ad-20703f429e85"],
Cell[1910100, 36268, 4090, 62, 394, "Output",ExpressionUUID->"0fc54a5a-3219-4a4c-9776-61de33838dd9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

